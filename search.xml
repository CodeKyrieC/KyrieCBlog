<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Springboot整合阿里云OSS</title>
      <link href="/KyrieCBlog/2023/10/28/java_oss/"/>
      <url>/KyrieCBlog/2023/10/28/java_oss/</url>
      
        <content type="html"><![CDATA[<h2 id="创建对象存储oss服务，创建bucket"><a href="#创建对象存储oss服务，创建bucket" class="headerlink" title="创建对象存储oss服务，创建bucket"></a>创建对象存储oss服务，创建bucket</h2><h2 id="进入AccessKey创建并记录AccessKey-ID与AccessKey-Secret"><a href="#进入AccessKey创建并记录AccessKey-ID与AccessKey-Secret" class="headerlink" title="进入AccessKey创建并记录AccessKey ID与AccessKey Secret"></a>进入AccessKey创建并记录AccessKey ID与AccessKey Secret</h2><h2 id="导入官方SDK"><a href="#导入官方SDK" class="headerlink" title="导入官方SDK"></a>导入官方SDK</h2><pre class=" language-xml"><code class="language-xml">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.aliyun.oss<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>aliyun-sdk-oss<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.8.3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>4.12<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>commons-lang<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>commons-lang<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.6<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>         <span class="token comment" spellcheck="true">&lt;!-- lombok --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.projectlombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>lombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.18.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span></code></pre><h2 id="配置文件中配置控制台的AccessKey"><a href="#配置文件中配置控制台的AccessKey" class="headerlink" title="配置文件中配置控制台的AccessKey"></a>配置文件中配置控制台的AccessKey</h2><pre class=" language-yml"><code class="language-yml">aliyun:  oss:    file:      endpoint: oss-cn-wuhan-lr.aliyuncs.com      keyid: LTAI5tCKyLYkLhZaCiFh9w4e      keysecret:       bucketname: springboot-blog-pic</code></pre><h2 id="添加一个配置类，读取配置文件信息"><a href="#添加一个配置类，读取配置文件信息" class="headerlink" title="添加一个配置类，读取配置文件信息"></a>添加一个配置类，读取配置文件信息</h2><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>InitializingBean<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Value<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>context<span class="token punctuation">.</span>properties<span class="token punctuation">.</span>ConfigurationProperties<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span>Component<span class="token punctuation">;</span> <span class="token annotation punctuation">@Component</span><span class="token annotation punctuation">@ConfigurationProperties</span><span class="token punctuation">(</span>prefix <span class="token operator">=</span> <span class="token string">"oss.aliyun"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ConstantPropertiesUtils</span> <span class="token keyword">implements</span> <span class="token class-name">InitializingBean</span> <span class="token punctuation">{</span>     <span class="token comment" spellcheck="true">//读取配置文件的内容</span>    <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">"${aliyun.oss.file.endpoint}"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> String endpoint<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">"${aliyun.oss.file.keyid}"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> String keyId<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">"${aliyun.oss.file.keysecret}"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> String keySecret<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">"${aliyun.oss.file.bucketname}"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> String bucketName<span class="token punctuation">;</span>     <span class="token comment" spellcheck="true">//定义公共静态常量</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> String END_POINT<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> String ACCESS_KEY_ID<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> String ACCESS_KEY_SECRET<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> String BUCKET_NAME<span class="token punctuation">;</span>     <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">afterPropertiesSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>        END_POINT <span class="token operator">=</span> endpoint<span class="token punctuation">;</span>        ACCESS_KEY_ID <span class="token operator">=</span> keyId<span class="token punctuation">;</span>        ACCESS_KEY_SECRET <span class="token operator">=</span> keySecret<span class="token punctuation">;</span>        BUCKET_NAME <span class="token operator">=</span> bucketName<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h2 id="编写控制类"><a href="#编写控制类" class="headerlink" title="编写控制类"></a>编写控制类</h2><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> cn<span class="token punctuation">.</span>kyriec<span class="token punctuation">.</span>Controller<span class="token punctuation">;</span><span class="token keyword">import</span> cn<span class="token punctuation">.</span>kyriec<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>entity<span class="token punctuation">.</span>ResponseResult<span class="token punctuation">;</span><span class="token keyword">import</span> cn<span class="token punctuation">.</span>kyriec<span class="token punctuation">.</span>service<span class="token punctuation">.</span>UploadService<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Autowired<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>PostMapping<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>RestController<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>multipart<span class="token punctuation">.</span>MultipartFile<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * Author by KyrieC * Created by sheting on 2023/10/28 */</span><span class="token annotation punctuation">@RestController</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UploadController</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> UploadService uploadService<span class="token punctuation">;</span>    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"/upload"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> ResponseResult <span class="token function">uploadImg</span><span class="token punctuation">(</span>MultipartFile img<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> uploadService<span class="token punctuation">.</span><span class="token function">uploadImg</span><span class="token punctuation">(</span>img<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h2 id="编写接口与实现类"><a href="#编写接口与实现类" class="headerlink" title="编写接口与实现类"></a>编写接口与实现类</h2><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> cn<span class="token punctuation">.</span>kyriec<span class="token punctuation">.</span>service<span class="token punctuation">;</span><span class="token keyword">import</span> cn<span class="token punctuation">.</span>kyriec<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>entity<span class="token punctuation">.</span>ResponseResult<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>multipart<span class="token punctuation">.</span>MultipartFile<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * Author by KyrieC * Created by sheting on 2023/10/28 */</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UploadService</span> <span class="token punctuation">{</span>    ResponseResult <span class="token function">uploadImg</span><span class="token punctuation">(</span>MultipartFile img<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> cn<span class="token punctuation">.</span>kyriec<span class="token punctuation">.</span>service<span class="token punctuation">.</span>Impl<span class="token punctuation">;</span><span class="token keyword">import</span> cn<span class="token punctuation">.</span>kyriec<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>entity<span class="token punctuation">.</span>ResponseResult<span class="token punctuation">;</span><span class="token keyword">import</span> cn<span class="token punctuation">.</span>kyriec<span class="token punctuation">.</span>service<span class="token punctuation">.</span>UploadService<span class="token punctuation">;</span><span class="token keyword">import</span> cn<span class="token punctuation">.</span>kyriec<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>AliyunOssUtil<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>aliyun<span class="token punctuation">.</span>oss<span class="token punctuation">.</span>OSS<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>aliyun<span class="token punctuation">.</span>oss<span class="token punctuation">.</span>OSSClient<span class="token punctuation">;</span><span class="token keyword">import</span> lombok<span class="token punctuation">.</span>Data<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span>Service<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>multipart<span class="token punctuation">.</span>MultipartFile<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>IOException<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>InputStream<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>UUID<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * Author by KyrieC * Created by sheting on 2023/10/28 */</span><span class="token annotation punctuation">@Service</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">OssUploadService</span> <span class="token keyword">implements</span> <span class="token class-name">UploadService</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> ResponseResult <span class="token function">uploadImg</span><span class="token punctuation">(</span>MultipartFile file<span class="token punctuation">)</span> <span class="token punctuation">{</span>        String endpoint <span class="token operator">=</span> AliyunOssUtil<span class="token punctuation">.</span>END_POINT<span class="token punctuation">;</span>        String accessKeyId <span class="token operator">=</span> AliyunOssUtil<span class="token punctuation">.</span>ACCESS_KEY_ID<span class="token punctuation">;</span>        String accessKeySecret <span class="token operator">=</span> AliyunOssUtil<span class="token punctuation">.</span>ACCESS_KEY_SECRET<span class="token punctuation">;</span>        String bucketName <span class="token operator">=</span> AliyunOssUtil<span class="token punctuation">.</span>BUCKET_NAME<span class="token punctuation">;</span>        String url <span class="token operator">=</span> null<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//创建OSSClient实例。</span>        OSS ossClient <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">OSSClient</span><span class="token punctuation">(</span>endpoint<span class="token punctuation">,</span> accessKeyId<span class="token punctuation">,</span> accessKeySecret<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//获取上传文件输入流</span>        InputStream inputStream <span class="token operator">=</span> null<span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            inputStream <span class="token operator">=</span> file<span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">//获取文件名称</span>        String fileName <span class="token operator">=</span> file<span class="token punctuation">.</span><span class="token function">getOriginalFilename</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//保证文件名唯一，去掉uuid中的'-'</span>        String uuid <span class="token operator">=</span> UUID<span class="token punctuation">.</span><span class="token function">randomUUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replaceAll</span><span class="token punctuation">(</span><span class="token string">"-"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        fileName <span class="token operator">=</span> uuid <span class="token operator">+</span> fileName<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//把文件按日期分类，构建日期路径：avatar/2019/02/26/文件名</span>        <span class="token comment" spellcheck="true">//String datePath = new Date().toString("yyyy/MM/dd");</span>        String datePath <span class="token operator">=</span> <span class="token string">"2023"</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//拼接</span>        fileName <span class="token operator">=</span> datePath <span class="token operator">+</span> <span class="token string">"/"</span> <span class="token operator">+</span> fileName<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//调用oss方法上传到阿里云</span>        <span class="token comment" spellcheck="true">//第一个参数：Bucket名称</span>        <span class="token comment" spellcheck="true">//第二个参数：上传到oss文件路径和文件名称</span>        <span class="token comment" spellcheck="true">//第三个参数：上传文件输入流</span>        ossClient<span class="token punctuation">.</span><span class="token function">putObject</span><span class="token punctuation">(</span>bucketName<span class="token punctuation">,</span> fileName<span class="token punctuation">,</span> inputStream<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//把上传后把文件url返回</span>        <span class="token comment" spellcheck="true">//https://xppll.oss-cn-beijing.aliyuncs.com/01.jpg</span>        url <span class="token operator">=</span> <span class="token string">"https://"</span> <span class="token operator">+</span> bucketName <span class="token operator">+</span> <span class="token string">"."</span> <span class="token operator">+</span> endpoint <span class="token operator">+</span> <span class="token string">"/"</span> <span class="token operator">+</span> fileName<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//关闭OSSClient</span>        ossClient<span class="token punctuation">.</span><span class="token function">shutdown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> ResponseResult<span class="token punctuation">.</span><span class="token function">okResult</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>参考博客：<a href="https://blog.csdn.net/kenkao/article/details/128880448">SpringBoot整合阿里云OSS详细教程_springboot 阿里云oss-CSDN博客</a></p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JAVA中List集合Stream流详解与lambda表达式</title>
      <link href="/KyrieCBlog/2023/10/09/java_list/"/>
      <url>/KyrieCBlog/2023/10/09/java_list/</url>
      
        <content type="html"><![CDATA[<h1 id="JAVA中List集合Stream流详解与lambda表达式"><a href="#JAVA中List集合Stream流详解与lambda表达式" class="headerlink" title="JAVA中List集合Stream流详解与lambda表达式"></a>JAVA中List集合Stream流详解与lambda表达式</h1><p>JDK8 中的 Stream 是对集合（Collection）对象功能的增强，它借助于lambda表达式，更优雅的表达风格，极大的提高编程效率和程序可读性。它针对于对集合对象进行各种非常便利、高效的聚合操作，或者大批量数据操作</p><p>（与js中高阶函数相似）</p><p>参考博客：  <a href="https://blog.csdn.net/wuxiong1028/article/details/105009682">JAVA中List集合Stream流详解_list stream-CSDN博客</a></p><p><a href="https://blog.csdn.net/qq_45263520/article/details/123772771?ops_request_misc=%7B%22request_id%22:%22169682555016777224415655%22,%22scm%22:%2220140713.130102334..%22%7D&amp;request_id=169682555016777224415655&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~blog~top_click~default-1-123772771-null-null.nonecase&amp;utm_term=java%E4%B8%ADlambda&amp;spm=1018.2226.3001.4450">Java中Lambda表达式使用及详解_java lambda表达式-CSDN博客</a></p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一辈子永远保证</title>
      <link href="/KyrieCBlog/2023/10/06/1314/"/>
      <url>/KyrieCBlog/2023/10/06/1314/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="256ceda647e25306e772f66f8bc2d6660709453df273630a0ec88f3698d31767"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">只有我最信任的邹邹同学能够查看</span>      </label>    </div>  </div></div><script data-pjax src="/KyrieCBlog/lib/hbe.js"></script><link href="/KyrieCBlog/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 生命中的一束光 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 一辈子保证 </tag>
            
            <tag> 永远不变 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前后端分离个人博客项目</title>
      <link href="/KyrieCBlog/2023/09/24/springboot_vue_blog/"/>
      <url>/KyrieCBlog/2023/09/24/springboot_vue_blog/</url>
      
        <content type="html"><![CDATA[<h1 id="项目实战-前后端分离博客系统"><a href="#项目实战-前后端分离博客系统" class="headerlink" title="项目实战-前后端分离博客系统"></a>项目实战-前后端分离博客系统</h1><h2 id="1-课程介绍"><a href="#1-课程介绍" class="headerlink" title="1.课程介绍"></a>1.课程介绍</h2><ul><li>纯后端讲解</li><li>完整的前台后台代码编写</li><li>主流技术栈（SpringBoot,MybatisPlus,SpringSecurity,EasyExcel,Swagger2,Redis,Echarts,Vue,ElementUI….）</li><li>完善细致的需求分析</li><li>由易到难循序渐进</li></ul><h2 id="2-创建工程"><a href="#2-创建工程" class="headerlink" title="2.创建工程"></a>2.创建工程</h2><p>​我们有前台和后台两套系统。两套系统的前端工程都已经提供好了。所以我们只需要写两套系统的后端。</p><p>​但是大家思考下，实际上两套后端系统的很多内容是可能重复的。这里如果我们只是单纯的创建两个后端工程。那么就会有大量的重复代码，并且需要修改的时候也需要修改两次。这就是代码复用性不高。</p><p>​所以我们需要创建多模块项目，两套系统可能都会用到的代码可以写到一个公共模块中，让前台系统和后台系统分别取依赖公共模块。</p><p>① 创建父模块</p><pre class=" language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">></span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.sangeng<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>SGBlog<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>packaging</span><span class="token punctuation">></span></span>pom<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>packaging</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.0-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modules</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>module</span><span class="token punctuation">></span></span>sangeng-framework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>module</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>module</span><span class="token punctuation">></span></span>sangeng-admin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>module</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>module</span><span class="token punctuation">></span></span>sangeng-blog<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>module</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modules</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project.build.sourceEncoding</span><span class="token punctuation">></span></span>UTF-8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project.build.sourceEncoding</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>java.version</span><span class="token punctuation">></span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>java.version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencyManagement</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!-- SpringBoot的依赖配置--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-dependencies<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.5.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>type</span><span class="token punctuation">></span></span>pom<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>type</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">></span></span>import<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!--fastjson依赖--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.alibaba<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>fastjson<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.2.33<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!--jwt依赖--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>io.jsonwebtoken<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>jjwt<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>0.9.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!--mybatisPlus依赖--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.baomidou<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>mybatis-plus-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>3.4.3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!--阿里云OSS--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.aliyun.oss<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>aliyun-sdk-oss<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>3.10.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.alibaba<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>easyexcel<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>3.0.5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>io.springfox<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>springfox-swagger2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.9.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>io.springfox<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>springfox-swagger-ui<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.9.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencyManagement</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.maven.plugins<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>maven-compiler-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>3.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>source</span><span class="token punctuation">></span></span>${java.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>source</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>target</span><span class="token punctuation">></span></span>${java.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>target</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>encoding</span><span class="token punctuation">></span></span>${project.build.sourceEncoding}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>encoding</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project</span><span class="token punctuation">></span></span></code></pre><p>②创建公共子模块 sangeng-framework</p><pre class=" language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>parent</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>SGBlog<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.sangeng<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.0-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>parent</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">></span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>sangeng-framework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!--lombk--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.projectlombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>lombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>optional</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>optional</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!--junit--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">></span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!--SpringSecurity启动器--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-security<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!--redis依赖--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-data-redis<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!--fastjson依赖--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.alibaba<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>fastjson<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!--jwt依赖--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>io.jsonwebtoken<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>jjwt<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!--mybatisPlus依赖--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.baomidou<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>mybatis-plus-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!--mysql数据库驱动--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>mysql<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>mysql-connector-java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!--阿里云OSS--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.aliyun.oss<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>aliyun-sdk-oss<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!--AOP--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-aop<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.alibaba<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>easyexcel<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>io.springfox<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>springfox-swagger2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>io.springfox<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>springfox-swagger-ui<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project</span><span class="token punctuation">></span></span></code></pre><p>③创建博客后台模块sangeng-admin</p><pre class=" language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>parent</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>SGBlog<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.sangeng<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.0-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>parent</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">></span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>sangeng-admin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.sangeng<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>sangeng-framework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.0-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project</span><span class="token punctuation">></span></span></code></pre><p>④创建博客前台模块sangeng-blog</p><pre class=" language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>parent</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>SGBlog<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.sangeng<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.0-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>parent</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">></span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>sangeng-blog<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.sangeng<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>sangeng-framework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.0-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project</span><span class="token punctuation">></span></span></code></pre><h2 id="3-博客前台"><a href="#3-博客前台" class="headerlink" title="3.博客前台"></a>3.博客前台</h2><h3 id="3-0-准备工作"><a href="#3-0-准备工作" class="headerlink" title="3.0 准备工作"></a>3.0 准备工作</h3><h4 id="3-1-SpringBoot和MybatisPuls整合配置测试"><a href="#3-1-SpringBoot和MybatisPuls整合配置测试" class="headerlink" title="3.1 SpringBoot和MybatisPuls整合配置测试"></a>3.1 SpringBoot和MybatisPuls整合配置测试</h4><p>①创建启动类</p><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">/** * @Author 三更  B站： https://space.bilibili.com/663528522 */</span><span class="token annotation punctuation">@SpringBootApplication</span><span class="token annotation punctuation">@MapperScan</span><span class="token punctuation">(</span><span class="token string">"com.sangeng.mapper"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SanGengBlogApplication</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        SpringApplication<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span>SanGengBlogApplication<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>②创建application.yml配置文件</p><pre class=" language-yml"><code class="language-yml">server:  port: 7777spring:  datasource:    url: jdbc:mysql://localhost:3306/sg_blog?characterEncoding=utf-8&serverTimezone=Asia/Shanghai    username: root    password: root    driver-class-name: com.mysql.cj.jdbc.Driver  servlet:    multipart:      max-file-size: 2MB      max-request-size: 5MBmybatis-plus:  configuration:    # 日志    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl  global-config:    db-config:      logic-delete-field: delFlag      logic-delete-value: 1      logic-not-delete-value: 0      id-type: auto</code></pre><p>③ SQL语句</p><p>​SQL脚本：SGBlog\资源\SQL\sg_article.sql</p><p>④ 创建实体类，Mapper，Service </p><p>​注意思考这些文件应该写在哪个模块下？</p><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@SuppressWarnings</span><span class="token punctuation">(</span><span class="token string">"serial"</span><span class="token punctuation">)</span><span class="token annotation punctuation">@Data</span><span class="token annotation punctuation">@AllArgsConstructor</span><span class="token annotation punctuation">@NoArgsConstructor</span><span class="token annotation punctuation">@TableName</span><span class="token punctuation">(</span><span class="token string">"sg_article"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Article</span>  <span class="token punctuation">{</span>    <span class="token annotation punctuation">@TableId</span>    <span class="token keyword">private</span> Long id<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//标题</span>    <span class="token keyword">private</span> String title<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//文章内容</span>    <span class="token keyword">private</span> String content<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//文章类型:1 文章 2草稿</span>    <span class="token keyword">private</span> String type<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//文章摘要</span>    <span class="token keyword">private</span> String summary<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//所属分类id</span>    <span class="token keyword">private</span> Long categoryId<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//缩略图</span>    <span class="token keyword">private</span> String thumbnail<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//是否置顶（0否，1是）</span>    <span class="token keyword">private</span> String isTop<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//状态（0已发布，1草稿）</span>    <span class="token keyword">private</span> String status<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//评论数</span>    <span class="token keyword">private</span> Integer commentCount<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//访问量</span>    <span class="token keyword">private</span> Long viewCount<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//是否允许评论 1是，0否</span>    <span class="token keyword">private</span> String isComment<span class="token punctuation">;</span>        <span class="token keyword">private</span> Long createBy<span class="token punctuation">;</span>        <span class="token keyword">private</span> Date createTime<span class="token punctuation">;</span>        <span class="token keyword">private</span> Long updateBy<span class="token punctuation">;</span>        <span class="token keyword">private</span> Date updateTime<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//删除标志（0代表未删除，1代表已删除）</span>    <span class="token keyword">private</span> Integer delFlag<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">ArticleMapper</span> <span class="token keyword">extends</span> <span class="token class-name">BaseMapper</span><span class="token operator">&lt;</span>Article<span class="token operator">></span> <span class="token punctuation">{</span><span class="token punctuation">}</span></code></pre><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">ArticleService</span> <span class="token keyword">extends</span> <span class="token class-name">IService</span><span class="token operator">&lt;</span>Article<span class="token operator">></span> <span class="token punctuation">{</span><span class="token punctuation">}</span></code></pre><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Service</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ArticleServiceImpl</span> <span class="token keyword">extends</span> <span class="token class-name">ServiceImpl</span><span class="token operator">&lt;</span>ArticleMapper<span class="token punctuation">,</span> Article<span class="token operator">></span> <span class="token keyword">implements</span> <span class="token class-name">ArticleService</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></code></pre><p>⑤ 创建Controller测试接口</p><p>​注意思考这些文件应该写在哪个模块下？</p><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@RestController</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/article"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ArticleController</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> ArticleService articleService<span class="token punctuation">;</span>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/list"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> List<span class="token operator">&lt;</span>Article<span class="token operator">></span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> articleService<span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>​我们可以暂时先注释掉sangeng-framework中的SpringSecurity依赖方便测试</p><h3 id="3-1-热门文章列表"><a href="#3-1-热门文章列表" class="headerlink" title="3.1 热门文章列表"></a>3.1 热门文章列表</h3><h4 id="3-1-0-文章表分析"><a href="#3-1-0-文章表分析" class="headerlink" title="3.1.0 文章表分析"></a>3.1.0 文章表分析</h4><p>​通过需求去分析需要有哪些字段。</p><h4 id="3-1-1-需求"><a href="#3-1-1-需求" class="headerlink" title="3.1.1 需求"></a>3.1.1 需求</h4><p>​需要查询浏览量最高的前10篇文章的信息。要求展示文章标题和浏览量。把能让用户自己点击跳转到具体的文章详情进行浏览。</p><p>​注意：不能把草稿展示出来，不能把删除了的文章查询出来。要按照浏览量进行降序排序。</p><h4 id="3-1-2-接口设计"><a href="#3-1-2-接口设计" class="headerlink" title="3.1.2 接口设计"></a>3.1.2 接口设计</h4><p>​见接口文档</p><h4 id="3-1-3-基础版本代码实现"><a href="#3-1-3-基础版本代码实现" class="headerlink" title="3.1.3 基础版本代码实现"></a>3.1.3 基础版本代码实现</h4><p>①准备工作</p><p>统一响应类和响应枚举</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>sangeng<span class="token punctuation">.</span>domain<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>JsonInclude<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>sangeng<span class="token punctuation">.</span>enums<span class="token punctuation">.</span>AppHttpCodeEnum<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>Serializable<span class="token punctuation">;</span><span class="token annotation punctuation">@JsonInclude</span><span class="token punctuation">(</span>JsonInclude<span class="token punctuation">.</span>Include<span class="token punctuation">.</span>NON_NULL<span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ResponseResult</span><span class="token operator">&lt;</span>T<span class="token operator">></span> <span class="token keyword">implements</span> <span class="token class-name">Serializable</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> Integer code<span class="token punctuation">;</span>    <span class="token keyword">private</span> String msg<span class="token punctuation">;</span>    <span class="token keyword">private</span> T data<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token function">ResponseResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>code <span class="token operator">=</span> AppHttpCodeEnum<span class="token punctuation">.</span>SUCCESS<span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>msg <span class="token operator">=</span> AppHttpCodeEnum<span class="token punctuation">.</span>SUCCESS<span class="token punctuation">.</span><span class="token function">getMsg</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token function">ResponseResult</span><span class="token punctuation">(</span>Integer code<span class="token punctuation">,</span> T data<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>code <span class="token operator">=</span> code<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>data <span class="token operator">=</span> data<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token function">ResponseResult</span><span class="token punctuation">(</span>Integer code<span class="token punctuation">,</span> String msg<span class="token punctuation">,</span> T data<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>code <span class="token operator">=</span> code<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>msg <span class="token operator">=</span> msg<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>data <span class="token operator">=</span> data<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token function">ResponseResult</span><span class="token punctuation">(</span>Integer code<span class="token punctuation">,</span> String msg<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>code <span class="token operator">=</span> code<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>msg <span class="token operator">=</span> msg<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> ResponseResult <span class="token function">errorResult</span><span class="token punctuation">(</span><span class="token keyword">int</span> code<span class="token punctuation">,</span> String msg<span class="token punctuation">)</span> <span class="token punctuation">{</span>        ResponseResult result <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ResponseResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> result<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>code<span class="token punctuation">,</span> msg<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> ResponseResult <span class="token function">okResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        ResponseResult result <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ResponseResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> result<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> ResponseResult <span class="token function">okResult</span><span class="token punctuation">(</span><span class="token keyword">int</span> code<span class="token punctuation">,</span> String msg<span class="token punctuation">)</span> <span class="token punctuation">{</span>        ResponseResult result <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ResponseResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> result<span class="token punctuation">.</span><span class="token function">ok</span><span class="token punctuation">(</span>code<span class="token punctuation">,</span> null<span class="token punctuation">,</span> msg<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> ResponseResult <span class="token function">okResult</span><span class="token punctuation">(</span>Object data<span class="token punctuation">)</span> <span class="token punctuation">{</span>        ResponseResult result <span class="token operator">=</span> <span class="token function">setAppHttpCodeEnum</span><span class="token punctuation">(</span>AppHttpCodeEnum<span class="token punctuation">.</span>SUCCESS<span class="token punctuation">,</span> AppHttpCodeEnum<span class="token punctuation">.</span>SUCCESS<span class="token punctuation">.</span><span class="token function">getMsg</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>data<span class="token operator">!=</span>null<span class="token punctuation">)</span> <span class="token punctuation">{</span>            result<span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> result<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> ResponseResult <span class="token function">errorResult</span><span class="token punctuation">(</span>AppHttpCodeEnum enums<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token function">setAppHttpCodeEnum</span><span class="token punctuation">(</span>enums<span class="token punctuation">,</span>enums<span class="token punctuation">.</span><span class="token function">getMsg</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> ResponseResult <span class="token function">errorResult</span><span class="token punctuation">(</span>AppHttpCodeEnum enums<span class="token punctuation">,</span> String msg<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token function">setAppHttpCodeEnum</span><span class="token punctuation">(</span>enums<span class="token punctuation">,</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> ResponseResult <span class="token function">setAppHttpCodeEnum</span><span class="token punctuation">(</span>AppHttpCodeEnum enums<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token function">okResult</span><span class="token punctuation">(</span>enums<span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>enums<span class="token punctuation">.</span><span class="token function">getMsg</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> ResponseResult <span class="token function">setAppHttpCodeEnum</span><span class="token punctuation">(</span>AppHttpCodeEnum enums<span class="token punctuation">,</span> String msg<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token function">okResult</span><span class="token punctuation">(</span>enums<span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> ResponseResult<span class="token operator">&lt;</span><span class="token operator">?</span><span class="token operator">></span> <span class="token function">error</span><span class="token punctuation">(</span>Integer code<span class="token punctuation">,</span> String msg<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>code <span class="token operator">=</span> code<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>msg <span class="token operator">=</span> msg<span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> ResponseResult<span class="token operator">&lt;</span><span class="token operator">?</span><span class="token operator">></span> <span class="token function">ok</span><span class="token punctuation">(</span>Integer code<span class="token punctuation">,</span> T data<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>code <span class="token operator">=</span> code<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>data <span class="token operator">=</span> data<span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> ResponseResult<span class="token operator">&lt;</span><span class="token operator">?</span><span class="token operator">></span> <span class="token function">ok</span><span class="token punctuation">(</span>Integer code<span class="token punctuation">,</span> T data<span class="token punctuation">,</span> String msg<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>code <span class="token operator">=</span> code<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>data <span class="token operator">=</span> data<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>msg <span class="token operator">=</span> msg<span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> ResponseResult<span class="token operator">&lt;</span><span class="token operator">?</span><span class="token operator">></span> <span class="token function">ok</span><span class="token punctuation">(</span>T data<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>data <span class="token operator">=</span> data<span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> Integer <span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> code<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setCode</span><span class="token punctuation">(</span>Integer code<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>code <span class="token operator">=</span> code<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> String <span class="token function">getMsg</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> msg<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setMsg</span><span class="token punctuation">(</span>String msg<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>msg <span class="token operator">=</span> msg<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> T <span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> data<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setData</span><span class="token punctuation">(</span>T data<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>data <span class="token operator">=</span> data<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>sangeng<span class="token punctuation">.</span>enums<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">enum</span> AppHttpCodeEnum <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 成功</span>    <span class="token function">SUCCESS</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span><span class="token string">"操作成功"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true">// 登录</span>    <span class="token function">NEED_LOGIN</span><span class="token punctuation">(</span><span class="token number">401</span><span class="token punctuation">,</span><span class="token string">"需要登录后操作"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token function">NO_OPERATOR_AUTH</span><span class="token punctuation">(</span><span class="token number">403</span><span class="token punctuation">,</span><span class="token string">"无权限操作"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token function">SYSTEM_ERROR</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">,</span><span class="token string">"出现错误"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token function">USERNAME_EXIST</span><span class="token punctuation">(</span><span class="token number">501</span><span class="token punctuation">,</span><span class="token string">"用户名已存在"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>     <span class="token function">PHONENUMBER_EXIST</span><span class="token punctuation">(</span><span class="token number">502</span><span class="token punctuation">,</span><span class="token string">"手机号已存在"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">EMAIL_EXIST</span><span class="token punctuation">(</span><span class="token number">503</span><span class="token punctuation">,</span> <span class="token string">"邮箱已存在"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token function">REQUIRE_USERNAME</span><span class="token punctuation">(</span><span class="token number">504</span><span class="token punctuation">,</span> <span class="token string">"必需填写用户名"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token function">LOGIN_ERROR</span><span class="token punctuation">(</span><span class="token number">505</span><span class="token punctuation">,</span><span class="token string">"用户名或密码错误"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> code<span class="token punctuation">;</span>    String msg<span class="token punctuation">;</span>    <span class="token function">AppHttpCodeEnum</span><span class="token punctuation">(</span><span class="token keyword">int</span> code<span class="token punctuation">,</span> String errorMessage<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>code <span class="token operator">=</span> code<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>msg <span class="token operator">=</span> errorMessage<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> code<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> String <span class="token function">getMsg</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> msg<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>② 代码实现</p><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@RestController</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/article"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ArticleController</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> ArticleService articleService<span class="token punctuation">;</span>        <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/hotArticleList"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> ResponseResult <span class="token function">hotArticleList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        ResponseResult result <span class="token operator">=</span>  articleService<span class="token punctuation">.</span><span class="token function">hotArticleList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> result<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">ArticleService</span> <span class="token keyword">extends</span> <span class="token class-name">IService</span><span class="token operator">&lt;</span>Article<span class="token operator">></span> <span class="token punctuation">{</span>    ResponseResult <span class="token function">hotArticleList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Service</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ArticleServiceImpl</span> <span class="token keyword">extends</span> <span class="token class-name">ServiceImpl</span><span class="token operator">&lt;</span>ArticleMapper<span class="token punctuation">,</span> Article<span class="token operator">></span> <span class="token keyword">implements</span> <span class="token class-name">ArticleService</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> ResponseResult <span class="token function">hotArticleList</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//查询热门文章 封装成ResponseResult返回</span>        LambdaQueryWrapper<span class="token operator">&lt;</span>Article<span class="token operator">></span> queryWrapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LambdaQueryWrapper</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//必须是正式文章</span>        queryWrapper<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span>Article<span class="token operator">:</span><span class="token operator">:</span>getStatus<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//按照浏览量进行排序</span>        queryWrapper<span class="token punctuation">.</span><span class="token function">orderByDesc</span><span class="token punctuation">(</span>Article<span class="token operator">:</span><span class="token operator">:</span>getViewCount<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//最多只查询10条</span>        Page<span class="token operator">&lt;</span>Article<span class="token operator">></span> page <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Page</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">page</span><span class="token punctuation">(</span>page<span class="token punctuation">,</span>queryWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>        List<span class="token operator">&lt;</span>Article<span class="token operator">></span> articles <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">getRecords</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> ResponseResult<span class="token punctuation">.</span><span class="token function">okResult</span><span class="token punctuation">(</span>articles<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>③ 解决跨域问题</p><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Configuration</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WebConfig</span> <span class="token keyword">implements</span> <span class="token class-name">WebMvcConfigurer</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">addCorsMappings</span><span class="token punctuation">(</span>CorsRegistry registry<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token comment" spellcheck="true">// 设置允许跨域的路径</span>        registry<span class="token punctuation">.</span><span class="token function">addMapping</span><span class="token punctuation">(</span><span class="token string">"/**"</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true">// 设置允许跨域请求的域名</span>                <span class="token punctuation">.</span><span class="token function">allowedOriginPatterns</span><span class="token punctuation">(</span><span class="token string">"*"</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true">// 是否允许cookie</span>                <span class="token punctuation">.</span><span class="token function">allowCredentials</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true">// 设置允许的请求方式</span>                <span class="token punctuation">.</span><span class="token function">allowedMethods</span><span class="token punctuation">(</span><span class="token string">"GET"</span><span class="token punctuation">,</span> <span class="token string">"POST"</span><span class="token punctuation">,</span> <span class="token string">"DELETE"</span><span class="token punctuation">,</span> <span class="token string">"PUT"</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true">// 设置允许的header属性</span>                <span class="token punctuation">.</span><span class="token function">allowedHeaders</span><span class="token punctuation">(</span><span class="token string">"*"</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true">// 跨域允许时间</span>                <span class="token punctuation">.</span><span class="token function">maxAge</span><span class="token punctuation">(</span><span class="token number">3600</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h4 id="3-1-4-使用VO优化"><a href="#3-1-4-使用VO优化" class="headerlink" title="3.1.4 使用VO优化"></a>3.1.4 使用VO优化</h4><p>​目前我们的响应格式其实是不符合接口文档的标准的，多返回了很多字段。这是因为我们查询出来的结果是Article来封装的，Article中字段比较多。</p><p>​我们在项目中一般最后还要把VO来接受查询出来的结果。一个接口对应一个VO，这样即使接口响应字段要修改也只要改VO即可。</p><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Data</span><span class="token annotation punctuation">@NoArgsConstructor</span><span class="token annotation punctuation">@AllArgsConstructor</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HotArticleVo</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> Long id<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//标题</span>    <span class="token keyword">private</span> String title<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//访问量</span>    <span class="token keyword">private</span> Long viewCount<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Service</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ArticleServiceImpl</span> <span class="token keyword">extends</span> <span class="token class-name">ServiceImpl</span><span class="token operator">&lt;</span>ArticleMapper<span class="token punctuation">,</span> Article<span class="token operator">></span> <span class="token keyword">implements</span> <span class="token class-name">ArticleService</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> ResponseResult <span class="token function">hotArticleList</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//查询热门文章 封装成ResponseResult返回</span>        LambdaQueryWrapper<span class="token operator">&lt;</span>Article<span class="token operator">></span> queryWrapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LambdaQueryWrapper</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//必须是正式文章</span>        queryWrapper<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span>Article<span class="token operator">:</span><span class="token operator">:</span>getStatus<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//按照浏览量进行排序</span>        queryWrapper<span class="token punctuation">.</span><span class="token function">orderByDesc</span><span class="token punctuation">(</span>Article<span class="token operator">:</span><span class="token operator">:</span>getViewCount<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//最多只查询10条</span>        Page<span class="token operator">&lt;</span>Article<span class="token operator">></span> page <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Page</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">page</span><span class="token punctuation">(</span>page<span class="token punctuation">,</span>queryWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>        List<span class="token operator">&lt;</span>Article<span class="token operator">></span> articles <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">getRecords</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//bean拷贝</span>        List<span class="token operator">&lt;</span>HotArticleVo<span class="token operator">></span> articleVos <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span>Article article <span class="token operator">:</span> articles<span class="token punctuation">)</span> <span class="token punctuation">{</span>            HotArticleVo vo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HotArticleVo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            BeanUtils<span class="token punctuation">.</span><span class="token function">copyProperties</span><span class="token punctuation">(</span>article<span class="token punctuation">,</span>vo<span class="token punctuation">)</span><span class="token punctuation">;</span>            articleVos<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>vo<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> ResponseResult<span class="token punctuation">.</span><span class="token function">okResult</span><span class="token punctuation">(</span>articleVos<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h4 id="3-1-5-字面值处理"><a href="#3-1-5-字面值处理" class="headerlink" title="3.1.5 字面值处理"></a>3.1.5 字面值处理</h4><p>​实际项目中都不允许直接在代码中使用字面值。都需要定义成常量来使用。这种方式有利于提高代码的可维护性。</p><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SystemConstants</span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/**     *  文章是草稿     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> ARTICLE_STATUS_DRAFT <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     *  文章是正常分布状态     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> ARTICLE_STATUS_NORMAL <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Service</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ArticleServiceImpl</span> <span class="token keyword">extends</span> <span class="token class-name">ServiceImpl</span><span class="token operator">&lt;</span>ArticleMapper<span class="token punctuation">,</span> Article<span class="token operator">></span> <span class="token keyword">implements</span> <span class="token class-name">ArticleService</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> ResponseResult <span class="token function">hotArticleList</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//查询热门文章 封装成ResponseResult返回</span>        LambdaQueryWrapper<span class="token operator">&lt;</span>Article<span class="token operator">></span> queryWrapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LambdaQueryWrapper</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//必须是正式文章</span>        queryWrapper<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span>Article<span class="token operator">:</span><span class="token operator">:</span>getStatus<span class="token punctuation">,</span> SystemConstants<span class="token punctuation">.</span>ARTICLE_STATUS_NORMAL<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//按照浏览量进行排序</span>        queryWrapper<span class="token punctuation">.</span><span class="token function">orderByDesc</span><span class="token punctuation">(</span>Article<span class="token operator">:</span><span class="token operator">:</span>getViewCount<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//最多只查询10条</span>        Page<span class="token operator">&lt;</span>Article<span class="token operator">></span> page <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Page</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">page</span><span class="token punctuation">(</span>page<span class="token punctuation">,</span>queryWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>        List<span class="token operator">&lt;</span>Article<span class="token operator">></span> articles <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">getRecords</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//bean拷贝</span>        List<span class="token operator">&lt;</span>HotArticleVo<span class="token operator">></span> articleVos <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span>Article article <span class="token operator">:</span> articles<span class="token punctuation">)</span> <span class="token punctuation">{</span>            HotArticleVo vo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HotArticleVo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            BeanUtils<span class="token punctuation">.</span><span class="token function">copyProperties</span><span class="token punctuation">(</span>article<span class="token punctuation">,</span>vo<span class="token punctuation">)</span><span class="token punctuation">;</span>            articleVos<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>vo<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> ResponseResult<span class="token punctuation">.</span><span class="token function">okResult</span><span class="token punctuation">(</span>articleVos<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="3-2-Bean拷贝工具类封装"><a href="#3-2-Bean拷贝工具类封装" class="headerlink" title="3.2 Bean拷贝工具类封装"></a>3.2 Bean拷贝工具类封装</h3><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BeanCopyUtils</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token function">BeanCopyUtils</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token operator">&lt;</span>V<span class="token operator">></span> V <span class="token function">copyBean</span><span class="token punctuation">(</span>Object source<span class="token punctuation">,</span>Class<span class="token operator">&lt;</span>V<span class="token operator">></span> clazz<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//创建目标对象</span>        V result <span class="token operator">=</span> null<span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            result <span class="token operator">=</span> clazz<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//实现属性copy</span>            BeanUtils<span class="token punctuation">.</span><span class="token function">copyProperties</span><span class="token punctuation">(</span>source<span class="token punctuation">,</span> result<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">//返回结果</span>        <span class="token keyword">return</span> result<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token operator">&lt;</span>O<span class="token punctuation">,</span>V<span class="token operator">></span> List<span class="token operator">&lt;</span>V<span class="token operator">></span> <span class="token function">copyBeanList</span><span class="token punctuation">(</span>List<span class="token operator">&lt;</span>O<span class="token operator">></span> list<span class="token punctuation">,</span>Class<span class="token operator">&lt;</span>V<span class="token operator">></span> clazz<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> list<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>o <span class="token operator">-</span><span class="token operator">></span> <span class="token function">copyBean</span><span class="token punctuation">(</span>o<span class="token punctuation">,</span> clazz<span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span>Collectors<span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="3-2-查询分类列表"><a href="#3-2-查询分类列表" class="headerlink" title="3.2 查询分类列表"></a>3.2 查询分类列表</h3><h4 id="3-2-0-分类表分析"><a href="#3-2-0-分类表分析" class="headerlink" title="3.2.0 分类表分析"></a>3.2.0 分类表分析</h4><p>​通过需求去分析需要有哪些字段。</p><p>​建表SQL及初始化数据见：SGBlog\资源\SQL\sg_category.sql</p><h4 id="3-2-1-需求"><a href="#3-2-1-需求" class="headerlink" title="3.2.1 需求"></a>3.2.1 需求</h4><p>![image-20220202111056036](E:/IdeaWorkSpace/SGBlog (20)/SGBlog/笔记/img/image-20220202111056036-16437714601701.png)</p><p>​页面上需要展示分类列表，用户可以点击具体的分类查看该分类下的文章列表。</p><p>​注意： ①要求只展示有发布正式文章的分类 ②必须是正常状态的分类</p><h4 id="3-2-2-接口设计"><a href="#3-2-2-接口设计" class="headerlink" title="3.2.2 接口设计"></a>3.2.2 接口设计</h4><p>​见接口文档</p><h4 id="3-2-3-EasyCode代码模板"><a href="#3-2-3-EasyCode代码模板" class="headerlink" title="3.2.3 EasyCode代码模板"></a>3.2.3 EasyCode代码模板</h4><pre class=" language-java"><code class="language-java">##导入宏定义$<span class="token operator">!</span><span class="token punctuation">{</span>define<span class="token punctuation">.</span>vm<span class="token punctuation">}</span>##保存文件（宏定义）#<span class="token function">save</span><span class="token punctuation">(</span><span class="token string">"/entity"</span><span class="token punctuation">,</span> <span class="token string">".java"</span><span class="token punctuation">)</span>##包路径（宏定义）#<span class="token function">setPackageSuffix</span><span class="token punctuation">(</span><span class="token string">"entity"</span><span class="token punctuation">)</span>##自动导入包（全局变量）$<span class="token operator">!</span><span class="token punctuation">{</span>autoImport<span class="token punctuation">.</span>vm<span class="token punctuation">}</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>Serializable<span class="token punctuation">;</span><span class="token keyword">import</span> lombok<span class="token punctuation">.</span>AllArgsConstructor<span class="token punctuation">;</span><span class="token keyword">import</span> lombok<span class="token punctuation">.</span>Data<span class="token punctuation">;</span><span class="token keyword">import</span> lombok<span class="token punctuation">.</span>NoArgsConstructor<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>TableId<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>TableName<span class="token punctuation">;</span>##表注释（宏定义）#<span class="token function">tableComment</span><span class="token punctuation">(</span><span class="token string">"表实体类"</span><span class="token punctuation">)</span><span class="token annotation punctuation">@SuppressWarnings</span><span class="token punctuation">(</span><span class="token string">"serial"</span><span class="token punctuation">)</span><span class="token annotation punctuation">@Data</span><span class="token annotation punctuation">@AllArgsConstructor</span><span class="token annotation punctuation">@NoArgsConstructor</span><span class="token annotation punctuation">@TableName</span><span class="token punctuation">(</span><span class="token string">"$!{tableInfo.obj.name}"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> $<span class="token operator">!</span><span class="token punctuation">{</span>tableInfo<span class="token punctuation">.</span>name<span class="token punctuation">}</span>  <span class="token punctuation">{</span>#<span class="token function">foreach</span><span class="token punctuation">(</span>$column in $tableInfo<span class="token punctuation">.</span>pkColumn<span class="token punctuation">)</span>    #<span class="token keyword">if</span><span class="token punctuation">(</span>$<span class="token punctuation">{</span>column<span class="token punctuation">.</span>comment<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//${column.comment}#end</span><span class="token annotation punctuation">@TableId</span>    <span class="token keyword">private</span> $<span class="token operator">!</span><span class="token punctuation">{</span>tool<span class="token punctuation">.</span><span class="token function">getClsNameByFullName</span><span class="token punctuation">(</span>$column<span class="token punctuation">.</span>type<span class="token punctuation">)</span><span class="token punctuation">}</span> $<span class="token operator">!</span><span class="token punctuation">{</span>column<span class="token punctuation">.</span>name<span class="token punctuation">}</span><span class="token punctuation">;</span>#end#<span class="token function">foreach</span><span class="token punctuation">(</span>$column in $tableInfo<span class="token punctuation">.</span>otherColumn<span class="token punctuation">)</span>    #<span class="token keyword">if</span><span class="token punctuation">(</span>$<span class="token punctuation">{</span>column<span class="token punctuation">.</span>comment<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//${column.comment}#end</span>    <span class="token keyword">private</span> $<span class="token operator">!</span><span class="token punctuation">{</span>tool<span class="token punctuation">.</span><span class="token function">getClsNameByFullName</span><span class="token punctuation">(</span>$column<span class="token punctuation">.</span>type<span class="token punctuation">)</span><span class="token punctuation">}</span> $<span class="token operator">!</span><span class="token punctuation">{</span>column<span class="token punctuation">.</span>name<span class="token punctuation">}</span><span class="token punctuation">;</span>#end<span class="token punctuation">}</span></code></pre><pre class=" language-java"><code class="language-java">##导入宏定义$<span class="token operator">!</span><span class="token punctuation">{</span>define<span class="token punctuation">.</span>vm<span class="token punctuation">}</span>##设置表后缀（宏定义）#<span class="token function">setTableSuffix</span><span class="token punctuation">(</span><span class="token string">"Mapper"</span><span class="token punctuation">)</span>##保存文件（宏定义）#<span class="token function">save</span><span class="token punctuation">(</span><span class="token string">"/mapper"</span><span class="token punctuation">,</span> <span class="token string">"Mapper.java"</span><span class="token punctuation">)</span>##包路径（宏定义）#<span class="token function">setPackageSuffix</span><span class="token punctuation">(</span><span class="token string">"mapper"</span><span class="token punctuation">)</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>core<span class="token punctuation">.</span>mapper<span class="token punctuation">.</span>BaseMapper<span class="token punctuation">;</span>##表注释（宏定义）#<span class="token function">tableComment</span><span class="token punctuation">(</span><span class="token string">"表数据库访问层"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">interface</span> $<span class="token operator">!</span><span class="token punctuation">{</span>tableName<span class="token punctuation">}</span> <span class="token keyword">extends</span> <span class="token class-name">BaseMapper</span><span class="token operator">&lt;</span>$<span class="token operator">!</span>tableInfo<span class="token punctuation">.</span>name<span class="token operator">></span> <span class="token punctuation">{</span><span class="token punctuation">}</span></code></pre><pre class=" language-java"><code class="language-java">##导入宏定义$<span class="token operator">!</span><span class="token punctuation">{</span>define<span class="token punctuation">.</span>vm<span class="token punctuation">}</span>##设置表后缀（宏定义）#<span class="token function">setTableSuffix</span><span class="token punctuation">(</span><span class="token string">"Service"</span><span class="token punctuation">)</span>##保存文件（宏定义）#<span class="token function">save</span><span class="token punctuation">(</span><span class="token string">"/service"</span><span class="token punctuation">,</span> <span class="token string">"Service.java"</span><span class="token punctuation">)</span>##包路径（宏定义）#<span class="token function">setPackageSuffix</span><span class="token punctuation">(</span><span class="token string">"service"</span><span class="token punctuation">)</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>extension<span class="token punctuation">.</span>service<span class="token punctuation">.</span>IService<span class="token punctuation">;</span>##表注释（宏定义）#<span class="token function">tableComment</span><span class="token punctuation">(</span><span class="token string">"表服务接口"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">interface</span> $<span class="token operator">!</span><span class="token punctuation">{</span>tableName<span class="token punctuation">}</span> <span class="token keyword">extends</span> <span class="token class-name">IService</span><span class="token operator">&lt;</span>$<span class="token operator">!</span>tableInfo<span class="token punctuation">.</span>name<span class="token operator">></span> <span class="token punctuation">{</span><span class="token punctuation">}</span></code></pre><pre class=" language-java"><code class="language-java">##导入宏定义$<span class="token operator">!</span><span class="token punctuation">{</span>define<span class="token punctuation">.</span>vm<span class="token punctuation">}</span>##设置表后缀（宏定义）#<span class="token function">setTableSuffix</span><span class="token punctuation">(</span><span class="token string">"ServiceImpl"</span><span class="token punctuation">)</span>##保存文件（宏定义）#<span class="token function">save</span><span class="token punctuation">(</span><span class="token string">"/service/impl"</span><span class="token punctuation">,</span> <span class="token string">"ServiceImpl.java"</span><span class="token punctuation">)</span>##包路径（宏定义）#<span class="token function">setPackageSuffix</span><span class="token punctuation">(</span><span class="token string">"service.impl"</span><span class="token punctuation">)</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>extension<span class="token punctuation">.</span>service<span class="token punctuation">.</span>impl<span class="token punctuation">.</span>ServiceImpl<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span>Service<span class="token punctuation">;</span>##表注释（宏定义）#<span class="token function">tableComment</span><span class="token punctuation">(</span><span class="token string">"表服务实现类"</span><span class="token punctuation">)</span><span class="token annotation punctuation">@Service</span><span class="token punctuation">(</span><span class="token string">"$!tool.firstLowerCase($tableInfo.name)Service"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> $<span class="token operator">!</span><span class="token punctuation">{</span>tableName<span class="token punctuation">}</span> <span class="token keyword">extends</span> <span class="token class-name">ServiceImpl</span><span class="token operator">&lt;</span>$<span class="token operator">!</span><span class="token punctuation">{</span>tableInfo<span class="token punctuation">.</span>name<span class="token punctuation">}</span>Mapper<span class="token punctuation">,</span> $<span class="token operator">!</span><span class="token punctuation">{</span>tableInfo<span class="token punctuation">.</span>name<span class="token punctuation">}</span><span class="token operator">></span> <span class="token keyword">implements</span> $<span class="token operator">!</span><span class="token punctuation">{</span>tableInfo<span class="token punctuation">.</span>name<span class="token punctuation">}</span>Service <span class="token punctuation">{</span><span class="token punctuation">}</span></code></pre><h4 id="3-2-4-代码实现"><a href="#3-2-4-代码实现" class="headerlink" title="3.2.4 代码实现"></a>3.2.4 代码实现</h4><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@RestController</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/category"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CategoryController</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> CategoryService categoryService<span class="token punctuation">;</span>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/getCategoryList"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> ResponseResult <span class="token function">getCategoryList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>       <span class="token keyword">return</span> categoryService<span class="token punctuation">.</span><span class="token function">getCategoryList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span>    </code></pre><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">CategoryService</span> <span class="token keyword">extends</span> <span class="token class-name">IService</span><span class="token operator">&lt;</span>Category<span class="token operator">></span> <span class="token punctuation">{</span>    ResponseResult <span class="token function">getCategoryList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Service</span><span class="token punctuation">(</span><span class="token string">"categoryService"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CategoryServiceImpl</span> <span class="token keyword">extends</span> <span class="token class-name">ServiceImpl</span><span class="token operator">&lt;</span>CategoryMapper<span class="token punctuation">,</span> Category<span class="token operator">></span> <span class="token keyword">implements</span> <span class="token class-name">CategoryService</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> ArticleService articleService<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> ResponseResult <span class="token function">getCategoryList</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//查询文章表  状态为已发布的文章</span>        LambdaQueryWrapper<span class="token operator">&lt;</span>Article<span class="token operator">></span> articleWrapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LambdaQueryWrapper</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        articleWrapper<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span>Article<span class="token operator">:</span><span class="token operator">:</span>getStatus<span class="token punctuation">,</span>SystemConstants<span class="token punctuation">.</span>ARTICLE_STATUS_NORMAL<span class="token punctuation">)</span><span class="token punctuation">;</span>        List<span class="token operator">&lt;</span>Article<span class="token operator">></span> articleList <span class="token operator">=</span> articleService<span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span>articleWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//获取文章的分类id，并且去重</span>        Set<span class="token operator">&lt;</span>Long<span class="token operator">></span> categoryIds <span class="token operator">=</span> articleList<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>article <span class="token operator">-</span><span class="token operator">></span> article<span class="token punctuation">.</span><span class="token function">getCategoryId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span>Collectors<span class="token punctuation">.</span><span class="token function">toSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//查询分类表</span>        List<span class="token operator">&lt;</span>Category<span class="token operator">></span> categories <span class="token operator">=</span> <span class="token function">listByIds</span><span class="token punctuation">(</span>categoryIds<span class="token punctuation">)</span><span class="token punctuation">;</span>        categories <span class="token operator">=</span> categories<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>                <span class="token function">filter</span><span class="token punctuation">(</span>category <span class="token operator">-</span><span class="token operator">></span> SystemConstants<span class="token punctuation">.</span>STATUS_NORMAL<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>category<span class="token punctuation">.</span><span class="token function">getStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span>Collectors<span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//封装vo</span>        List<span class="token operator">&lt;</span>CategoryVo<span class="token operator">></span> categoryVos <span class="token operator">=</span> BeanCopyUtils<span class="token punctuation">.</span><span class="token function">copyBeanList</span><span class="token punctuation">(</span>categories<span class="token punctuation">,</span> CategoryVo<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> ResponseResult<span class="token punctuation">.</span><span class="token function">okResult</span><span class="token punctuation">(</span>categoryVos<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="3-3-分页查询文章列表"><a href="#3-3-分页查询文章列表" class="headerlink" title="3.3 分页查询文章列表"></a>3.3 分页查询文章列表</h3><h4 id="3-3-1-需求"><a href="#3-3-1-需求" class="headerlink" title="3.3.1 需求"></a>3.3.1 需求</h4><p>​在首页和分类页面都需要查询文章列表。</p><p>​首页：查询所有的文章</p><p>​分类页面：查询对应分类下的文章</p><p>​要求：①只能查询正式发布的文章 ②置顶的文章要显示在最前面 </p><h4 id="3-3-2-接口设计"><a href="#3-3-2-接口设计" class="headerlink" title="3.3.2 接口设计"></a>3.3.2 接口设计</h4><p>​见文档</p><h4 id="3-3-3-代码实现"><a href="#3-3-3-代码实现" class="headerlink" title="3.3.3 代码实现"></a>3.3.3 代码实现</h4><p>MP支持分页配置</p><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">/** * @Author 三更  B站： https://space.bilibili.com/663528522 */</span><span class="token annotation punctuation">@Configuration</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MbatisPlusConfig</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/**     * 3.4.0之后版本     * @return     */</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> MybatisPlusInterceptor <span class="token function">mybatisPlusInterceptor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        MybatisPlusInterceptor mybatisPlusInterceptor <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MybatisPlusInterceptor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        mybatisPlusInterceptor<span class="token punctuation">.</span><span class="token function">addInnerInterceptor</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">PaginationInnerInterceptor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> mybatisPlusInterceptor<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>在ArticleController中</p><pre class=" language-java"><code class="language-java">    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/articleList"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> ResponseResult <span class="token function">articleList</span><span class="token punctuation">(</span>Integer pageNum<span class="token punctuation">,</span>Integer pageSize<span class="token punctuation">,</span>Long categoryId<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> articleService<span class="token punctuation">.</span><span class="token function">articleList</span><span class="token punctuation">(</span>pageNum<span class="token punctuation">,</span>pageSize<span class="token punctuation">,</span>categoryId<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><p>在ArticleService中</p><pre class=" language-java"><code class="language-java">ResponseResult <span class="token function">articleList</span><span class="token punctuation">(</span>Integer pageNum<span class="token punctuation">,</span> Integer pageSize<span class="token punctuation">,</span> Long categoryId<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>在ArticleServiceImpl中</p><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Service</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ArticleServiceImpl</span> <span class="token keyword">extends</span> <span class="token class-name">ServiceImpl</span><span class="token operator">&lt;</span>ArticleMapper<span class="token punctuation">,</span> Article<span class="token operator">></span> <span class="token keyword">implements</span> <span class="token class-name">ArticleService</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> CategoryService categoryService<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> ResponseResult <span class="token function">hotArticleList</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//查询热门文章 封装成ResponseResult返回</span>        LambdaQueryWrapper<span class="token operator">&lt;</span>Article<span class="token operator">></span> queryWrapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LambdaQueryWrapper</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//必须是正式文章</span>        queryWrapper<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span>Article<span class="token operator">:</span><span class="token operator">:</span>getStatus<span class="token punctuation">,</span> SystemConstants<span class="token punctuation">.</span>ARTICLE_STATUS_NORMAL<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//按照浏览量进行排序</span>        queryWrapper<span class="token punctuation">.</span><span class="token function">orderByDesc</span><span class="token punctuation">(</span>Article<span class="token operator">:</span><span class="token operator">:</span>getViewCount<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//最多只查询10条</span>        Page<span class="token operator">&lt;</span>Article<span class="token operator">></span> page <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Page</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">page</span><span class="token punctuation">(</span>page<span class="token punctuation">,</span>queryWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>        List<span class="token operator">&lt;</span>Article<span class="token operator">></span> articles <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">getRecords</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//bean拷贝</span><span class="token comment" spellcheck="true">//        List&lt;HotArticleVo> articleVos = new ArrayList&lt;>();</span><span class="token comment" spellcheck="true">//        for (Article article : articles) {</span><span class="token comment" spellcheck="true">//            HotArticleVo vo = new HotArticleVo();</span><span class="token comment" spellcheck="true">//            BeanUtils.copyProperties(article,vo);</span><span class="token comment" spellcheck="true">//            articleVos.add(vo);</span><span class="token comment" spellcheck="true">//        }</span>        List<span class="token operator">&lt;</span>HotArticleVo<span class="token operator">></span> vs <span class="token operator">=</span> BeanCopyUtils<span class="token punctuation">.</span><span class="token function">copyBeanList</span><span class="token punctuation">(</span>articles<span class="token punctuation">,</span> HotArticleVo<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> ResponseResult<span class="token punctuation">.</span><span class="token function">okResult</span><span class="token punctuation">(</span>vs<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> ResponseResult <span class="token function">articleList</span><span class="token punctuation">(</span>Integer pageNum<span class="token punctuation">,</span> Integer pageSize<span class="token punctuation">,</span> Long categoryId<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//查询条件</span>        LambdaQueryWrapper<span class="token operator">&lt;</span>Article<span class="token operator">></span> lambdaQueryWrapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LambdaQueryWrapper</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 如果 有categoryId 就要 查询时要和传入的相同</span>        lambdaQueryWrapper<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span>Objects<span class="token punctuation">.</span><span class="token function">nonNull</span><span class="token punctuation">(</span>categoryId<span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span>categoryId<span class="token operator">></span><span class="token number">0</span> <span class="token punctuation">,</span>Article<span class="token operator">:</span><span class="token operator">:</span>getCategoryId<span class="token punctuation">,</span>categoryId<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 状态是正式发布的</span>        lambdaQueryWrapper<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span>Article<span class="token operator">:</span><span class="token operator">:</span>getStatus<span class="token punctuation">,</span>SystemConstants<span class="token punctuation">.</span>ARTICLE_STATUS_NORMAL<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 对isTop进行降序</span>        lambdaQueryWrapper<span class="token punctuation">.</span><span class="token function">orderByDesc</span><span class="token punctuation">(</span>Article<span class="token operator">:</span><span class="token operator">:</span>getIsTop<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//分页查询</span>        Page<span class="token operator">&lt;</span>Article<span class="token operator">></span> page <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Page</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span>pageNum<span class="token punctuation">,</span>pageSize<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">page</span><span class="token punctuation">(</span>page<span class="token punctuation">,</span>lambdaQueryWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>        List<span class="token operator">&lt;</span>Article<span class="token operator">></span> articles <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">getRecords</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//查询categoryName</span>        articles<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>article <span class="token operator">-</span><span class="token operator">></span> article<span class="token punctuation">.</span><span class="token function">setCategoryName</span><span class="token punctuation">(</span>categoryService<span class="token punctuation">.</span><span class="token function">getById</span><span class="token punctuation">(</span>article<span class="token punctuation">.</span><span class="token function">getCategoryId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span>Collectors<span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//articleId去查询articleName进行设置</span><span class="token comment" spellcheck="true">//        for (Article article : articles) {</span><span class="token comment" spellcheck="true">//            Category category = categoryService.getById(article.getCategoryId());</span><span class="token comment" spellcheck="true">//            article.setCategoryName(category.getName());</span><span class="token comment" spellcheck="true">//        }</span>        <span class="token comment" spellcheck="true">//封装查询结果</span>        List<span class="token operator">&lt;</span>ArticleListVo<span class="token operator">></span> articleListVos <span class="token operator">=</span> BeanCopyUtils<span class="token punctuation">.</span><span class="token function">copyBeanList</span><span class="token punctuation">(</span>page<span class="token punctuation">.</span><span class="token function">getRecords</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> ArticleListVo<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        PageVo pageVo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PageVo</span><span class="token punctuation">(</span>articleListVos<span class="token punctuation">,</span>page<span class="token punctuation">.</span><span class="token function">getTotal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> ResponseResult<span class="token punctuation">.</span><span class="token function">okResult</span><span class="token punctuation">(</span>pageVo<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>PageVo</p><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Data</span><span class="token annotation punctuation">@NoArgsConstructor</span><span class="token annotation punctuation">@AllArgsConstructor</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">PageVo</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> List rows<span class="token punctuation">;</span>    <span class="token keyword">private</span> Long total<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>ArticleListVo</p><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Data</span><span class="token annotation punctuation">@NoArgsConstructor</span><span class="token annotation punctuation">@AllArgsConstructor</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ArticleListVo</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> Long id<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//标题</span>    <span class="token keyword">private</span> String title<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//文章摘要</span>    <span class="token keyword">private</span> String summary<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//所属分类名</span>    <span class="token keyword">private</span> String categoryName<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//缩略图</span>    <span class="token keyword">private</span> String thumbnail<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//访问量</span>    <span class="token keyword">private</span> Long viewCount<span class="token punctuation">;</span>    <span class="token keyword">private</span> Date createTime<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>在Article中增加一个字段</p><pre class=" language-java"><code class="language-java">    <span class="token annotation punctuation">@TableField</span><span class="token punctuation">(</span>exist <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> String categoryName<span class="token punctuation">;</span></code></pre><h4 id="3-3-4-FastJson配置"><a href="#3-3-4-FastJson配置" class="headerlink" title="3.3.4 FastJson配置"></a>3.3.4 FastJson配置</h4><pre class=" language-java"><code class="language-java">    <span class="token annotation punctuation">@Bean</span><span class="token comment" spellcheck="true">//使用@Bean注入fastJsonHttpMessageConvert</span>    <span class="token keyword">public</span> HttpMessageConverter <span class="token function">fastJsonHttpMessageConverters</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//1.需要定义一个Convert转换消息的对象</span>        FastJsonHttpMessageConverter fastConverter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FastJsonHttpMessageConverter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        FastJsonConfig fastJsonConfig <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FastJsonConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        fastJsonConfig<span class="token punctuation">.</span><span class="token function">setSerializerFeatures</span><span class="token punctuation">(</span>SerializerFeature<span class="token punctuation">.</span>PrettyFormat<span class="token punctuation">)</span><span class="token punctuation">;</span>        fastJsonConfig<span class="token punctuation">.</span><span class="token function">setDateFormat</span><span class="token punctuation">(</span><span class="token string">"yyyy-MM-dd HH:mm:ss"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                SerializeConfig<span class="token punctuation">.</span>globalInstance<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>Long<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> ToStringSerializer<span class="token punctuation">.</span>instance<span class="token punctuation">)</span><span class="token punctuation">;</span>        fastJsonConfig<span class="token punctuation">.</span><span class="token function">setSerializeConfig</span><span class="token punctuation">(</span>SerializeConfig<span class="token punctuation">.</span>globalInstance<span class="token punctuation">)</span><span class="token punctuation">;</span>        fastConverter<span class="token punctuation">.</span><span class="token function">setFastJsonConfig</span><span class="token punctuation">(</span>fastJsonConfig<span class="token punctuation">)</span><span class="token punctuation">;</span>        HttpMessageConverter<span class="token operator">&lt;</span><span class="token operator">?</span><span class="token operator">></span> converter <span class="token operator">=</span> fastConverter<span class="token punctuation">;</span>        <span class="token keyword">return</span> converter<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">configureMessageConverters</span><span class="token punctuation">(</span>List<span class="token operator">&lt;</span>HttpMessageConverter<span class="token operator">&lt;</span><span class="token operator">?</span><span class="token operator">>></span> converters<span class="token punctuation">)</span> <span class="token punctuation">{</span>        converters<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token function">fastJsonHttpMessageConverters</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><h3 id="3-4-文章详情接口"><a href="#3-4-文章详情接口" class="headerlink" title="3.4 文章详情接口"></a>3.4 文章详情接口</h3><h4 id="3-4-1-需求"><a href="#3-4-1-需求" class="headerlink" title="3.4.1 需求"></a>3.4.1 需求</h4><p>​要求在文章列表点击阅读全文时能够跳转到文章详情页面，可以让用户阅读文章正文。</p><p>​要求：①要在文章详情中展示其分类名</p><h4 id="3-4-2-接口设计"><a href="#3-4-2-接口设计" class="headerlink" title="3.4.2 接口设计"></a>3.4.2 接口设计</h4><table><thead><tr><th>请求方式</th><th>请求路径</th></tr></thead><tbody><tr><td>Get</td><td>/article/{id}</td></tr></tbody></table><p>响应格式：</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>  <span class="token property">"code"</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span>  <span class="token property">"data"</span><span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token property">"categoryId"</span><span class="token operator">:</span> <span class="token string">"1"</span><span class="token punctuation">,</span>    <span class="token property">"categoryName"</span><span class="token operator">:</span> <span class="token string">"java"</span><span class="token punctuation">,</span>    <span class="token property">"content"</span><span class="token operator">:</span> <span class="token string">"内容"</span><span class="token punctuation">,</span>    <span class="token property">"createTime"</span><span class="token operator">:</span> <span class="token string">"2022-01-23 23:20:11"</span><span class="token punctuation">,</span>    <span class="token property">"id"</span><span class="token operator">:</span> <span class="token string">"1"</span><span class="token punctuation">,</span>    <span class="token property">"isComment"</span><span class="token operator">:</span> <span class="token string">"0"</span><span class="token punctuation">,</span>    <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"SpringSecurity从入门到精通"</span><span class="token punctuation">,</span>    <span class="token property">"viewCount"</span><span class="token operator">:</span> <span class="token string">"114"</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token property">"msg"</span><span class="token operator">:</span> <span class="token string">"操作成功"</span><span class="token punctuation">}</span></code></pre><h4 id="3-4-3-代码实现"><a href="#3-4-3-代码实现" class="headerlink" title="3.4.3 代码实现"></a>3.4.3 代码实现</h4><p>ArticleController中新增</p><pre class=" language-java"><code class="language-java">    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/{id}"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> ResponseResult <span class="token function">getArticleDetail</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span> Long id<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> articleService<span class="token punctuation">.</span><span class="token function">getArticleDetail</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><p>Service</p><pre class=" language-java"><code class="language-java">ResponseResult <span class="token function">getArticleDetail</span><span class="token punctuation">(</span>Long id<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>ServiceImpl</p><pre class=" language-java"><code class="language-java">    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> ResponseResult <span class="token function">getArticleDetail</span><span class="token punctuation">(</span>Long id<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//根据id查询文章</span>        Article article <span class="token operator">=</span> <span class="token function">getById</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//转换成VO</span>        ArticleDetailVo articleDetailVo <span class="token operator">=</span> BeanCopyUtils<span class="token punctuation">.</span><span class="token function">copyBean</span><span class="token punctuation">(</span>article<span class="token punctuation">,</span> ArticleDetailVo<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//根据分类id查询分类名</span>        Long categoryId <span class="token operator">=</span> articleDetailVo<span class="token punctuation">.</span><span class="token function">getCategoryId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Category category <span class="token operator">=</span> categoryService<span class="token punctuation">.</span><span class="token function">getById</span><span class="token punctuation">(</span>categoryId<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>category<span class="token operator">!=</span>null<span class="token punctuation">)</span><span class="token punctuation">{</span>            articleDetailVo<span class="token punctuation">.</span><span class="token function">setCategoryName</span><span class="token punctuation">(</span>category<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">//封装响应返回</span>        <span class="token keyword">return</span> ResponseResult<span class="token punctuation">.</span><span class="token function">okResult</span><span class="token punctuation">(</span>articleDetailVo<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><h3 id="3-5-友联查询"><a href="#3-5-友联查询" class="headerlink" title="3.5 友联查询"></a>3.5 友联查询</h3><h4 id="3-5-0-友链表分析"><a href="#3-5-0-友链表分析" class="headerlink" title="3.5.0 友链表分析"></a>3.5.0 友链表分析</h4><p>​通过需求去分析需要有哪些字段。</p><p>​建表SQL及初始化数据见：SGBlog\资源\SQL\sg_link.sql</p><h4 id="3-5-1-需求"><a href="#3-5-1-需求" class="headerlink" title="3.5.1 需求"></a>3.5.1 需求</h4><p>​在友链页面要查询出所有的审核通过的友链。</p><h4 id="3-5-2-接口设计"><a href="#3-5-2-接口设计" class="headerlink" title="3.5.2 接口设计"></a>3.5.2 接口设计</h4><table><thead><tr><th>请求方式</th><th>请求路径</th></tr></thead><tbody><tr><td>Get</td><td>/link/getAllLink</td></tr></tbody></table><p>响应格式：</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>  <span class="token property">"code"</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span>  <span class="token property">"data"</span><span class="token operator">:</span> <span class="token punctuation">[</span>    <span class="token punctuation">{</span>      <span class="token property">"address"</span><span class="token operator">:</span> <span class="token string">"https://www.baidu.com"</span><span class="token punctuation">,</span>      <span class="token property">"description"</span><span class="token operator">:</span> <span class="token string">"sda"</span><span class="token punctuation">,</span>      <span class="token property">"id"</span><span class="token operator">:</span> <span class="token string">"1"</span><span class="token punctuation">,</span>      <span class="token property">"logo"</span><span class="token operator">:</span> <span class="token string">"图片url1"</span><span class="token punctuation">,</span>      <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"sda"</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">{</span>      <span class="token property">"address"</span><span class="token operator">:</span> <span class="token string">"https://www.qq.com"</span><span class="token punctuation">,</span>      <span class="token property">"description"</span><span class="token operator">:</span> <span class="token string">"dada"</span><span class="token punctuation">,</span>      <span class="token property">"id"</span><span class="token operator">:</span> <span class="token string">"2"</span><span class="token punctuation">,</span>      <span class="token property">"logo"</span><span class="token operator">:</span> <span class="token string">"图片url2"</span><span class="token punctuation">,</span>      <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"sda"</span>    <span class="token punctuation">}</span>  <span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token property">"msg"</span><span class="token operator">:</span> <span class="token string">"操作成功"</span><span class="token punctuation">}</span></code></pre><h4 id="3-5-3-代码实现"><a href="#3-5-3-代码实现" class="headerlink" title="3.5.3 代码实现"></a>3.5.3 代码实现</h4><p>Controller</p><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@RestController</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/link"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LinkController</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> LinkService linkService<span class="token punctuation">;</span>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/getAllLink"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> ResponseResult <span class="token function">getAllLink</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> linkService<span class="token punctuation">.</span><span class="token function">getAllLink</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>Service</p><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">LinkService</span> <span class="token keyword">extends</span> <span class="token class-name">IService</span><span class="token operator">&lt;</span>Link<span class="token operator">></span> <span class="token punctuation">{</span>    ResponseResult <span class="token function">getAllLink</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>ServiceImpl</p><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Service</span><span class="token punctuation">(</span><span class="token string">"linkService"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LinkServiceImpl</span> <span class="token keyword">extends</span> <span class="token class-name">ServiceImpl</span><span class="token operator">&lt;</span>LinkMapper<span class="token punctuation">,</span> Link<span class="token operator">></span> <span class="token keyword">implements</span> <span class="token class-name">LinkService</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> ResponseResult <span class="token function">getAllLink</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//查询所有审核通过的</span>        LambdaQueryWrapper<span class="token operator">&lt;</span>Link<span class="token operator">></span> queryWrapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LambdaQueryWrapper</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        queryWrapper<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span>Link<span class="token operator">:</span><span class="token operator">:</span>getStatus<span class="token punctuation">,</span> SystemConstants<span class="token punctuation">.</span>LINK_STATUS_NORMAL<span class="token punctuation">)</span><span class="token punctuation">;</span>        List<span class="token operator">&lt;</span>Link<span class="token operator">></span> links <span class="token operator">=</span> <span class="token function">list</span><span class="token punctuation">(</span>queryWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//转换成vo</span>        List<span class="token operator">&lt;</span>LinkVo<span class="token operator">></span> linkVos <span class="token operator">=</span> BeanCopyUtils<span class="token punctuation">.</span><span class="token function">copyBeanList</span><span class="token punctuation">(</span>links<span class="token punctuation">,</span> LinkVo<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//封装返回</span>        <span class="token keyword">return</span> ResponseResult<span class="token punctuation">.</span><span class="token function">okResult</span><span class="token punctuation">(</span>linkVos<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>SystemConstants</p><pre class=" language-java"><code class="language-java">    <span class="token comment" spellcheck="true">/**     * 友链状态为审核通过     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> String  LINK_STATUS_NORMAL <span class="token operator">=</span> <span class="token string">"0"</span><span class="token punctuation">;</span></code></pre><h3 id="3-6-登录功能实现"><a href="#3-6-登录功能实现" class="headerlink" title="3.6 登录功能实现"></a>3.6 登录功能实现</h3><p>​使用我们前台和后台的认证授权统一都使用SpringSecurity安全框架来实现。</p><h4 id="3-6-0-需求"><a href="#3-6-0-需求" class="headerlink" title="3.6.0 需求"></a>3.6.0 需求</h4><p>​需要实现登录功能</p><p>​有些功能必须登录后才能使用，未登录状态是不能使用的。</p><h4 id="3-6-1-接口设计"><a href="#3-6-1-接口设计" class="headerlink" title="3.6.1 接口设计"></a>3.6.1 接口设计</h4><table><thead><tr><th>请求方式</th><th>请求路径</th></tr></thead><tbody><tr><td>POST</td><td>/login</td></tr></tbody></table><p>请求体：</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>    <span class="token property">"userName"</span><span class="token operator">:</span><span class="token string">"sg"</span><span class="token punctuation">,</span>    <span class="token property">"password"</span><span class="token operator">:</span><span class="token string">"1234"</span><span class="token punctuation">}</span></code></pre><p>响应格式：</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>    <span class="token property">"code"</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span>    <span class="token property">"data"</span><span class="token operator">:</span> <span class="token punctuation">{</span>        <span class="token property">"token"</span><span class="token operator">:</span> <span class="token string">"eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI0ODBmOThmYmJkNmI0NjM0OWUyZjY2NTM0NGNjZWY2NSIsInN1YiI6IjEiLCJpc3MiOiJzZyIsImlhdCI6MTY0Mzg3NDMxNiwiZXhwIjoxNjQzOTYwNzE2fQ.ldLBUvNIxQCGemkCoMgT_0YsjsWndTg5tqfJb77pabk"</span><span class="token punctuation">,</span>        <span class="token property">"userInfo"</span><span class="token operator">:</span> <span class="token punctuation">{</span>            <span class="token property">"avatar"</span><span class="token operator">:</span> <span class="token string">"https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fi0.hdslb.com%2Fbfs%2Farticle%2F3bf9c263bc0f2ac5c3a7feb9e218d07475573ec8.gi"</span><span class="token punctuation">,</span>            <span class="token property">"email"</span><span class="token operator">:</span> <span class="token string">"23412332@qq.com"</span><span class="token punctuation">,</span>            <span class="token property">"id"</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>            <span class="token property">"nickName"</span><span class="token operator">:</span> <span class="token string">"sg333"</span><span class="token punctuation">,</span>            <span class="token property">"sex"</span><span class="token operator">:</span> <span class="token string">"1"</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"msg"</span><span class="token operator">:</span> <span class="token string">"操作成功"</span><span class="token punctuation">}</span></code></pre><h4 id="3-6-2-表分析"><a href="#3-6-2-表分析" class="headerlink" title="3.6.2 表分析"></a>3.6.2 表分析</h4><p>​建表SQL及初始化数据见：SGBlog\资源\SQL\sys_user.sql</p><p>​顺便生成下User和UserMapper后面会用到</p><h4 id="3-6-3-思路分析"><a href="#3-6-3-思路分析" class="headerlink" title="3.6.3 思路分析"></a>3.6.3 思路分析</h4><p>登录</p><p>​①自定义登录接口  </p><p>​调用ProviderManager的方法进行认证 如果认证通过生成jwt</p><p>​把用户信息存入redis中</p><p>​②自定义UserDetailsService </p><p>​在这个实现类中去查询数据库</p><p>​注意配置passwordEncoder为BCryptPasswordEncoder</p><p>校验：</p><p>​①定义Jwt认证过滤器</p><p>​获取token</p><p>​解析token获取其中的userid</p><p>​从redis中获取用户信息</p><p>​存入SecurityContextHolder</p><h4 id="3-6-4-准备工作"><a href="#3-6-4-准备工作" class="headerlink" title="3.6.4 准备工作"></a>3.6.4 准备工作</h4><p>①添加依赖</p><p>注意放开Security依赖的注释</p><pre class=" language-xml"><code class="language-xml">        <span class="token comment" spellcheck="true">&lt;!--redis依赖--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-data-redis<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!--fastjson依赖--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.alibaba<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>fastjson<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.2.33<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!--jwt依赖--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>io.jsonwebtoken<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>jjwt<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>0.9.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span></code></pre><p>②工具类和相关配置类</p><p>​见 ：SGBlog\资源\登录功能所需资源</p><h4 id="3-6-5-登录接口代码实现"><a href="#3-6-5-登录接口代码实现" class="headerlink" title="3.6.5 登录接口代码实现"></a>3.6.5 登录接口代码实现</h4><h5 id="BlogLoginController"><a href="#BlogLoginController" class="headerlink" title="BlogLoginController"></a>BlogLoginController</h5><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@RestController</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BlogLoginController</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> BlogLoginService blogLoginService<span class="token punctuation">;</span>    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"/login"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> ResponseResult <span class="token function">login</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> User user<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> blogLoginService<span class="token punctuation">.</span><span class="token function">login</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h5 id="BlogLoginService"><a href="#BlogLoginService" class="headerlink" title="BlogLoginService"></a>BlogLoginService</h5><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">BlogLoginService</span> <span class="token punctuation">{</span>    ResponseResult <span class="token function">login</span><span class="token punctuation">(</span>User user<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h5 id="SecurityConfig"><a href="#SecurityConfig" class="headerlink" title="SecurityConfig"></a>SecurityConfig</h5><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Configuration</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SecurityConfig</span> <span class="token keyword">extends</span> <span class="token class-name">WebSecurityConfigurerAdapter</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> PasswordEncoder <span class="token function">passwordEncoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">BCryptPasswordEncoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">configure</span><span class="token punctuation">(</span>HttpSecurity http<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>        http                <span class="token comment" spellcheck="true">//关闭csrf</span>                <span class="token punctuation">.</span><span class="token function">csrf</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">disable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true">//不通过Session获取SecurityContext</span>                <span class="token punctuation">.</span><span class="token function">sessionManagement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sessionCreationPolicy</span><span class="token punctuation">(</span>SessionCreationPolicy<span class="token punctuation">.</span>STATELESS<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">and</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">authorizeRequests</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true">// 对于登录接口 允许匿名访问</span>                <span class="token punctuation">.</span><span class="token function">antMatchers</span><span class="token punctuation">(</span><span class="token string">"/login"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">anonymous</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true">// 除上面外的所有请求全部不需要认证即可访问</span>                <span class="token punctuation">.</span><span class="token function">anyRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">permitAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        http<span class="token punctuation">.</span><span class="token function">logout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">disable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//允许跨域</span>        http<span class="token punctuation">.</span><span class="token function">cors</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> AuthenticationManager <span class="token function">authenticationManagerBean</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">authenticationManagerBean</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h5 id="BlogLoginServiceImpl"><a href="#BlogLoginServiceImpl" class="headerlink" title="BlogLoginServiceImpl"></a>BlogLoginServiceImpl</h5><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Service</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BlogLoginServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">BlogLoginService</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> AuthenticationManager authenticationManager<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> RedisCache redisCache<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> ResponseResult <span class="token function">login</span><span class="token punctuation">(</span>User user<span class="token punctuation">)</span> <span class="token punctuation">{</span>        UsernamePasswordAuthenticationToken authenticationToken <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UsernamePasswordAuthenticationToken</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getUserName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>user<span class="token punctuation">.</span><span class="token function">getPassword</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Authentication authenticate <span class="token operator">=</span> authenticationManager<span class="token punctuation">.</span><span class="token function">authenticate</span><span class="token punctuation">(</span>authenticationToken<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//判断是否认证通过</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>Objects<span class="token punctuation">.</span><span class="token function">isNull</span><span class="token punctuation">(</span>authenticate<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">"用户名或密码错误"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">//获取userid 生成token</span>        LoginUser loginUser <span class="token operator">=</span> <span class="token punctuation">(</span>LoginUser<span class="token punctuation">)</span> authenticate<span class="token punctuation">.</span><span class="token function">getPrincipal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        String userId <span class="token operator">=</span> loginUser<span class="token punctuation">.</span><span class="token function">getUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        String jwt <span class="token operator">=</span> JwtUtil<span class="token punctuation">.</span><span class="token function">createJWT</span><span class="token punctuation">(</span>userId<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//把用户信息存入redis</span>        redisCache<span class="token punctuation">.</span><span class="token function">setCacheObject</span><span class="token punctuation">(</span><span class="token string">"bloglogin:"</span><span class="token operator">+</span>userId<span class="token punctuation">,</span>loginUser<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//把token和userinfo封装 返回</span>        <span class="token comment" spellcheck="true">//把User转换成UserInfoVo</span>        UserInfoVo userInfoVo <span class="token operator">=</span> BeanCopyUtils<span class="token punctuation">.</span><span class="token function">copyBean</span><span class="token punctuation">(</span>loginUser<span class="token punctuation">.</span><span class="token function">getUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> UserInfoVo<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        BlogUserLoginVo vo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BlogUserLoginVo</span><span class="token punctuation">(</span>jwt<span class="token punctuation">,</span>userInfoVo<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> ResponseResult<span class="token punctuation">.</span><span class="token function">okResult</span><span class="token punctuation">(</span>vo<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h5 id="UserDetailServiceImpl"><a href="#UserDetailServiceImpl" class="headerlink" title="UserDetailServiceImpl"></a>UserDetailServiceImpl</h5><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Service</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserDetailsServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">UserDetailsService</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> UserMapper userMapper<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> UserDetails <span class="token function">loadUserByUsername</span><span class="token punctuation">(</span>String username<span class="token punctuation">)</span> <span class="token keyword">throws</span> UsernameNotFoundException <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//根据用户名查询用户信息</span>        LambdaQueryWrapper<span class="token operator">&lt;</span>User<span class="token operator">></span> queryWrapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LambdaQueryWrapper</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        queryWrapper<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span>User<span class="token operator">:</span><span class="token operator">:</span>getUserName<span class="token punctuation">,</span>username<span class="token punctuation">)</span><span class="token punctuation">;</span>        User user <span class="token operator">=</span> userMapper<span class="token punctuation">.</span><span class="token function">selectOne</span><span class="token punctuation">(</span>queryWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//判断是否查到用户  如果没查到抛出异常</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>Objects<span class="token punctuation">.</span><span class="token function">isNull</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">"用户不存在"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">//返回用户信息</span>        <span class="token comment" spellcheck="true">// TODO 查询权限信息封装</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">LoginUser</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h5 id="LoginUser"><a href="#LoginUser" class="headerlink" title="LoginUser"></a>LoginUser</h5><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Data</span><span class="token annotation punctuation">@AllArgsConstructor</span><span class="token annotation punctuation">@NoArgsConstructor</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LoginUser</span> <span class="token keyword">implements</span> <span class="token class-name">UserDetails</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> User user<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> Collection<span class="token operator">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">GrantedAuthority</span><span class="token operator">></span> <span class="token function">getAuthorities</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> null<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> String <span class="token function">getPassword</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> user<span class="token punctuation">.</span><span class="token function">getPassword</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> String <span class="token function">getUsername</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> user<span class="token punctuation">.</span><span class="token function">getUserName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isAccountNonExpired</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isAccountNonLocked</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isCredentialsNonExpired</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h5 id="BlogUserLoginVo"><a href="#BlogUserLoginVo" class="headerlink" title="BlogUserLoginVo"></a>BlogUserLoginVo</h5><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Data</span><span class="token annotation punctuation">@NoArgsConstructor</span><span class="token annotation punctuation">@AllArgsConstructor</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BlogUserLoginVo</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> String token<span class="token punctuation">;</span>    <span class="token keyword">private</span> UserInfoVo userInfo<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h5 id="UserInfoVo"><a href="#UserInfoVo" class="headerlink" title="UserInfoVo"></a>UserInfoVo</h5><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Data</span><span class="token annotation punctuation">@Accessors</span><span class="token punctuation">(</span>chain <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserInfoVo</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/**     * 主键     */</span>    <span class="token keyword">private</span> Long id<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 昵称     */</span>    <span class="token keyword">private</span> String nickName<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 头像     */</span>    <span class="token keyword">private</span> String avatar<span class="token punctuation">;</span>    <span class="token keyword">private</span> String sex<span class="token punctuation">;</span>    <span class="token keyword">private</span> String email<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h4 id="3-6-6-登录校验过滤器代码实现"><a href="#3-6-6-登录校验过滤器代码实现" class="headerlink" title="3.6.6 登录校验过滤器代码实现"></a>3.6.6 登录校验过滤器代码实现</h4><h5 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h5><p>​①定义Jwt认证过滤器</p><p>​获取token</p><p>​解析token获取其中的userid</p><p>​从redis中获取用户信息</p><p>​存入SecurityContextHolder</p><h5 id="JwtAuthenticationTokenFilter"><a href="#JwtAuthenticationTokenFilter" class="headerlink" title="JwtAuthenticationTokenFilter"></a>JwtAuthenticationTokenFilter</h5><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Component</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JwtAuthenticationTokenFilter</span> <span class="token keyword">extends</span> <span class="token class-name">OncePerRequestFilter</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> RedisCache redisCache<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doFilterInternal</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">,</span> FilterChain filterChain<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//获取请求头中的token</span>        String token <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getHeader</span><span class="token punctuation">(</span><span class="token string">"token"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>StringUtils<span class="token punctuation">.</span><span class="token function">hasText</span><span class="token punctuation">(</span>token<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//说明该接口不需要登录  直接放行</span>            filterChain<span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">//解析获取userid</span>        Claims claims <span class="token operator">=</span> null<span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            claims <span class="token operator">=</span> JwtUtil<span class="token punctuation">.</span><span class="token function">parseJWT</span><span class="token punctuation">(</span>token<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//token超时  token非法</span>            <span class="token comment" spellcheck="true">//响应告诉前端需要重新登录</span>            ResponseResult result <span class="token operator">=</span> ResponseResult<span class="token punctuation">.</span><span class="token function">errorResult</span><span class="token punctuation">(</span>AppHttpCodeEnum<span class="token punctuation">.</span>NEED_LOGIN<span class="token punctuation">)</span><span class="token punctuation">;</span>            WebUtils<span class="token punctuation">.</span><span class="token function">renderString</span><span class="token punctuation">(</span>response<span class="token punctuation">,</span> JSON<span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        String userId <span class="token operator">=</span> claims<span class="token punctuation">.</span><span class="token function">getSubject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//从redis中获取用户信息</span>        LoginUser loginUser <span class="token operator">=</span> redisCache<span class="token punctuation">.</span><span class="token function">getCacheObject</span><span class="token punctuation">(</span><span class="token string">"bloglogin:"</span> <span class="token operator">+</span> userId<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//如果获取不到</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>Objects<span class="token punctuation">.</span><span class="token function">isNull</span><span class="token punctuation">(</span>loginUser<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//说明登录过期  提示重新登录</span>            ResponseResult result <span class="token operator">=</span> ResponseResult<span class="token punctuation">.</span><span class="token function">errorResult</span><span class="token punctuation">(</span>AppHttpCodeEnum<span class="token punctuation">.</span>NEED_LOGIN<span class="token punctuation">)</span><span class="token punctuation">;</span>            WebUtils<span class="token punctuation">.</span><span class="token function">renderString</span><span class="token punctuation">(</span>response<span class="token punctuation">,</span> JSON<span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">//存入SecurityContextHolder</span>        UsernamePasswordAuthenticationToken authenticationToken <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UsernamePasswordAuthenticationToken</span><span class="token punctuation">(</span>loginUser<span class="token punctuation">,</span>null<span class="token punctuation">,</span>null<span class="token punctuation">)</span><span class="token punctuation">;</span>        SecurityContextHolder<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setAuthentication</span><span class="token punctuation">(</span>authenticationToken<span class="token punctuation">)</span><span class="token punctuation">;</span>        filterChain<span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h5 id="SecurityConfig-1"><a href="#SecurityConfig-1" class="headerlink" title="SecurityConfig"></a>SecurityConfig</h5><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Configuration</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SecurityConfig</span> <span class="token keyword">extends</span> <span class="token class-name">WebSecurityConfigurerAdapter</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> AuthenticationManager <span class="token function">authenticationManagerBean</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">authenticationManagerBean</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> JwtAuthenticationTokenFilter jwtAuthenticationTokenFilter<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">configure</span><span class="token punctuation">(</span>HttpSecurity http<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>        http                <span class="token comment" spellcheck="true">//关闭csrf</span>                <span class="token punctuation">.</span><span class="token function">csrf</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">disable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true">//不通过Session获取SecurityContext</span>                <span class="token punctuation">.</span><span class="token function">sessionManagement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sessionCreationPolicy</span><span class="token punctuation">(</span>SessionCreationPolicy<span class="token punctuation">.</span>STATELESS<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">and</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">authorizeRequests</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true">// 对于登录接口 允许匿名访问</span>                <span class="token punctuation">.</span><span class="token function">antMatchers</span><span class="token punctuation">(</span><span class="token string">"/login"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">anonymous</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true">//jwt过滤器测试用，如果测试没有问题吧这里删除了</span>                <span class="token punctuation">.</span><span class="token function">antMatchers</span><span class="token punctuation">(</span><span class="token string">"/link/getAllLink"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">authenticated</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true">// 除上面外的所有请求全部不需要认证即可访问</span>                <span class="token punctuation">.</span><span class="token function">anyRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">permitAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        http<span class="token punctuation">.</span><span class="token function">logout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">disable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//把jwtAuthenticationTokenFilter添加到SpringSecurity的过滤器链中</span>        http<span class="token punctuation">.</span><span class="token function">addFilterBefore</span><span class="token punctuation">(</span>jwtAuthenticationTokenFilter<span class="token punctuation">,</span> UsernamePasswordAuthenticationFilter<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//允许跨域</span>        http<span class="token punctuation">.</span><span class="token function">cors</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> PasswordEncoder <span class="token function">passwordEncoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">BCryptPasswordEncoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="3-7-认证授权失败处理"><a href="#3-7-认证授权失败处理" class="headerlink" title="3.7 认证授权失败处理"></a>3.7 认证授权失败处理</h3><p>​目前我们的项目在认证出错或者权限不足的时候响应回来的Json是Security的异常处理结果。但是这个响应的格式肯定是不符合我们项目的接口规范的。所以需要自定义异常处理。</p><p>​AuthenticationEntryPoint 认证失败处理器</p><p>​AccessDeniedHandler 授权失败处理器</p><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Component</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AuthenticationEntryPointImpl</span> <span class="token keyword">implements</span> <span class="token class-name">AuthenticationEntryPoint</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">commence</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">,</span> AuthenticationException authException<span class="token punctuation">)</span> <span class="token keyword">throws</span> IOException<span class="token punctuation">,</span> ServletException <span class="token punctuation">{</span>        authException<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//InsufficientAuthenticationException</span>        <span class="token comment" spellcheck="true">//BadCredentialsException</span>        ResponseResult result <span class="token operator">=</span> null<span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>authException <span class="token keyword">instanceof</span> <span class="token class-name">BadCredentialsException</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            result <span class="token operator">=</span> ResponseResult<span class="token punctuation">.</span><span class="token function">errorResult</span><span class="token punctuation">(</span>AppHttpCodeEnum<span class="token punctuation">.</span>LOGIN_ERROR<span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>authException<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>authException <span class="token keyword">instanceof</span> <span class="token class-name">InsufficientAuthenticationException</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            result <span class="token operator">=</span> ResponseResult<span class="token punctuation">.</span><span class="token function">errorResult</span><span class="token punctuation">(</span>AppHttpCodeEnum<span class="token punctuation">.</span>NEED_LOGIN<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>            result <span class="token operator">=</span> ResponseResult<span class="token punctuation">.</span><span class="token function">errorResult</span><span class="token punctuation">(</span>AppHttpCodeEnum<span class="token punctuation">.</span>SYSTEM_ERROR<span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">"认证或授权失败"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">//响应给前端</span>        WebUtils<span class="token punctuation">.</span><span class="token function">renderString</span><span class="token punctuation">(</span>response<span class="token punctuation">,</span> JSON<span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Component</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AccessDeniedHandlerImpl</span> <span class="token keyword">implements</span> <span class="token class-name">AccessDeniedHandler</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">handle</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">,</span> AccessDeniedException accessDeniedException<span class="token punctuation">)</span> <span class="token keyword">throws</span> IOException<span class="token punctuation">,</span> ServletException <span class="token punctuation">{</span>        accessDeniedException<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        ResponseResult result <span class="token operator">=</span> ResponseResult<span class="token punctuation">.</span><span class="token function">errorResult</span><span class="token punctuation">(</span>AppHttpCodeEnum<span class="token punctuation">.</span>NO_OPERATOR_AUTH<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//响应给前端</span>        WebUtils<span class="token punctuation">.</span><span class="token function">renderString</span><span class="token punctuation">(</span>response<span class="token punctuation">,</span> JSON<span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>配置Security异常处理器</p><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Configuration</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SecurityConfig</span> <span class="token keyword">extends</span> <span class="token class-name">WebSecurityConfigurerAdapter</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> AuthenticationManager <span class="token function">authenticationManagerBean</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">authenticationManagerBean</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> JwtAuthenticationTokenFilter jwtAuthenticationTokenFilter<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Autowired</span>    AuthenticationEntryPoint authenticationEntryPoint<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Autowired</span>    AccessDeniedHandler accessDeniedHandler<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">configure</span><span class="token punctuation">(</span>HttpSecurity http<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>        http                <span class="token comment" spellcheck="true">//关闭csrf</span>                <span class="token punctuation">.</span><span class="token function">csrf</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">disable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true">//不通过Session获取SecurityContext</span>                <span class="token punctuation">.</span><span class="token function">sessionManagement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sessionCreationPolicy</span><span class="token punctuation">(</span>SessionCreationPolicy<span class="token punctuation">.</span>STATELESS<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">and</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">authorizeRequests</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true">// 对于登录接口 允许匿名访问</span>                <span class="token punctuation">.</span><span class="token function">antMatchers</span><span class="token punctuation">(</span><span class="token string">"/login"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">anonymous</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true">//jwt过滤器测试用，如果测试没有问题吧这里删除了</span>                <span class="token punctuation">.</span><span class="token function">antMatchers</span><span class="token punctuation">(</span><span class="token string">"/link/getAllLink"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">authenticated</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true">// 除上面外的所有请求全部不需要认证即可访问</span>                <span class="token punctuation">.</span><span class="token function">anyRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">permitAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//配置异常处理器</span>        http<span class="token punctuation">.</span><span class="token function">exceptionHandling</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">authenticationEntryPoint</span><span class="token punctuation">(</span>authenticationEntryPoint<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">accessDeniedHandler</span><span class="token punctuation">(</span>accessDeniedHandler<span class="token punctuation">)</span><span class="token punctuation">;</span>        http<span class="token punctuation">.</span><span class="token function">logout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">disable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//把jwtAuthenticationTokenFilter添加到SpringSecurity的过滤器链中</span>        http<span class="token punctuation">.</span><span class="token function">addFilterBefore</span><span class="token punctuation">(</span>jwtAuthenticationTokenFilter<span class="token punctuation">,</span> UsernamePasswordAuthenticationFilter<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//允许跨域</span>        http<span class="token punctuation">.</span><span class="token function">cors</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> PasswordEncoder <span class="token function">passwordEncoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">BCryptPasswordEncoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="3-8-统一异常处理"><a href="#3-8-统一异常处理" class="headerlink" title="3.8 统一异常处理"></a>3.8 统一异常处理</h3><p>​实际我们在开发过程中可能需要做很多的判断校验，如果出现了非法情况我们是期望响应对应的提示的。但是如果我们每次都自己手动去处理就会非常麻烦。我们可以选择直接抛出异常的方式，然后对异常进行统一处理。把异常中的信息封装成ResponseResult响应给前端。</p><p>​</p><p>SystemException</p><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">/** * @Author 三更  B站： https://space.bilibili.com/663528522 */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SystemException</span> <span class="token keyword">extends</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> code<span class="token punctuation">;</span>    <span class="token keyword">private</span> String msg<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> code<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> String <span class="token function">getMsg</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> msg<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token function">SystemException</span><span class="token punctuation">(</span>AppHttpCodeEnum httpCodeEnum<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">(</span>httpCodeEnum<span class="token punctuation">.</span><span class="token function">getMsg</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>code <span class="token operator">=</span> httpCodeEnum<span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>msg <span class="token operator">=</span> httpCodeEnum<span class="token punctuation">.</span><span class="token function">getMsg</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token punctuation">}</span></code></pre><p>GlobalExceptionHandler</p><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@RestControllerAdvice</span><span class="token annotation punctuation">@Slf4j</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">GlobalExceptionHandler</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@ExceptionHandler</span><span class="token punctuation">(</span>SystemException<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> ResponseResult <span class="token function">systemExceptionHandler</span><span class="token punctuation">(</span>SystemException e<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//打印异常信息</span>        log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"出现了异常！ {}"</span><span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//从异常对象中获取提示信息封装返回</span>        <span class="token keyword">return</span> ResponseResult<span class="token punctuation">.</span><span class="token function">errorResult</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>e<span class="token punctuation">.</span><span class="token function">getMsg</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@ExceptionHandler</span><span class="token punctuation">(</span>Exception<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> ResponseResult <span class="token function">exceptionHandler</span><span class="token punctuation">(</span>Exception e<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//打印异常信息</span>        log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"出现了异常！ {}"</span><span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//从异常对象中获取提示信息封装返回</span>        <span class="token keyword">return</span> ResponseResult<span class="token punctuation">.</span><span class="token function">errorResult</span><span class="token punctuation">(</span>AppHttpCodeEnum<span class="token punctuation">.</span>SYSTEM_ERROR<span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="3-9-退出登录接口"><a href="#3-9-退出登录接口" class="headerlink" title="3.9 退出登录接口"></a>3.9 退出登录接口</h3><h4 id="3-9-1-接口设计"><a href="#3-9-1-接口设计" class="headerlink" title="3.9.1 接口设计"></a>3.9.1 接口设计</h4><table><thead><tr><th>请求方式</th><th>请求地址</th><th>请求头</th></tr></thead><tbody><tr><td>POST</td><td>/logout</td><td>需要token请求头</td></tr></tbody></table><p>响应格式:</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>    <span class="token property">"code"</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span>    <span class="token property">"msg"</span><span class="token operator">:</span> <span class="token string">"操作成功"</span><span class="token punctuation">}</span></code></pre><h4 id="3-9-2-代码实现"><a href="#3-9-2-代码实现" class="headerlink" title="3.9.2 代码实现"></a>3.9.2 代码实现</h4><p>要实现的操作：</p><p>​删除redis中的用户信息</p><p>BlogLoginController</p><pre class=" language-java"><code class="language-java">    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"/logout"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> ResponseResult <span class="token function">logout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> blogLoginService<span class="token punctuation">.</span><span class="token function">logout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><p>BlogLoginService</p><pre class=" language-java"><code class="language-java">ResponseResult <span class="token function">logout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>BlogLoginServiceImpl</p><pre class=" language-java"><code class="language-java">    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> ResponseResult <span class="token function">logout</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//获取token 解析获取userid</span>        Authentication authentication <span class="token operator">=</span> SecurityContextHolder<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getAuthentication</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        LoginUser loginUser <span class="token operator">=</span> <span class="token punctuation">(</span>LoginUser<span class="token punctuation">)</span> authentication<span class="token punctuation">.</span><span class="token function">getPrincipal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//获取userid</span>        Long userId <span class="token operator">=</span> loginUser<span class="token punctuation">.</span><span class="token function">getUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//删除redis中的用户信息</span>        redisCache<span class="token punctuation">.</span><span class="token function">deleteObject</span><span class="token punctuation">(</span><span class="token string">"bloglogin:"</span><span class="token operator">+</span>userId<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> ResponseResult<span class="token punctuation">.</span><span class="token function">okResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><p>SecurityConfig</p><p>要关闭默认的退出登录功能。并且要配置我们的退出登录接口需要认证才能访问</p><pre class=" language-java"><code class="language-java">    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">configure</span><span class="token punctuation">(</span>HttpSecurity http<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>        http                <span class="token comment" spellcheck="true">//关闭csrf</span>                <span class="token punctuation">.</span><span class="token function">csrf</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">disable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true">//不通过Session获取SecurityContext</span>                <span class="token punctuation">.</span><span class="token function">sessionManagement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sessionCreationPolicy</span><span class="token punctuation">(</span>SessionCreationPolicy<span class="token punctuation">.</span>STATELESS<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">and</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">authorizeRequests</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true">// 对于登录接口 允许匿名访问</span>                <span class="token punctuation">.</span><span class="token function">antMatchers</span><span class="token punctuation">(</span><span class="token string">"/login"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">anonymous</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true">//注销接口需要认证才能访问</span>                <span class="token punctuation">.</span><span class="token function">antMatchers</span><span class="token punctuation">(</span><span class="token string">"/logout"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">authenticated</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true">//jwt过滤器测试用，如果测试没有问题吧这里删除了</span>                <span class="token punctuation">.</span><span class="token function">antMatchers</span><span class="token punctuation">(</span><span class="token string">"/link/getAllLink"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">authenticated</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true">// 除上面外的所有请求全部不需要认证即可访问</span>                <span class="token punctuation">.</span><span class="token function">anyRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">permitAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//配置异常处理器</span>        http<span class="token punctuation">.</span><span class="token function">exceptionHandling</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">authenticationEntryPoint</span><span class="token punctuation">(</span>authenticationEntryPoint<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">accessDeniedHandler</span><span class="token punctuation">(</span>accessDeniedHandler<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//关闭默认的注销功能</span>        http<span class="token punctuation">.</span><span class="token function">logout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">disable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//把jwtAuthenticationTokenFilter添加到SpringSecurity的过滤器链中</span>        http<span class="token punctuation">.</span><span class="token function">addFilterBefore</span><span class="token punctuation">(</span>jwtAuthenticationTokenFilter<span class="token punctuation">,</span> UsernamePasswordAuthenticationFilter<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//允许跨域</span>        http<span class="token punctuation">.</span><span class="token function">cors</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><h3 id="3-10-查询评论列表接口"><a href="#3-10-查询评论列表接口" class="headerlink" title="3.10 查询评论列表接口"></a>3.10 查询评论列表接口</h3><h4 id="3-10-1-需求"><a href="#3-10-1-需求" class="headerlink" title="3.10.1 需求"></a>3.10.1 需求</h4><p>​文章详情页面要展示这篇文章下的评论列表。</p><p>​效果如下:</p><p>![image-20220208214106296](E:/IdeaWorkSpace/SGBlog (20)/SGBlog/笔记/img/image-20220208214106296.png)</p><h4 id="3-10-2-评论表分析"><a href="#3-10-2-评论表分析" class="headerlink" title="3.10.2 评论表分析"></a>3.10.2 评论表分析</h4><p>​通过需求去分析需要有哪些字段。</p><p>​建表SQL及初始化数据见：SGBlog\资源\SQL\sg_comment.sql</p><p>​<strong>顺便生成下对应的代码</strong></p><h4 id="3-10-3-接口设计"><a href="#3-10-3-接口设计" class="headerlink" title="3.10.3 接口设计"></a>3.10.3 接口设计</h4><table><thead><tr><th>请求方式</th><th>请求地址</th><th>请求头</th></tr></thead><tbody><tr><td>GET</td><td>/comment/commentList</td><td>不需要token请求头</td></tr></tbody></table><p>Query格式请求参数：</p><p>articleId:文章id</p><p>pageNum: 页码</p><p>pageSize: 每页条数</p><p>响应格式:</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>    <span class="token property">"code"</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span>    <span class="token property">"data"</span><span class="token operator">:</span> <span class="token punctuation">{</span>        <span class="token property">"rows"</span><span class="token operator">:</span> <span class="token punctuation">[</span>            <span class="token punctuation">{</span>                <span class="token property">"articleId"</span><span class="token operator">:</span> <span class="token string">"1"</span><span class="token punctuation">,</span>                <span class="token property">"children"</span><span class="token operator">:</span> <span class="token punctuation">[</span>                    <span class="token punctuation">{</span>                        <span class="token property">"articleId"</span><span class="token operator">:</span> <span class="token string">"1"</span><span class="token punctuation">,</span>                        <span class="token property">"content"</span><span class="token operator">:</span> <span class="token string">"你说啥？"</span><span class="token punctuation">,</span>                        <span class="token property">"createBy"</span><span class="token operator">:</span> <span class="token string">"1"</span><span class="token punctuation">,</span>                        <span class="token property">"createTime"</span><span class="token operator">:</span> <span class="token string">"2022-01-30 10:06:21"</span><span class="token punctuation">,</span>                        <span class="token property">"id"</span><span class="token operator">:</span> <span class="token string">"20"</span><span class="token punctuation">,</span>                        <span class="token property">"rootId"</span><span class="token operator">:</span> <span class="token string">"1"</span><span class="token punctuation">,</span>                        <span class="token property">"toCommentId"</span><span class="token operator">:</span> <span class="token string">"1"</span><span class="token punctuation">,</span>                        <span class="token property">"toCommentUserId"</span><span class="token operator">:</span> <span class="token string">"1"</span><span class="token punctuation">,</span>                        <span class="token property">"toCommentUserName"</span><span class="token operator">:</span> <span class="token string">"sg333"</span><span class="token punctuation">,</span>                        <span class="token property">"username"</span><span class="token operator">:</span> <span class="token string">"sg333"</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">]</span><span class="token punctuation">,</span>                <span class="token property">"content"</span><span class="token operator">:</span> <span class="token string">"asS"</span><span class="token punctuation">,</span>                <span class="token property">"createBy"</span><span class="token operator">:</span> <span class="token string">"1"</span><span class="token punctuation">,</span>                <span class="token property">"createTime"</span><span class="token operator">:</span> <span class="token string">"2022-01-29 07:59:22"</span><span class="token punctuation">,</span>                <span class="token property">"id"</span><span class="token operator">:</span> <span class="token string">"1"</span><span class="token punctuation">,</span>                <span class="token property">"rootId"</span><span class="token operator">:</span> <span class="token string">"-1"</span><span class="token punctuation">,</span>                <span class="token property">"toCommentId"</span><span class="token operator">:</span> <span class="token string">"-1"</span><span class="token punctuation">,</span>                <span class="token property">"toCommentUserId"</span><span class="token operator">:</span> <span class="token string">"-1"</span><span class="token punctuation">,</span>                <span class="token property">"username"</span><span class="token operator">:</span> <span class="token string">"sg333"</span>            <span class="token punctuation">}</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token property">"total"</span><span class="token operator">:</span> <span class="token string">"15"</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"msg"</span><span class="token operator">:</span> <span class="token string">"操作成功"</span><span class="token punctuation">}</span></code></pre><h4 id="3-10-4-代码实现"><a href="#3-10-4-代码实现" class="headerlink" title="3.10.4 代码实现"></a>3.10.4 代码实现</h4><h5 id="3-10-4-1-不考虑子评论"><a href="#3-10-4-1-不考虑子评论" class="headerlink" title="3.10.4.1 不考虑子评论"></a>3.10.4.1 不考虑子评论</h5><p>CommentController</p><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@RestController</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/comment"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CommentController</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> CommentService commentService<span class="token punctuation">;</span>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/commentList"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> ResponseResult <span class="token function">commentList</span><span class="token punctuation">(</span>Long articleId<span class="token punctuation">,</span>Integer pageNum<span class="token punctuation">,</span>Integer pageSize<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> commentService<span class="token punctuation">.</span><span class="token function">commentList</span><span class="token punctuation">(</span>articleId<span class="token punctuation">,</span>pageNum<span class="token punctuation">,</span>pageSize<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>CommentService</p><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">CommentService</span> <span class="token keyword">extends</span> <span class="token class-name">IService</span><span class="token operator">&lt;</span>Comment<span class="token operator">></span> <span class="token punctuation">{</span>    ResponseResult <span class="token function">commentList</span><span class="token punctuation">(</span>Long articleId<span class="token punctuation">,</span> Integer pageNum<span class="token punctuation">,</span> Integer pageSize<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>CommentServiceImpl</p><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Service</span><span class="token punctuation">(</span><span class="token string">"commentService"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CommentServiceImpl</span> <span class="token keyword">extends</span> <span class="token class-name">ServiceImpl</span><span class="token operator">&lt;</span>CommentMapper<span class="token punctuation">,</span> Comment<span class="token operator">></span> <span class="token keyword">implements</span> <span class="token class-name">CommentService</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> UserService userService<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> ResponseResult <span class="token function">commentList</span><span class="token punctuation">(</span>Long articleId<span class="token punctuation">,</span> Integer pageNum<span class="token punctuation">,</span> Integer pageSize<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//查询对应文章的根评论</span>        LambdaQueryWrapper<span class="token operator">&lt;</span>Comment<span class="token operator">></span> queryWrapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LambdaQueryWrapper</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//对articleId进行判断</span>        queryWrapper<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span>Comment<span class="token operator">:</span><span class="token operator">:</span>getArticleId<span class="token punctuation">,</span>articleId<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//根评论 rootId为-1</span>        queryWrapper<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span>Comment<span class="token operator">:</span><span class="token operator">:</span>getRootId<span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//分页查询</span>        Page<span class="token operator">&lt;</span>Comment<span class="token operator">></span> page <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Page</span><span class="token punctuation">(</span>pageNum<span class="token punctuation">,</span>pageSize<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">page</span><span class="token punctuation">(</span>page<span class="token punctuation">,</span>queryWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>        List<span class="token operator">&lt;</span>CommentVo<span class="token operator">></span> commentVoList <span class="token operator">=</span> <span class="token function">toCommentVoList</span><span class="token punctuation">(</span>page<span class="token punctuation">.</span><span class="token function">getRecords</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> ResponseResult<span class="token punctuation">.</span><span class="token function">okResult</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">PageVo</span><span class="token punctuation">(</span>commentVoList<span class="token punctuation">,</span>page<span class="token punctuation">.</span><span class="token function">getTotal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">private</span> List<span class="token operator">&lt;</span>CommentVo<span class="token operator">></span> <span class="token function">toCommentVoList</span><span class="token punctuation">(</span>List<span class="token operator">&lt;</span>Comment<span class="token operator">></span> list<span class="token punctuation">)</span><span class="token punctuation">{</span>        List<span class="token operator">&lt;</span>CommentVo<span class="token operator">></span> commentVos <span class="token operator">=</span> BeanCopyUtils<span class="token punctuation">.</span><span class="token function">copyBeanList</span><span class="token punctuation">(</span>list<span class="token punctuation">,</span> CommentVo<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//遍历vo集合</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span>CommentVo commentVo <span class="token operator">:</span> commentVos<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//通过creatyBy查询用户的昵称并赋值</span>            String nickName <span class="token operator">=</span> userService<span class="token punctuation">.</span><span class="token function">getById</span><span class="token punctuation">(</span>commentVo<span class="token punctuation">.</span><span class="token function">getCreateBy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getNickName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            commentVo<span class="token punctuation">.</span><span class="token function">setUsername</span><span class="token punctuation">(</span>nickName<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//通过toCommentUserId查询用户的昵称并赋值</span>            <span class="token comment" spellcheck="true">//如果toCommentUserId不为-1才进行查询</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>commentVo<span class="token punctuation">.</span><span class="token function">getToCommentUserId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">!=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                String toCommentUserName <span class="token operator">=</span> userService<span class="token punctuation">.</span><span class="token function">getById</span><span class="token punctuation">(</span>commentVo<span class="token punctuation">.</span><span class="token function">getToCommentUserId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getNickName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                commentVo<span class="token punctuation">.</span><span class="token function">setToCommentUserName</span><span class="token punctuation">(</span>toCommentUserName<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> commentVos<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>CommentVo</p><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Data</span><span class="token annotation punctuation">@NoArgsConstructor</span><span class="token annotation punctuation">@AllArgsConstructor</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CommentVo</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> Long id<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//文章id</span>    <span class="token keyword">private</span> Long articleId<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//根评论id</span>    <span class="token keyword">private</span> Long rootId<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//评论内容</span>    <span class="token keyword">private</span> String content<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//所回复的目标评论的userid</span>    <span class="token keyword">private</span> Long toCommentUserId<span class="token punctuation">;</span>    <span class="token keyword">private</span> String toCommentUserName<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//回复目标评论id</span>    <span class="token keyword">private</span> Long toCommentId<span class="token punctuation">;</span>    <span class="token keyword">private</span> Long createBy<span class="token punctuation">;</span>    <span class="token keyword">private</span> Date createTime<span class="token punctuation">;</span>    <span class="token keyword">private</span> String username<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h5 id="3-10-4-2-查询子评论"><a href="#3-10-4-2-查询子评论" class="headerlink" title="3.10.4.2 查询子评论"></a>3.10.4.2 查询子评论</h5><p>CommentVo在之前的基础上增加了  private List<commentvo> children;</commentvo></p><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Data</span><span class="token annotation punctuation">@NoArgsConstructor</span><span class="token annotation punctuation">@AllArgsConstructor</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CommentVo</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> Long id<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//文章id</span>    <span class="token keyword">private</span> Long articleId<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//根评论id</span>    <span class="token keyword">private</span> Long rootId<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//评论内容</span>    <span class="token keyword">private</span> String content<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//所回复的目标评论的userid</span>    <span class="token keyword">private</span> Long toCommentUserId<span class="token punctuation">;</span>    <span class="token keyword">private</span> String toCommentUserName<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//回复目标评论id</span>    <span class="token keyword">private</span> Long toCommentId<span class="token punctuation">;</span>    <span class="token keyword">private</span> Long createBy<span class="token punctuation">;</span>    <span class="token keyword">private</span> Date createTime<span class="token punctuation">;</span>    <span class="token keyword">private</span> String username<span class="token punctuation">;</span>    <span class="token keyword">private</span> List<span class="token operator">&lt;</span>CommentVo<span class="token operator">></span> children<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>CommentServiceImpl</p><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Service</span><span class="token punctuation">(</span><span class="token string">"commentService"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CommentServiceImpl</span> <span class="token keyword">extends</span> <span class="token class-name">ServiceImpl</span><span class="token operator">&lt;</span>CommentMapper<span class="token punctuation">,</span> Comment<span class="token operator">></span> <span class="token keyword">implements</span> <span class="token class-name">CommentService</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> UserService userService<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> ResponseResult <span class="token function">commentList</span><span class="token punctuation">(</span>Long articleId<span class="token punctuation">,</span> Integer pageNum<span class="token punctuation">,</span> Integer pageSize<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//查询对应文章的根评论</span>        LambdaQueryWrapper<span class="token operator">&lt;</span>Comment<span class="token operator">></span> queryWrapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LambdaQueryWrapper</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//对articleId进行判断</span>        queryWrapper<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span>Comment<span class="token operator">:</span><span class="token operator">:</span>getArticleId<span class="token punctuation">,</span>articleId<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//根评论 rootId为-1</span>        queryWrapper<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span>Comment<span class="token operator">:</span><span class="token operator">:</span>getRootId<span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//分页查询</span>        Page<span class="token operator">&lt;</span>Comment<span class="token operator">></span> page <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Page</span><span class="token punctuation">(</span>pageNum<span class="token punctuation">,</span>pageSize<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">page</span><span class="token punctuation">(</span>page<span class="token punctuation">,</span>queryWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>        List<span class="token operator">&lt;</span>CommentVo<span class="token operator">></span> commentVoList <span class="token operator">=</span> <span class="token function">toCommentVoList</span><span class="token punctuation">(</span>page<span class="token punctuation">.</span><span class="token function">getRecords</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//查询所有根评论对应的子评论集合，并且赋值给对应的属性</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span>CommentVo commentVo <span class="token operator">:</span> commentVoList<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//查询对应的子评论</span>            List<span class="token operator">&lt;</span>CommentVo<span class="token operator">></span> children <span class="token operator">=</span> <span class="token function">getChildren</span><span class="token punctuation">(</span>commentVo<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//赋值</span>            commentVo<span class="token punctuation">.</span><span class="token function">setChildren</span><span class="token punctuation">(</span>children<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> ResponseResult<span class="token punctuation">.</span><span class="token function">okResult</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">PageVo</span><span class="token punctuation">(</span>commentVoList<span class="token punctuation">,</span>page<span class="token punctuation">.</span><span class="token function">getTotal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 根据根评论的id查询所对应的子评论的集合     * @param id 根评论的id     * @return     */</span>    <span class="token keyword">private</span> List<span class="token operator">&lt;</span>CommentVo<span class="token operator">></span> <span class="token function">getChildren</span><span class="token punctuation">(</span>Long id<span class="token punctuation">)</span> <span class="token punctuation">{</span>        LambdaQueryWrapper<span class="token operator">&lt;</span>Comment<span class="token operator">></span> queryWrapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LambdaQueryWrapper</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        queryWrapper<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span>Comment<span class="token operator">:</span><span class="token operator">:</span>getRootId<span class="token punctuation">,</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>        queryWrapper<span class="token punctuation">.</span><span class="token function">orderByAsc</span><span class="token punctuation">(</span>Comment<span class="token operator">:</span><span class="token operator">:</span>getCreateTime<span class="token punctuation">)</span><span class="token punctuation">;</span>        List<span class="token operator">&lt;</span>Comment<span class="token operator">></span> comments <span class="token operator">=</span> <span class="token function">list</span><span class="token punctuation">(</span>queryWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>        List<span class="token operator">&lt;</span>CommentVo<span class="token operator">></span> commentVos <span class="token operator">=</span> <span class="token function">toCommentVoList</span><span class="token punctuation">(</span>comments<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> commentVos<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">private</span> List<span class="token operator">&lt;</span>CommentVo<span class="token operator">></span> <span class="token function">toCommentVoList</span><span class="token punctuation">(</span>List<span class="token operator">&lt;</span>Comment<span class="token operator">></span> list<span class="token punctuation">)</span><span class="token punctuation">{</span>        List<span class="token operator">&lt;</span>CommentVo<span class="token operator">></span> commentVos <span class="token operator">=</span> BeanCopyUtils<span class="token punctuation">.</span><span class="token function">copyBeanList</span><span class="token punctuation">(</span>list<span class="token punctuation">,</span> CommentVo<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//遍历vo集合</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span>CommentVo commentVo <span class="token operator">:</span> commentVos<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//通过creatyBy查询用户的昵称并赋值</span>            String nickName <span class="token operator">=</span> userService<span class="token punctuation">.</span><span class="token function">getById</span><span class="token punctuation">(</span>commentVo<span class="token punctuation">.</span><span class="token function">getCreateBy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getNickName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            commentVo<span class="token punctuation">.</span><span class="token function">setUsername</span><span class="token punctuation">(</span>nickName<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//通过toCommentUserId查询用户的昵称并赋值</span>            <span class="token comment" spellcheck="true">//如果toCommentUserId不为-1才进行查询</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>commentVo<span class="token punctuation">.</span><span class="token function">getToCommentUserId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">!=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                String toCommentUserName <span class="token operator">=</span> userService<span class="token punctuation">.</span><span class="token function">getById</span><span class="token punctuation">(</span>commentVo<span class="token punctuation">.</span><span class="token function">getToCommentUserId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getNickName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                commentVo<span class="token punctuation">.</span><span class="token function">setToCommentUserName</span><span class="token punctuation">(</span>toCommentUserName<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> commentVos<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="3-11-发表评论接口"><a href="#3-11-发表评论接口" class="headerlink" title="3.11 发表评论接口"></a>3.11 发表评论接口</h3><h4 id="3-11-1-需求"><a href="#3-11-1-需求" class="headerlink" title="3.11.1 需求"></a>3.11.1 需求</h4><p>​用户登录后可以对文章发表评论，也可以对评论进行回复。</p><p>​用户登录后也可以在友链页面进行评论。</p><h4 id="3-11-2-接口设计"><a href="#3-11-2-接口设计" class="headerlink" title="3.11.2 接口设计"></a>3.11.2 接口设计</h4><table><thead><tr><th>请求方式</th><th>请求地址</th><th>请求头</th></tr></thead><tbody><tr><td>POST</td><td>/comment</td><td>需要token头</td></tr></tbody></table><h5 id="请求体："><a href="#请求体：" class="headerlink" title="请求体："></a>请求体：</h5><p>回复了文章：</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span><span class="token property">"articleId"</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token property">"type"</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token property">"rootId"</span><span class="token operator">:</span>-<span class="token number">1</span><span class="token punctuation">,</span><span class="token property">"toCommentId"</span><span class="token operator">:</span>-<span class="token number">1</span><span class="token punctuation">,</span><span class="token property">"toCommentUserId"</span><span class="token operator">:</span>-<span class="token number">1</span><span class="token punctuation">,</span><span class="token property">"content"</span><span class="token operator">:</span><span class="token string">"评论了文章"</span><span class="token punctuation">}</span></code></pre><p>回复了某条评论：</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span><span class="token property">"articleId"</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token property">"type"</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token property">"rootId"</span><span class="token operator">:</span><span class="token string">"3"</span><span class="token punctuation">,</span><span class="token property">"toCommentId"</span><span class="token operator">:</span><span class="token string">"3"</span><span class="token punctuation">,</span><span class="token property">"toCommentUserId"</span><span class="token operator">:</span><span class="token string">"1"</span><span class="token punctuation">,</span><span class="token property">"content"</span><span class="token operator">:</span><span class="token string">"回复了某条评论"</span><span class="token punctuation">}</span></code></pre><p>如果是友链评论，type应该为1</p><h5 id="响应格式："><a href="#响应格式：" class="headerlink" title="响应格式："></a>响应格式：</h5><pre class=" language-java"><code class="language-java"><span class="token punctuation">{</span>    <span class="token string">"code"</span><span class="token operator">:</span><span class="token number">200</span><span class="token punctuation">,</span>    <span class="token string">"msg"</span><span class="token operator">:</span><span class="token string">"操作成功"</span><span class="token punctuation">}</span></code></pre><h4 id="3-11-3-代码实现"><a href="#3-11-3-代码实现" class="headerlink" title="3.11.3 代码实现"></a>3.11.3 代码实现</h4><p>CommentController</p><pre class=" language-java"><code class="language-java">    <span class="token annotation punctuation">@PostMapping</span>    <span class="token keyword">public</span> ResponseResult <span class="token function">addComment</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> Comment comment<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> commentService<span class="token punctuation">.</span><span class="token function">addComment</span><span class="token punctuation">(</span>comment<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><p>CommentService</p><pre class=" language-java"><code class="language-java">ResponseResult <span class="token function">addComment</span><span class="token punctuation">(</span>Comment comment<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>CommentServiceImpl</p><pre class=" language-java"><code class="language-java">    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> ResponseResult <span class="token function">addComment</span><span class="token punctuation">(</span>Comment comment<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//评论内容不能为空</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>StringUtils<span class="token punctuation">.</span><span class="token function">hasText</span><span class="token punctuation">(</span>comment<span class="token punctuation">.</span><span class="token function">getContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">SystemException</span><span class="token punctuation">(</span>AppHttpCodeEnum<span class="token punctuation">.</span>CONTENT_NOT_NULL<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token function">save</span><span class="token punctuation">(</span>comment<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> ResponseResult<span class="token punctuation">.</span><span class="token function">okResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><p>SecurityUtils</p><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">/** * @Author 三更  B站： https://space.bilibili.com/663528522 */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SecurityUtils</span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/**     * 获取用户     **/</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> LoginUser <span class="token function">getLoginUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token punctuation">(</span>LoginUser<span class="token punctuation">)</span> <span class="token function">getAuthentication</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getPrincipal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 获取Authentication     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> Authentication <span class="token function">getAuthentication</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> SecurityContextHolder<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getAuthentication</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> Boolean <span class="token function">isAdmin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        Long id <span class="token operator">=</span> <span class="token function">getLoginUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> id <span class="token operator">!=</span> null <span class="token operator">&amp;&amp;</span> 1L <span class="token operator">==</span> id<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> Long <span class="token function">getUserId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token function">getLoginUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>配置MP字段自动填充</p><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Component</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyMetaObjectHandler</span> <span class="token keyword">implements</span> <span class="token class-name">MetaObjectHandler</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">insertFill</span><span class="token punctuation">(</span>MetaObject metaObject<span class="token punctuation">)</span> <span class="token punctuation">{</span>        Long userId <span class="token operator">=</span> null<span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            userId <span class="token operator">=</span> SecurityUtils<span class="token punctuation">.</span><span class="token function">getUserId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            userId <span class="token operator">=</span> <span class="token operator">-</span>1L<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//表示是自己创建</span>        <span class="token punctuation">}</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setFieldValByName</span><span class="token punctuation">(</span><span class="token string">"createTime"</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> metaObject<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setFieldValByName</span><span class="token punctuation">(</span><span class="token string">"createBy"</span><span class="token punctuation">,</span>userId <span class="token punctuation">,</span> metaObject<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setFieldValByName</span><span class="token punctuation">(</span><span class="token string">"updateTime"</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> metaObject<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setFieldValByName</span><span class="token punctuation">(</span><span class="token string">"updateBy"</span><span class="token punctuation">,</span> userId<span class="token punctuation">,</span> metaObject<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">updateFill</span><span class="token punctuation">(</span>MetaObject metaObject<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setFieldValByName</span><span class="token punctuation">(</span><span class="token string">"updateTime"</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> metaObject<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setFieldValByName</span><span class="token punctuation">(</span><span class="token string">" "</span><span class="token punctuation">,</span> SecurityUtils<span class="token punctuation">.</span><span class="token function">getUserId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> metaObject<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>用注解标识哪些字段在什么情况下需要自动填充</p><pre class=" language-java"><code class="language-java">    <span class="token comment" spellcheck="true">/**     * 创建人的用户id     */</span>    <span class="token annotation punctuation">@TableField</span><span class="token punctuation">(</span>fill <span class="token operator">=</span> FieldFill<span class="token punctuation">.</span>INSERT<span class="token punctuation">)</span>    <span class="token keyword">private</span> Long createBy<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 创建时间     */</span>    <span class="token annotation punctuation">@TableField</span><span class="token punctuation">(</span>fill <span class="token operator">=</span> FieldFill<span class="token punctuation">.</span>INSERT<span class="token punctuation">)</span>    <span class="token keyword">private</span> Date createTime<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 更新人     */</span>    <span class="token annotation punctuation">@TableField</span><span class="token punctuation">(</span>fill <span class="token operator">=</span> FieldFill<span class="token punctuation">.</span>INSERT_UPDATE<span class="token punctuation">)</span>    <span class="token keyword">private</span> Long updateBy<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 更新时间     */</span>    <span class="token annotation punctuation">@TableField</span><span class="token punctuation">(</span>fill <span class="token operator">=</span> FieldFill<span class="token punctuation">.</span>INSERT_UPDATE<span class="token punctuation">)</span>    <span class="token keyword">private</span> Date updateTime<span class="token punctuation">;</span></code></pre><h3 id="3-12-友联评论列表"><a href="#3-12-友联评论列表" class="headerlink" title="3.12 友联评论列表"></a>3.12 友联评论列表</h3><h4 id="3-12-1-需求"><a href="#3-12-1-需求" class="headerlink" title="3.12.1 需求"></a>3.12.1 需求</h4><p>​友链页面也需要查询对应的评论列表。</p><h4 id="3-12-2-接口设计"><a href="#3-12-2-接口设计" class="headerlink" title="3.12.2 接口设计"></a>3.12.2 接口设计</h4><table><thead><tr><th>请求方式</th><th>请求地址</th><th>请求头</th></tr></thead><tbody><tr><td>GET</td><td>/comment/linkCommentList</td><td>不需要token请求头</td></tr></tbody></table><p>Query格式请求参数：</p><p>pageNum: 页码</p><p>pageSize: 每页条数</p><p>响应格式:</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>    <span class="token property">"code"</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span>    <span class="token property">"data"</span><span class="token operator">:</span> <span class="token punctuation">{</span>        <span class="token property">"rows"</span><span class="token operator">:</span> <span class="token punctuation">[</span>            <span class="token punctuation">{</span>                <span class="token property">"articleId"</span><span class="token operator">:</span> <span class="token string">"1"</span><span class="token punctuation">,</span>                <span class="token property">"children"</span><span class="token operator">:</span> <span class="token punctuation">[</span>                    <span class="token punctuation">{</span>                        <span class="token property">"articleId"</span><span class="token operator">:</span> <span class="token string">"1"</span><span class="token punctuation">,</span>                        <span class="token property">"content"</span><span class="token operator">:</span> <span class="token string">"回复友链评论3"</span><span class="token punctuation">,</span>                        <span class="token property">"createBy"</span><span class="token operator">:</span> <span class="token string">"1"</span><span class="token punctuation">,</span>                        <span class="token property">"createTime"</span><span class="token operator">:</span> <span class="token string">"2022-01-30 10:08:50"</span><span class="token punctuation">,</span>                        <span class="token property">"id"</span><span class="token operator">:</span> <span class="token string">"23"</span><span class="token punctuation">,</span>                        <span class="token property">"rootId"</span><span class="token operator">:</span> <span class="token string">"22"</span><span class="token punctuation">,</span>                        <span class="token property">"toCommentId"</span><span class="token operator">:</span> <span class="token string">"22"</span><span class="token punctuation">,</span>                        <span class="token property">"toCommentUserId"</span><span class="token operator">:</span> <span class="token string">"1"</span><span class="token punctuation">,</span>                        <span class="token property">"toCommentUserName"</span><span class="token operator">:</span> <span class="token string">"sg333"</span><span class="token punctuation">,</span>                        <span class="token property">"username"</span><span class="token operator">:</span> <span class="token string">"sg333"</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">]</span><span class="token punctuation">,</span>                <span class="token property">"content"</span><span class="token operator">:</span> <span class="token string">"友链评论2"</span><span class="token punctuation">,</span>                <span class="token property">"createBy"</span><span class="token operator">:</span> <span class="token string">"1"</span><span class="token punctuation">,</span>                <span class="token property">"createTime"</span><span class="token operator">:</span> <span class="token string">"2022-01-30 10:08:28"</span><span class="token punctuation">,</span>                <span class="token property">"id"</span><span class="token operator">:</span> <span class="token string">"22"</span><span class="token punctuation">,</span>                <span class="token property">"rootId"</span><span class="token operator">:</span> <span class="token string">"-1"</span><span class="token punctuation">,</span>                <span class="token property">"toCommentId"</span><span class="token operator">:</span> <span class="token string">"-1"</span><span class="token punctuation">,</span>                <span class="token property">"toCommentUserId"</span><span class="token operator">:</span> <span class="token string">"-1"</span><span class="token punctuation">,</span>                <span class="token property">"username"</span><span class="token operator">:</span> <span class="token string">"sg333"</span>            <span class="token punctuation">}</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token property">"total"</span><span class="token operator">:</span> <span class="token string">"1"</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"msg"</span><span class="token operator">:</span> <span class="token string">"操作成功"</span><span class="token punctuation">}</span></code></pre><h4 id="3-12-3-代码实现"><a href="#3-12-3-代码实现" class="headerlink" title="3.12.3 代码实现"></a>3.12.3 代码实现</h4><p>CommentController 修改了之前的文章评论列表接口，并且增加了新的友联评论接口</p><pre class=" language-java"><code class="language-java">    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/commentList"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> ResponseResult <span class="token function">commentList</span><span class="token punctuation">(</span>Long articleId<span class="token punctuation">,</span>Integer pageNum<span class="token punctuation">,</span>Integer pageSize<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> commentService<span class="token punctuation">.</span><span class="token function">commentList</span><span class="token punctuation">(</span>SystemConstants<span class="token punctuation">.</span>ARTICLE_COMMENT<span class="token punctuation">,</span>articleId<span class="token punctuation">,</span>pageNum<span class="token punctuation">,</span>pageSize<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>       <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/linkCommentList"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> ResponseResult <span class="token function">linkCommentList</span><span class="token punctuation">(</span>Integer pageNum<span class="token punctuation">,</span>Integer pageSize<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> commentService<span class="token punctuation">.</span><span class="token function">commentList</span><span class="token punctuation">(</span>SystemConstants<span class="token punctuation">.</span>LINK_COMMENT<span class="token punctuation">,</span>null<span class="token punctuation">,</span>pageNum<span class="token punctuation">,</span>pageSize<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><p>SystemConstants增加了两个常量</p><pre class=" language-java"><code class="language-java">    <span class="token comment" spellcheck="true">/**     * 评论类型为：文章评论     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> String ARTICLE_COMMENT <span class="token operator">=</span> <span class="token string">"0"</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 评论类型为：友联评论     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> String LINK_COMMENT <span class="token operator">=</span> <span class="token string">"1"</span><span class="token punctuation">;</span></code></pre><p>CommentService修改了commentList方法，增加了一个参数commentType</p><pre class=" language-java"><code class="language-java">ResponseResult <span class="token function">commentList</span><span class="token punctuation">(</span>String commentType<span class="token punctuation">,</span> Long articleId<span class="token punctuation">,</span> Integer pageNum<span class="token punctuation">,</span> Integer pageSize<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>CommentServiceImpl修改commentList方法的代码，必须commentType为0的时候才增加articleId的判断，并且增加了一个评论类型的添加。</p><pre class=" language-java"><code class="language-java">    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> ResponseResult <span class="token function">commentList</span><span class="token punctuation">(</span>String commentType<span class="token punctuation">,</span> Long articleId<span class="token punctuation">,</span> Integer pageNum<span class="token punctuation">,</span> Integer pageSize<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//查询对应文章的根评论</span>        LambdaQueryWrapper<span class="token operator">&lt;</span>Comment<span class="token operator">></span> queryWrapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LambdaQueryWrapper</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//对articleId进行判断</span>        queryWrapper<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span>SystemConstants<span class="token punctuation">.</span>ARTICLE_COMMENT<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>commentType<span class="token punctuation">)</span><span class="token punctuation">,</span>Comment<span class="token operator">:</span><span class="token operator">:</span>getArticleId<span class="token punctuation">,</span>articleId<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//根评论 rootId为-1</span>        queryWrapper<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span>Comment<span class="token operator">:</span><span class="token operator">:</span>getRootId<span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//评论类型</span>        queryWrapper<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span>Comment<span class="token operator">:</span><span class="token operator">:</span>getType<span class="token punctuation">,</span>commentType<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//分页查询</span>        Page<span class="token operator">&lt;</span>Comment<span class="token operator">></span> page <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Page</span><span class="token punctuation">(</span>pageNum<span class="token punctuation">,</span>pageSize<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">page</span><span class="token punctuation">(</span>page<span class="token punctuation">,</span>queryWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>        List<span class="token operator">&lt;</span>CommentVo<span class="token operator">></span> commentVoList <span class="token operator">=</span> <span class="token function">toCommentVoList</span><span class="token punctuation">(</span>page<span class="token punctuation">.</span><span class="token function">getRecords</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//查询所有根评论对应的子评论集合，并且赋值给对应的属性</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span>CommentVo commentVo <span class="token operator">:</span> commentVoList<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//查询对应的子评论</span>            List<span class="token operator">&lt;</span>CommentVo<span class="token operator">></span> children <span class="token operator">=</span> <span class="token function">getChildren</span><span class="token punctuation">(</span>commentVo<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//赋值</span>            commentVo<span class="token punctuation">.</span><span class="token function">setChildren</span><span class="token punctuation">(</span>children<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> ResponseResult<span class="token punctuation">.</span><span class="token function">okResult</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">PageVo</span><span class="token punctuation">(</span>commentVoList<span class="token punctuation">,</span>page<span class="token punctuation">.</span><span class="token function">getTotal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><h3 id="3-13-个人信息查询接口"><a href="#3-13-个人信息查询接口" class="headerlink" title="3.13 个人信息查询接口"></a>3.13 个人信息查询接口</h3><h4 id="3-13-1-需求"><a href="#3-13-1-需求" class="headerlink" title="3.13.1 需求"></a>3.13.1 需求</h4><p>​进入个人中心的时候需要能够查看当前用户信息</p><h4 id="3-13-2-接口设计"><a href="#3-13-2-接口设计" class="headerlink" title="3.13.2 接口设计"></a>3.13.2 接口设计</h4><table><thead><tr><th>请求方式</th><th>请求地址</th><th>请求头</th></tr></thead><tbody><tr><td>GET</td><td>/user/userInfo</td><td>需要token请求头</td></tr></tbody></table><p>不需要参数</p><p>响应格式:</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>    <span class="token property">"code"</span><span class="token operator">:</span><span class="token number">200</span><span class="token punctuation">,</span>    <span class="token property">"data"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"avatar"</span><span class="token operator">:</span><span class="token string">"https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fi0.hdslb.com%2Fbfs%2Farticle%2F3bf9c263bc0f2ac5c3a7feb9e218d07475573ec8.gi"</span><span class="token punctuation">,</span>        <span class="token property">"email"</span><span class="token operator">:</span><span class="token string">"23412332@qq.com"</span><span class="token punctuation">,</span>        <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"1"</span><span class="token punctuation">,</span>        <span class="token property">"nickName"</span><span class="token operator">:</span><span class="token string">"sg333"</span><span class="token punctuation">,</span>        <span class="token property">"sex"</span><span class="token operator">:</span><span class="token string">"1"</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"msg"</span><span class="token operator">:</span><span class="token string">"操作成功"</span><span class="token punctuation">}</span></code></pre><h4 id="3-13-3-代码实现"><a href="#3-13-3-代码实现" class="headerlink" title="3.13.3 代码实现"></a>3.13.3 代码实现</h4><p>UserController</p><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@RestController</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/user"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserController</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> UserService userService<span class="token punctuation">;</span>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/userInfo"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> ResponseResult <span class="token function">userInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> userService<span class="token punctuation">.</span><span class="token function">userInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>UserService增加方法定义</p><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UserService</span> <span class="token keyword">extends</span> <span class="token class-name">IService</span><span class="token operator">&lt;</span>User<span class="token operator">></span> <span class="token punctuation">{</span>    ResponseResult <span class="token function">userInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>UserServiceImpl实现userInfo方法</p><pre class=" language-java"><code class="language-java">    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> ResponseResult <span class="token function">userInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//获取当前用户id</span>        Long userId <span class="token operator">=</span> SecurityUtils<span class="token punctuation">.</span><span class="token function">getUserId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//根据用户id查询用户信息</span>        User user <span class="token operator">=</span> <span class="token function">getById</span><span class="token punctuation">(</span>userId<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//封装成UserInfoVo</span>        UserInfoVo vo <span class="token operator">=</span> BeanCopyUtils<span class="token punctuation">.</span><span class="token function">copyBean</span><span class="token punctuation">(</span>user<span class="token punctuation">,</span>UserInfoVo<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> ResponseResult<span class="token punctuation">.</span><span class="token function">okResult</span><span class="token punctuation">(</span>vo<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><p>SecurityConfig配置该接口必须认证后才能访问</p><pre class=" language-java"><code class="language-java">   <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">configure</span><span class="token punctuation">(</span>HttpSecurity http<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>        http                <span class="token comment" spellcheck="true">//关闭csrf</span>                <span class="token punctuation">.</span><span class="token function">csrf</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">disable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true">//不通过Session获取SecurityContext</span>                <span class="token punctuation">.</span><span class="token function">sessionManagement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sessionCreationPolicy</span><span class="token punctuation">(</span>SessionCreationPolicy<span class="token punctuation">.</span>STATELESS<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">and</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">authorizeRequests</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true">// 对于登录接口 允许匿名访问</span>                <span class="token punctuation">.</span><span class="token function">antMatchers</span><span class="token punctuation">(</span><span class="token string">"/login"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">anonymous</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true">//注销接口需要认证才能访问</span>                <span class="token punctuation">.</span><span class="token function">antMatchers</span><span class="token punctuation">(</span><span class="token string">"/logout"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">authenticated</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true">//个人信息接口必须登录后才能访问</span>                <span class="token punctuation">.</span><span class="token function">antMatchers</span><span class="token punctuation">(</span><span class="token string">"/user/userInfo"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">authenticated</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true">// 除上面外的所有请求全部不需要认证即可访问</span>                <span class="token punctuation">.</span><span class="token function">anyRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">permitAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//配置异常处理器</span>        http<span class="token punctuation">.</span><span class="token function">exceptionHandling</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">authenticationEntryPoint</span><span class="token punctuation">(</span>authenticationEntryPoint<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">accessDeniedHandler</span><span class="token punctuation">(</span>accessDeniedHandler<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//关闭默认的注销功能</span>        http<span class="token punctuation">.</span><span class="token function">logout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">disable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//把jwtAuthenticationTokenFilter添加到SpringSecurity的过滤器链中</span>        http<span class="token punctuation">.</span><span class="token function">addFilterBefore</span><span class="token punctuation">(</span>jwtAuthenticationTokenFilter<span class="token punctuation">,</span> UsernamePasswordAuthenticationFilter<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//允许跨域</span>        http<span class="token punctuation">.</span><span class="token function">cors</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><h3 id="3-14-头像上传接口"><a href="#3-14-头像上传接口" class="headerlink" title="3.14 头像上传接口"></a>3.14 头像上传接口</h3><h4 id="3-14-1-需求"><a href="#3-14-1-需求" class="headerlink" title="3.14.1 需求"></a>3.14.1 需求</h4><p>​在个人中心点击编辑的时候可以上传头像图片。上传完头像后，可以用于更新个人信息接口。</p><h4 id="3-14-2-OSS"><a href="#3-14-2-OSS" class="headerlink" title="3.14.2 OSS"></a>3.14.2 OSS</h4><h5 id="3-14-2-1-为什么要使用OSS"><a href="#3-14-2-1-为什么要使用OSS" class="headerlink" title="3.14.2.1 为什么要使用OSS"></a>3.14.2.1 为什么要使用OSS</h5><p>​因为如果把图片视频等文件上传到自己的应用的Web服务器，在读取图片的时候会占用比较多的资源。影响应用服务器的性能。</p><p>​所以我们一般使用OSS(Object Storage Service对象存储服务)存储图片或视频。</p><h5 id="3-14-2-2-七牛云基本使用测试"><a href="#3-14-2-2-七牛云基本使用测试" class="headerlink" title="3.14.2.2 七牛云基本使用测试"></a>3.14.2.2 七牛云基本使用测试</h5><p>![image-20220227224537701](E:/IdeaWorkSpace/SGBlog (20)/SGBlog/笔记/img/image-20220227224537701.png)</p><p>![image-20220227224443813](E:/IdeaWorkSpace/SGBlog (20)/SGBlog/笔记/img/image-20220227224443813.png)</p><p>秘钥</p><p>![image-20220228230512598](E:/IdeaWorkSpace/SGBlog (20)/SGBlog/笔记/img/image-20220228230512598.png)</p><p>![image-20220228230933808](E:/IdeaWorkSpace/SGBlog (20)/SGBlog/笔记/img/image-20220228230933808.png)</p><h5 id="3-14-2-3-七牛云测试代码编写"><a href="#3-14-2-3-七牛云测试代码编写" class="headerlink" title="3.14.2.3 七牛云测试代码编写"></a>3.14.2.3 七牛云测试代码编写</h5><p>①添加依赖</p><pre class=" language-xml"><code class="language-xml">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.qiniu<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>qiniu-java-sdk<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>[7.7.0, 7.7.99]<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span></code></pre><p>②复制修改案例代码</p><p>application.yml</p><pre class=" language-yml"><code class="language-yml">oss:  accessKey: xxxx  secretKey: xxxx  bucket: sg-blog</code></pre><p>OSSTest.java</p><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@SpringBootTest</span><span class="token annotation punctuation">@ConfigurationProperties</span><span class="token punctuation">(</span>prefix <span class="token operator">=</span> <span class="token string">"oss"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">OSSTest</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> String accessKey<span class="token punctuation">;</span>    <span class="token keyword">private</span> String secretKey<span class="token punctuation">;</span>    <span class="token keyword">private</span> String bucket<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setAccessKey</span><span class="token punctuation">(</span>String accessKey<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>accessKey <span class="token operator">=</span> accessKey<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setSecretKey</span><span class="token punctuation">(</span>String secretKey<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>secretKey <span class="token operator">=</span> secretKey<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setBucket</span><span class="token punctuation">(</span>String bucket<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>bucket <span class="token operator">=</span> bucket<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testOss</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//构造一个带指定 Region 对象的配置类</span>        Configuration cfg <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Configuration</span><span class="token punctuation">(</span>Region<span class="token punctuation">.</span><span class="token function">autoRegion</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//...其他参数参考类注释</span>        UploadManager uploadManager <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UploadManager</span><span class="token punctuation">(</span>cfg<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//...生成上传凭证，然后准备上传</span><span class="token comment" spellcheck="true">//        String accessKey = "your access key";</span><span class="token comment" spellcheck="true">//        String secretKey = "your secret key";</span><span class="token comment" spellcheck="true">//        String bucket = "sg-blog";</span>        <span class="token comment" spellcheck="true">//默认不指定key的情况下，以文件内容的hash值作为文件名</span>        String key <span class="token operator">=</span> <span class="token string">"2022/sg.png"</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span><span class="token comment" spellcheck="true">//            byte[] uploadBytes = "hello qiniu cloud".getBytes("utf-8");</span><span class="token comment" spellcheck="true">//            ByteArrayInputStream byteInputStream=new ByteArrayInputStream(uploadBytes);</span>            InputStream inputStream <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span><span class="token string">"C:\\Users\\root\\Desktop\\Snipaste_2022-02-28_22-48-37.png"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            Auth auth <span class="token operator">=</span> Auth<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>accessKey<span class="token punctuation">,</span> secretKey<span class="token punctuation">)</span><span class="token punctuation">;</span>            String upToken <span class="token operator">=</span> auth<span class="token punctuation">.</span><span class="token function">uploadToken</span><span class="token punctuation">(</span>bucket<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">try</span> <span class="token punctuation">{</span>                Response response <span class="token operator">=</span> uploadManager<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>inputStream<span class="token punctuation">,</span>key<span class="token punctuation">,</span>upToken<span class="token punctuation">,</span>null<span class="token punctuation">,</span> null<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">//解析上传成功的结果</span>                DefaultPutRet putRet <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Gson</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fromJson</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span><span class="token function">bodyString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> DefaultPutRet<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>putRet<span class="token punctuation">.</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>                System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>putRet<span class="token punctuation">.</span>hash<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">QiniuException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>                Response r <span class="token operator">=</span> ex<span class="token punctuation">.</span>response<span class="token punctuation">;</span>                System<span class="token punctuation">.</span>err<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">try</span> <span class="token punctuation">{</span>                    System<span class="token punctuation">.</span>err<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span><span class="token function">bodyString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">QiniuException</span> ex2<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token comment" spellcheck="true">//ignore</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//ignore</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h4 id="3-14-2-接口设计"><a href="#3-14-2-接口设计" class="headerlink" title="3.14.2 接口设计"></a>3.14.2 接口设计</h4><table><thead><tr><th>请求方式</th><th>请求地址</th><th>请求头</th></tr></thead><tbody><tr><td>POST</td><td>/upload</td><td>需要token</td></tr></tbody></table><p>参数：</p><p>​img,值为要上传的文件</p><p>请求头：</p><p>​Content-Type ：multipart/form-data;</p><p>响应格式:</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>    <span class="token property">"code"</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span>    <span class="token property">"data"</span><span class="token operator">:</span> <span class="token string">"文件访问链接"</span><span class="token punctuation">,</span>    <span class="token property">"msg"</span><span class="token operator">:</span> <span class="token string">"操作成功"</span><span class="token punctuation">}</span></code></pre><h4 id="3-14-3-代码实现"><a href="#3-14-3-代码实现" class="headerlink" title="3.14.3 代码实现"></a>3.14.3 代码实现</h4><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@RestController</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UploadController</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> UploadService uploadService<span class="token punctuation">;</span>    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"/upload"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> ResponseResult <span class="token function">uploadImg</span><span class="token punctuation">(</span>MultipartFile img<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> uploadService<span class="token punctuation">.</span><span class="token function">uploadImg</span><span class="token punctuation">(</span>img<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UploadService</span> <span class="token punctuation">{</span>    ResponseResult <span class="token function">uploadImg</span><span class="token punctuation">(</span>MultipartFile img<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Service</span><span class="token annotation punctuation">@Data</span><span class="token annotation punctuation">@ConfigurationProperties</span><span class="token punctuation">(</span>prefix <span class="token operator">=</span> <span class="token string">"oss"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">OssUploadService</span> <span class="token keyword">implements</span> <span class="token class-name">UploadService</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> ResponseResult <span class="token function">uploadImg</span><span class="token punctuation">(</span>MultipartFile img<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//判断文件类型</span>        <span class="token comment" spellcheck="true">//获取原始文件名</span>        String originalFilename <span class="token operator">=</span> img<span class="token punctuation">.</span><span class="token function">getOriginalFilename</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//对原始文件名进行判断</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>originalFilename<span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span><span class="token string">".png"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">SystemException</span><span class="token punctuation">(</span>AppHttpCodeEnum<span class="token punctuation">.</span>FILE_TYPE_ERROR<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">//如果判断通过上传文件到OSS</span>        String filePath <span class="token operator">=</span> PathUtils<span class="token punctuation">.</span><span class="token function">generateFilePath</span><span class="token punctuation">(</span>originalFilename<span class="token punctuation">)</span><span class="token punctuation">;</span>        String url <span class="token operator">=</span> <span class="token function">uploadOss</span><span class="token punctuation">(</span>img<span class="token punctuation">,</span>filePath<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//  2099/2/3/wqeqeqe.png</span>        <span class="token keyword">return</span> ResponseResult<span class="token punctuation">.</span><span class="token function">okResult</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">private</span> String accessKey<span class="token punctuation">;</span>    <span class="token keyword">private</span> String secretKey<span class="token punctuation">;</span>    <span class="token keyword">private</span> String bucket<span class="token punctuation">;</span>    <span class="token keyword">private</span> String <span class="token function">uploadOss</span><span class="token punctuation">(</span>MultipartFile imgFile<span class="token punctuation">,</span> String filePath<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//构造一个带指定 Region 对象的配置类</span>        Configuration cfg <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Configuration</span><span class="token punctuation">(</span>Region<span class="token punctuation">.</span><span class="token function">autoRegion</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//...其他参数参考类注释</span>        UploadManager uploadManager <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UploadManager</span><span class="token punctuation">(</span>cfg<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//默认不指定key的情况下，以文件内容的hash值作为文件名</span>        String key <span class="token operator">=</span> filePath<span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            InputStream inputStream <span class="token operator">=</span> imgFile<span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            Auth auth <span class="token operator">=</span> Auth<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>accessKey<span class="token punctuation">,</span> secretKey<span class="token punctuation">)</span><span class="token punctuation">;</span>            String upToken <span class="token operator">=</span> auth<span class="token punctuation">.</span><span class="token function">uploadToken</span><span class="token punctuation">(</span>bucket<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">try</span> <span class="token punctuation">{</span>                Response response <span class="token operator">=</span> uploadManager<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>inputStream<span class="token punctuation">,</span>key<span class="token punctuation">,</span>upToken<span class="token punctuation">,</span>null<span class="token punctuation">,</span> null<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">//解析上传成功的结果</span>                DefaultPutRet putRet <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Gson</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fromJson</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span><span class="token function">bodyString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> DefaultPutRet<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>putRet<span class="token punctuation">.</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>                System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>putRet<span class="token punctuation">.</span>hash<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> <span class="token string">"http://r7yxkqloa.bkt.clouddn.com/"</span><span class="token operator">+</span>key<span class="token punctuation">;</span>            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">QiniuException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>                Response r <span class="token operator">=</span> ex<span class="token punctuation">.</span>response<span class="token punctuation">;</span>                System<span class="token punctuation">.</span>err<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">try</span> <span class="token punctuation">{</span>                    System<span class="token punctuation">.</span>err<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span><span class="token function">bodyString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">QiniuException</span> ex2<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token comment" spellcheck="true">//ignore</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//ignore</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token string">"www"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>PathUtils</p><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">/** * @Author 三更  B站： https://space.bilibili.com/663528522 */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">PathUtils</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> String <span class="token function">generateFilePath</span><span class="token punctuation">(</span>String fileName<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//根据日期生成路径   2022/1/15/</span>        SimpleDateFormat sdf <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SimpleDateFormat</span><span class="token punctuation">(</span><span class="token string">"yyyy/MM/dd/"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        String datePath <span class="token operator">=</span> sdf<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//uuid作为文件名</span>        String uuid <span class="token operator">=</span> UUID<span class="token punctuation">.</span><span class="token function">randomUUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replaceAll</span><span class="token punctuation">(</span><span class="token string">"-"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//后缀和文件后缀一致</span>        <span class="token keyword">int</span> index <span class="token operator">=</span> fileName<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string">"."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// test.jpg -> .jpg</span>        String fileType <span class="token operator">=</span> fileName<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>datePath<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>uuid<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>fileType<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="3-15-更新个人信息接口"><a href="#3-15-更新个人信息接口" class="headerlink" title="3.15 更新个人信息接口"></a>3.15 更新个人信息接口</h3><h4 id="3-15-1-需求"><a href="#3-15-1-需求" class="headerlink" title="3.15.1 需求"></a>3.15.1 需求</h4><p>​在编辑完个人资料后点击保存会对个人资料进行更新。</p><h4 id="3-15-2-接口设计"><a href="#3-15-2-接口设计" class="headerlink" title="3.15.2 接口设计"></a>3.15.2 接口设计</h4><p>​ </p><table><thead><tr><th>请求方式</th><th>请求地址</th><th>请求头</th></tr></thead><tbody><tr><td>PUT</td><td>/user/userInfo</td><td>需要token请求头</td></tr></tbody></table><p>参数</p><p>请求体中json格式数据：</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>    <span class="token property">"avatar"</span><span class="token operator">:</span><span class="token string">"https://sg-blog-oss.oss-cn-beijing.aliyuncs.com/2022/01/31/948597e164614902ab1662ba8452e106.png"</span><span class="token punctuation">,</span>    <span class="token property">"email"</span><span class="token operator">:</span><span class="token string">"23412332@qq.com"</span><span class="token punctuation">,</span>    <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"1"</span><span class="token punctuation">,</span>    <span class="token property">"nickName"</span><span class="token operator">:</span><span class="token string">"sg333"</span><span class="token punctuation">,</span>    <span class="token property">"sex"</span><span class="token operator">:</span><span class="token string">"1"</span><span class="token punctuation">}</span></code></pre><p>响应格式:</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>    <span class="token property">"code"</span><span class="token operator">:</span><span class="token number">200</span><span class="token punctuation">,</span>    <span class="token property">"msg"</span><span class="token operator">:</span><span class="token string">"操作成功"</span><span class="token punctuation">}</span></code></pre><h4 id="3-15-3-代码实现"><a href="#3-15-3-代码实现" class="headerlink" title="3.15.3 代码实现"></a>3.15.3 代码实现</h4><p>UserController</p><pre class=" language-java"><code class="language-java">    <span class="token annotation punctuation">@PutMapping</span><span class="token punctuation">(</span><span class="token string">"/userInfo"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> ResponseResult <span class="token function">updateUserInfo</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> User user<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> userService<span class="token punctuation">.</span><span class="token function">updateUserInfo</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><p>UserService</p><pre class=" language-java"><code class="language-java">ResponseResult <span class="token function">updateUserInfo</span><span class="token punctuation">(</span>User user<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>UserServiceImpl</p><pre class=" language-java"><code class="language-java">    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> ResponseResult <span class="token function">updateUserInfo</span><span class="token punctuation">(</span>User user<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token function">updateById</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> ResponseResult<span class="token punctuation">.</span><span class="token function">okResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><h3 id="3-16-用户注册"><a href="#3-16-用户注册" class="headerlink" title="3.16 用户注册"></a>3.16 用户注册</h3><h4 id="3-16-1-需求"><a href="#3-16-1-需求" class="headerlink" title="3.16.1 需求"></a>3.16.1 需求</h4><p>​要求用户能够在注册界面完成用户的注册。要求用户名，昵称，邮箱不能和数据库中原有的数据重复。如果某项重复了注册失败并且要有对应的提示。并且要求用户名，密码，昵称，邮箱都不能为空。</p><p>​注意:密码必须密文存储到数据库中。</p><h4 id="3-16-2-接口设计"><a href="#3-16-2-接口设计" class="headerlink" title="3.16.2 接口设计"></a>3.16.2 接口设计</h4><p>​ </p><table><thead><tr><th>请求方式</th><th>请求地址</th><th>请求头</th></tr></thead><tbody><tr><td>POST</td><td>/user/register</td><td>不需要token请求头</td></tr></tbody></table><p>参数</p><p>请求体中json格式数据：</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>  <span class="token property">"email"</span><span class="token operator">:</span> <span class="token string">"string"</span><span class="token punctuation">,</span>  <span class="token property">"nickName"</span><span class="token operator">:</span> <span class="token string">"string"</span><span class="token punctuation">,</span>  <span class="token property">"password"</span><span class="token operator">:</span> <span class="token string">"string"</span><span class="token punctuation">,</span>  <span class="token property">"userName"</span><span class="token operator">:</span> <span class="token string">"string"</span><span class="token punctuation">}</span></code></pre><p>响应格式:</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>    <span class="token property">"code"</span><span class="token operator">:</span><span class="token number">200</span><span class="token punctuation">,</span>    <span class="token property">"msg"</span><span class="token operator">:</span><span class="token string">"操作成功"</span><span class="token punctuation">}</span></code></pre><h4 id="3-16-3-代码实现"><a href="#3-16-3-代码实现" class="headerlink" title="3.16.3 代码实现"></a>3.16.3 代码实现</h4><p>UserController</p><pre class=" language-java"><code class="language-java">    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"/register"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> ResponseResult <span class="token function">register</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> User user<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> userService<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><p>UserService</p><pre class=" language-java"><code class="language-java">ResponseResult <span class="token function">register</span><span class="token punctuation">(</span>User user<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>UserServiceImpl</p><pre class=" language-java"><code class="language-java">    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> PasswordEncoder passwordEncoder<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> ResponseResult <span class="token function">register</span><span class="token punctuation">(</span>User user<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//对数据进行非空判断</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>StringUtils<span class="token punctuation">.</span><span class="token function">hasText</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getUserName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">SystemException</span><span class="token punctuation">(</span>AppHttpCodeEnum<span class="token punctuation">.</span>USERNAME_NOT_NULL<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>StringUtils<span class="token punctuation">.</span><span class="token function">hasText</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getPassword</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">SystemException</span><span class="token punctuation">(</span>AppHttpCodeEnum<span class="token punctuation">.</span>PASSWORD_NOT_NULL<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>StringUtils<span class="token punctuation">.</span><span class="token function">hasText</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getEmail</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">SystemException</span><span class="token punctuation">(</span>AppHttpCodeEnum<span class="token punctuation">.</span>EMAIL_NOT_NULL<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>StringUtils<span class="token punctuation">.</span><span class="token function">hasText</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getNickName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">SystemException</span><span class="token punctuation">(</span>AppHttpCodeEnum<span class="token punctuation">.</span>NICKNAME_NOT_NULL<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">//对数据进行是否存在的判断</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">userNameExist</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getUserName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">SystemException</span><span class="token punctuation">(</span>AppHttpCodeEnum<span class="token punctuation">.</span>USERNAME_EXIST<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">nickNameExist</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getNickName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">SystemException</span><span class="token punctuation">(</span>AppHttpCodeEnum<span class="token punctuation">.</span>NICKNAME_EXIST<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">//...</span>        <span class="token comment" spellcheck="true">//对密码进行加密</span>        String encodePassword <span class="token operator">=</span> passwordEncoder<span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getPassword</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        user<span class="token punctuation">.</span><span class="token function">setPassword</span><span class="token punctuation">(</span>encodePassword<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//存入数据库</span>        <span class="token function">save</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> ResponseResult<span class="token punctuation">.</span><span class="token function">okResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">enum</span> AppHttpCodeEnum <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 成功</span>    <span class="token function">SUCCESS</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span><span class="token string">"操作成功"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true">// 登录</span>    <span class="token function">NEED_LOGIN</span><span class="token punctuation">(</span><span class="token number">401</span><span class="token punctuation">,</span><span class="token string">"需要登录后操作"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token function">NO_OPERATOR_AUTH</span><span class="token punctuation">(</span><span class="token number">403</span><span class="token punctuation">,</span><span class="token string">"无权限操作"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token function">SYSTEM_ERROR</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">,</span><span class="token string">"出现错误"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token function">USERNAME_EXIST</span><span class="token punctuation">(</span><span class="token number">501</span><span class="token punctuation">,</span><span class="token string">"用户名已存在"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>     <span class="token function">PHONENUMBER_EXIST</span><span class="token punctuation">(</span><span class="token number">502</span><span class="token punctuation">,</span><span class="token string">"手机号已存在"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">EMAIL_EXIST</span><span class="token punctuation">(</span><span class="token number">503</span><span class="token punctuation">,</span> <span class="token string">"邮箱已存在"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token function">REQUIRE_USERNAME</span><span class="token punctuation">(</span><span class="token number">504</span><span class="token punctuation">,</span> <span class="token string">"必需填写用户名"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token function">CONTENT_NOT_NULL</span><span class="token punctuation">(</span><span class="token number">506</span><span class="token punctuation">,</span> <span class="token string">"评论内容不能为空"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token function">FILE_TYPE_ERROR</span><span class="token punctuation">(</span><span class="token number">507</span><span class="token punctuation">,</span> <span class="token string">"文件类型错误，请上传png文件"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token function">USERNAME_NOT_NULL</span><span class="token punctuation">(</span><span class="token number">508</span><span class="token punctuation">,</span> <span class="token string">"用户名不能为空"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token function">NICKNAME_NOT_NULL</span><span class="token punctuation">(</span><span class="token number">509</span><span class="token punctuation">,</span> <span class="token string">"昵称不能为空"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token function">PASSWORD_NOT_NULL</span><span class="token punctuation">(</span><span class="token number">510</span><span class="token punctuation">,</span> <span class="token string">"密码不能为空"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token function">EMAIL_NOT_NULL</span><span class="token punctuation">(</span><span class="token number">511</span><span class="token punctuation">,</span> <span class="token string">"邮箱不能为空"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token function">NICKNAME_EXIST</span><span class="token punctuation">(</span><span class="token number">512</span><span class="token punctuation">,</span> <span class="token string">"昵称已存在"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token function">LOGIN_ERROR</span><span class="token punctuation">(</span><span class="token number">505</span><span class="token punctuation">,</span><span class="token string">"用户名或密码错误"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> code<span class="token punctuation">;</span>    String msg<span class="token punctuation">;</span>    <span class="token function">AppHttpCodeEnum</span><span class="token punctuation">(</span><span class="token keyword">int</span> code<span class="token punctuation">,</span> String errorMessage<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>code <span class="token operator">=</span> code<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>msg <span class="token operator">=</span> errorMessage<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> code<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> String <span class="token function">getMsg</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> msg<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="3-17-AOP实现日志记录"><a href="#3-17-AOP实现日志记录" class="headerlink" title="3.17 AOP实现日志记录"></a>3.17 AOP实现日志记录</h3><h4 id="3-17-1-需求"><a href="#3-17-1-需求" class="headerlink" title="3.17.1 需求"></a>3.17.1 需求</h4><p>​需要通过日志记录接口调用信息。便于后期调试排查。并且可能有很多接口都需要进行日志的记录。</p><p>​接口被调用时日志打印格式如下：</p><p>![image-20220313133714102](E:/IdeaWorkSpace/SGBlog (20)/SGBlog/笔记/img/image-20220313133714102.png)</p><h4 id="3-17-2-思路分析"><a href="#3-17-2-思路分析" class="headerlink" title="3.17.2 思路分析"></a>3.17.2 思路分析</h4><p>​相当于是对原有的功能进行增强。并且是批量的增强，这个时候就非常适合用AOP来进行实现。</p><p>​</p><h4 id="3-17-3-代码实现"><a href="#3-17-3-代码实现" class="headerlink" title="3.17.3 代码实现"></a>3.17.3 代码实现</h4><p>日志打印格式</p><pre class=" language-java"><code class="language-java">        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"=======Start======="</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 打印请求 URL</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"URL            : {}"</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 打印描述信息</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"BusinessName   : {}"</span><span class="token punctuation">,</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 打印 Http method</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"HTTP Method    : {}"</span><span class="token punctuation">,</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 打印调用 controller 的全路径以及执行方法</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"Class Method   : {}.{}"</span><span class="token punctuation">,</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 打印请求的 IP</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"IP             : {}"</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 打印请求入参</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"Request Args   : {}"</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 打印出参</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"Response       : {}"</span><span class="token punctuation">,</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 结束后换行</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"=======End======="</span> <span class="token operator">+</span> System<span class="token punctuation">.</span><span class="token function">lineSeparator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h3 id="3-18-更新浏览次数"><a href="#3-18-更新浏览次数" class="headerlink" title="3.18 更新浏览次数"></a>3.18 更新浏览次数</h3><h4 id="3-18-1-需求"><a href="#3-18-1-需求" class="headerlink" title="3.18.1 需求"></a>3.18.1 需求</h4><p>​在用户浏览博文时要实现对应博客浏览量的增加。</p><h4 id="3-18-2-思路分析"><a href="#3-18-2-思路分析" class="headerlink" title="3.18.2 思路分析"></a>3.18.2 思路分析</h4><p>​我们只需要在每次用户浏览博客时更新对应的浏览数即可。</p><p>​但是如果直接操作博客表的浏览量的话，在并发量大的情况下会出现什么问题呢？</p><p>​如何去优化呢？</p><p>​</p><p>①在应用启动时把博客的浏览量存储到redis中</p><p>②更新浏览量时去更新redis中的数据</p><p>③每隔10分钟把Redis中的浏览量更新到数据库中</p><p>④读取文章浏览量时从redis读取</p><h4 id="3-18-3-铺垫知识"><a href="#3-18-3-铺垫知识" class="headerlink" title="3.18.3 铺垫知识"></a>3.18.3 铺垫知识</h4><h5 id="3-18-3-1-CommandLineRunner实现项目启动时预处理"><a href="#3-18-3-1-CommandLineRunner实现项目启动时预处理" class="headerlink" title="3.18.3.1 CommandLineRunner实现项目启动时预处理"></a>3.18.3.1 CommandLineRunner实现项目启动时预处理</h5><p>​如果希望在SpringBoot应用启动时进行一些初始化操作可以选择使用CommandLineRunner来进行处理。</p><p>​我们只需要实现CommandLineRunner接口，并且把对应的bean注入容器。把相关初始化的代码重新到需要重新的方法中。</p><p>​这样就会在应用启动的时候执行对应的代码。</p><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Component</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestRunner</span> <span class="token keyword">implements</span> <span class="token class-name">CommandLineRunner</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span>String<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"程序初始化"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h5 id="3-18-3-2-定时任务"><a href="#3-18-3-2-定时任务" class="headerlink" title="3.18.3.2 定时任务"></a>3.18.3.2 定时任务</h5><p>​定时任务的实现方式有很多，比如XXL-Job等。但是其实核心功能和概念都是类似的，很多情况下只是调用的API不同而已。</p><p>​这里就先用SpringBoot为我们提供的定时任务的API来实现一个简单的定时任务，让大家先对定时任务里面的一些核心概念有个大致的了解。</p><p>实现步骤</p><p>① 使用@EnableScheduling注解开启定时任务功能</p><p>​我们可以在配置类上加上@EnableScheduling</p><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@SpringBootApplication</span><span class="token annotation punctuation">@MapperScan</span><span class="token punctuation">(</span><span class="token string">"com.sangeng.mapper"</span><span class="token punctuation">)</span><span class="token annotation punctuation">@EnableScheduling</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SanGengBlogApplication</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        SpringApplication<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span>SanGengBlogApplication<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>② 确定定时任务执行代码，并配置任务执行时间</p><p>​使用@Scheduled注解标识需要定时执行的代码。注解的cron属性相当于是任务的执行时间。目前可以使用 0/5 * * * * ? 进行测试，代表从0秒开始，每隔5秒执行一次。 </p><p>​注意：对应的bean要注入容器，否则不会生效。</p><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Component</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestJob</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Scheduled</span><span class="token punctuation">(</span>cron <span class="token operator">=</span> <span class="token string">"0/5 * * * * ?"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testJob</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//要执行的代码</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"定时任务执行了"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h6 id="3-18-3-2-1-cron-表达式语法"><a href="#3-18-3-2-1-cron-表达式语法" class="headerlink" title="3.18.3.2.1 cron 表达式语法"></a>3.18.3.2.1 cron 表达式语法</h6><p>​cron表达式是用来设置定时任务执行时间的表达式。</p><p>​很多情况下我们可以用 ： <a href="https://www.bejson.com/othertools/cron/">在线Cron表达式生成器</a> 来帮助我们理解cron表达式和书写cron表达式。</p><p>​但是我们还是有需要学习对应的Cron语法的，这样可以更有利于我们书写Cron表达式。</p><p>如上我们用到的 0/5 * * * * ? *，cron表达式由七部分组成，中间由空格分隔，这七部分从左往右依次是：</p><p>秒（0<del>59），分钟（0</del>59），小时（0~23），日期（1-月最后一天），月份（1-12），星期几（1-7,1表示星期日），年份（一般该项不设置，直接忽略掉，即可为空值）</p><p>通用特殊字符：, - * /  (可以在任意部分使用)</p><blockquote><ul><li></li></ul></blockquote><p>星号表示任意值，例如：</p><pre><code>* * * * * ?</code></pre><p>表示 “ 每年每月每天每时每分每秒 ” 。</p><blockquote><p>,   </p></blockquote><p>可以用来定义列表，例如 ：  </p><pre><code>1,2,3 * * * * ?</code></pre><p>表示 “ 每年每月每天每时每分的每个第1秒，第2秒，第3秒 ” 。</p><blockquote><ul><li></li></ul></blockquote><p>定义范围，例如：</p><pre><code>1-3 * * * * ?</code></pre><p>表示 “ 每年每月每天每时每分的第1秒至第3秒 ”。</p><blockquote><p>/</p></blockquote><p>每隔多少，例如</p><pre><code>5/10 * * * * ?</code></pre><p>表示 “ 每年每月每天每时每分，从第5秒开始，每10秒一次 ” 。即 “ / ” 的左侧是开始值，右侧是间隔。如果是从 “ 0 ” 开始的话，也可以简写成 “ /10 ” </p><p>日期部分还可允许特殊字符： ? L W</p><p>星期部分还可允许的特殊字符: ? L # </p><blockquote><p>?</p></blockquote><p>只可用在日期和星期部分。表示没有具体的值，使用?要注意冲突。日期和星期两个部分如果其中一个部分设置了值，则另一个必须设置为 “ ? ”。</p><p>例如：</p><pre><code>0\* * * 2 * ? 和0\* * * ? * 2</code></pre><p>同时使用?和同时不使用?都是不对的</p><p>例如下面写法就是错的</p><pre><code>* * * 2 * 2 和* * * ? * ?</code></pre><blockquote><p>W</p></blockquote><p>只能用在日期中，表示当月中最接近某天的工作日</p><pre><code>0 0 0 31W * ?</code></pre><p>表示最接近31号的工作日，如果31号是星期六，则表示30号，即星期五，如果31号是星期天，则表示29号，即星期五。如果31号是星期三，则表示31号本身，即星期三。</p><blockquote><p>L</p></blockquote><p>表示最后（Last）,只能用在日期和星期中</p><p>在日期中表示每月最后一天，在一月份中表示31号，在六月份中表示30号</p><p>也可以表示每月倒是第N天。例如： L-2表示每个月的倒数第2天</p><p> 0 0 0 LW * ?<br> LW可以连起来用，表示每月最后一个工作日，即每月最后一个星期五</p><p>在星期中表示7即星期六</p><pre><code>0 0 0 ? * L表示每个星期六0 0 0 ? * 6L若前面有其他值的话，则表示最后一个星期几，即每月的最后一个星期五</code></pre><blockquote><h1 id=""><a href="#" class="headerlink" title=""></a></h1></blockquote><p>只能用在星期中，表示第几个星期几</p><pre><code>0 0 0 ? * 6#3表示每个月的第三个星期五。</code></pre><h4 id="3-18-4-接口设计"><a href="#3-18-4-接口设计" class="headerlink" title="3.18.4 接口设计"></a>3.18.4 接口设计</h4><p>​ </p><table><thead><tr><th>请求方式</th><th>请求地址</th><th>请求头</th></tr></thead><tbody><tr><td>PUT</td><td>/article/updateViewCount/{id}</td><td>不需要token请求头</td></tr></tbody></table><p>参数</p><p>​请求路径中携带文章id</p><p>响应格式:</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>    <span class="token property">"code"</span><span class="token operator">:</span><span class="token number">200</span><span class="token punctuation">,</span>    <span class="token property">"msg"</span><span class="token operator">:</span><span class="token string">"操作成功"</span><span class="token punctuation">}</span></code></pre><h4 id="3-18-5-代码实现"><a href="#3-18-5-代码实现" class="headerlink" title="3.18.5 代码实现"></a>3.18.5 代码实现</h4><h5 id="①在应用启动时把博客的浏览量存储到redis中"><a href="#①在应用启动时把博客的浏览量存储到redis中" class="headerlink" title="①在应用启动时把博客的浏览量存储到redis中"></a>①在应用启动时把博客的浏览量存储到redis中</h5><p>​实现CommandLineRunner接口，在应用启动时初始化缓存。</p><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Component</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ViewCountRunner</span> <span class="token keyword">implements</span> <span class="token class-name">CommandLineRunner</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> ArticleMapper articleMapper<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> RedisCache redisCache<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span>String<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//查询博客信息  id  viewCount</span>        List<span class="token operator">&lt;</span>Article<span class="token operator">></span> articles <span class="token operator">=</span> articleMapper<span class="token punctuation">.</span><span class="token function">selectList</span><span class="token punctuation">(</span>null<span class="token punctuation">)</span><span class="token punctuation">;</span>        Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Integer<span class="token operator">></span> viewCountMap <span class="token operator">=</span> articles<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span>Collectors<span class="token punctuation">.</span><span class="token function">toMap</span><span class="token punctuation">(</span>article <span class="token operator">-</span><span class="token operator">></span> article<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> article <span class="token operator">-</span><span class="token operator">></span> <span class="token punctuation">{</span>                    <span class="token keyword">return</span> article<span class="token punctuation">.</span><span class="token function">getViewCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">intValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//</span>                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//存储到redis中</span>        redisCache<span class="token punctuation">.</span><span class="token function">setCacheMap</span><span class="token punctuation">(</span><span class="token string">"article:viewCount"</span><span class="token punctuation">,</span>viewCountMap<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h5 id="②更新浏览量时去更新redsi中的数据"><a href="#②更新浏览量时去更新redsi中的数据" class="headerlink" title="②更新浏览量时去更新redsi中的数据"></a>②更新浏览量时去更新redsi中的数据</h5><p>RedisCache增加方法   </p><pre class=" language-java"><code class="language-java">    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">incrementCacheMapValue</span><span class="token punctuation">(</span>String key<span class="token punctuation">,</span>String hKey<span class="token punctuation">,</span><span class="token keyword">long</span> v<span class="token punctuation">)</span><span class="token punctuation">{</span>        redisTemplate<span class="token punctuation">.</span><span class="token function">boundHashOps</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">increment</span><span class="token punctuation">(</span>hKey<span class="token punctuation">,</span> v<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><p>ArticleController中增加方法更新阅读数</p><pre class=" language-java"><code class="language-java">    <span class="token annotation punctuation">@PutMapping</span><span class="token punctuation">(</span><span class="token string">"/updateViewCount/{id}"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> ResponseResult <span class="token function">updateViewCount</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span> Long id<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> articleService<span class="token punctuation">.</span><span class="token function">updateViewCount</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><p>ArticleService中增加方法</p><pre class=" language-java"><code class="language-java">ResponseResult <span class="token function">updateViewCount</span><span class="token punctuation">(</span>Long id<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>ArticleServiceImpl中实现方法</p><pre class=" language-java"><code class="language-java">    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> ResponseResult <span class="token function">updateViewCount</span><span class="token punctuation">(</span>Long id<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//更新redis中对应 id的浏览量</span>        redisCache<span class="token punctuation">.</span><span class="token function">incrementCacheMapValue</span><span class="token punctuation">(</span><span class="token string">"article:viewCount"</span><span class="token punctuation">,</span>id<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> ResponseResult<span class="token punctuation">.</span><span class="token function">okResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><h5 id="③定时任务每隔10分钟把Redis中的浏览量更新到数据库中"><a href="#③定时任务每隔10分钟把Redis中的浏览量更新到数据库中" class="headerlink" title="③定时任务每隔10分钟把Redis中的浏览量更新到数据库中"></a>③定时任务每隔10分钟把Redis中的浏览量更新到数据库中</h5><p>Article中增加构造方法</p><pre class=" language-java"><code class="language-java">    <span class="token keyword">public</span> <span class="token function">Article</span><span class="token punctuation">(</span>Long id<span class="token punctuation">,</span> <span class="token keyword">long</span> viewCount<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>id <span class="token operator">=</span> id<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>viewCount <span class="token operator">=</span> viewCount<span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Component</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UpdateViewCountJob</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> RedisCache redisCache<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> ArticleService articleService<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Scheduled</span><span class="token punctuation">(</span>cron <span class="token operator">=</span> <span class="token string">"0/5 * * * * ?"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">updateViewCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//获取redis中的浏览量</span>        Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Integer<span class="token operator">></span> viewCountMap <span class="token operator">=</span> redisCache<span class="token punctuation">.</span><span class="token function">getCacheMap</span><span class="token punctuation">(</span><span class="token string">"article:viewCount"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        List<span class="token operator">&lt;</span>Article<span class="token operator">></span> articles <span class="token operator">=</span> viewCountMap<span class="token punctuation">.</span><span class="token function">entrySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>entry <span class="token operator">-</span><span class="token operator">></span> <span class="token keyword">new</span> <span class="token class-name">Article</span><span class="token punctuation">(</span>Long<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>entry<span class="token punctuation">.</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> entry<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">longValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span>Collectors<span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//更新到数据库中</span>        articleService<span class="token punctuation">.</span><span class="token function">updateBatchById</span><span class="token punctuation">(</span>articles<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h5 id="④读取文章浏览量时从redis读取"><a href="#④读取文章浏览量时从redis读取" class="headerlink" title="④读取文章浏览量时从redis读取"></a>④读取文章浏览量时从redis读取</h5><pre class=" language-java"><code class="language-java">    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> ResponseResult <span class="token function">getArticleDetail</span><span class="token punctuation">(</span>Long id<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//根据id查询文章</span>        Article article <span class="token operator">=</span> <span class="token function">getById</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//从redis中获取viewCount</span>        Integer viewCount <span class="token operator">=</span> redisCache<span class="token punctuation">.</span><span class="token function">getCacheMapValue</span><span class="token punctuation">(</span><span class="token string">"article:viewCount"</span><span class="token punctuation">,</span> id<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        article<span class="token punctuation">.</span><span class="token function">setViewCount</span><span class="token punctuation">(</span>viewCount<span class="token punctuation">.</span><span class="token function">longValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//转换成VO</span>        ArticleDetailVo articleDetailVo <span class="token operator">=</span> BeanCopyUtils<span class="token punctuation">.</span><span class="token function">copyBean</span><span class="token punctuation">(</span>article<span class="token punctuation">,</span> ArticleDetailVo<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//根据分类id查询分类名</span>        Long categoryId <span class="token operator">=</span> articleDetailVo<span class="token punctuation">.</span><span class="token function">getCategoryId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Category category <span class="token operator">=</span> categoryService<span class="token punctuation">.</span><span class="token function">getById</span><span class="token punctuation">(</span>categoryId<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>category<span class="token operator">!=</span>null<span class="token punctuation">)</span><span class="token punctuation">{</span>            articleDetailVo<span class="token punctuation">.</span><span class="token function">setCategoryName</span><span class="token punctuation">(</span>category<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">//封装响应返回</span>        <span class="token keyword">return</span> ResponseResult<span class="token punctuation">.</span><span class="token function">okResult</span><span class="token punctuation">(</span>articleDetailVo<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><h2 id="4-Swagger2"><a href="#4-Swagger2" class="headerlink" title="4. Swagger2"></a>4. Swagger2</h2><h3 id="4-1-简介"><a href="#4-1-简介" class="headerlink" title="4.1 简介"></a>4.1 简介</h3><p>​Swagger 是一套基于 OpenAPI 规范构建的开源工具，可以帮助我们设计、构建、记录以及使用 Rest API。</p><h3 id="4-2-为什么使用Swagger"><a href="#4-2-为什么使用Swagger" class="headerlink" title="4.2 为什么使用Swagger"></a>4.2 为什么使用Swagger</h3><p>​    当下很多公司都采取前后端分离的开发模式，前端和后端的工作由不同的工程师完成。在这种开发模式下，维持一份及时更新且完整的 Rest API 文档将会极大的提高我们的工作效率。传统意义上的文档都是后端开发人员手动编写的，相信大家也都知道这种方式很难保证文档的及时性，这种文档久而久之也就会失去其参考意义，反而还会加大我们的沟通成本。而 Swagger 给我们提供了一个全新的维护 API 文档的方式，下面我们就来了解一下它的优点：</p><p>1.代码变，文档变。只需要少量的注解，Swagger 就可以根据代码自动生成 API 文档，很好的保证了文档的时效性。<br>2.跨语言性，支持 40 多种语言。<br>3.Swagger UI 呈现出来的是一份可交互式的 API 文档，我们可以直接在文档页面尝试 API 的调用，省去了准备复杂的调用参数的过程。</p><h3 id="4-3-快速入门"><a href="#4-3-快速入门" class="headerlink" title="4.3 快速入门"></a>4.3 快速入门</h3><h4 id="4-3-1-引入依赖"><a href="#4-3-1-引入依赖" class="headerlink" title="4.3.1 引入依赖"></a>4.3.1 引入依赖</h4><pre class=" language-xml"><code class="language-xml">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>io.springfox<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>springfox-swagger2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>io.springfox<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>springfox-swagger-ui<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span></code></pre><h4 id="4-3-2-启用Swagger2"><a href="#4-3-2-启用Swagger2" class="headerlink" title="4.3.2 启用Swagger2"></a>4.3.2 启用Swagger2</h4><p>​在启动类上或者配置类加 @EnableSwagger2 注解</p><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@SpringBootApplication</span><span class="token annotation punctuation">@MapperScan</span><span class="token punctuation">(</span><span class="token string">"com.sangeng.mapper"</span><span class="token punctuation">)</span><span class="token annotation punctuation">@EnableScheduling</span><span class="token annotation punctuation">@EnableSwagger2</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SanGengBlogApplication</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        SpringApplication<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span>SanGengBlogApplication<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h4 id="4-3-3-测试"><a href="#4-3-3-测试" class="headerlink" title="4.3.3 测试"></a>4.3.3 测试</h4><p>​访问：<a href="http://localhost:7777/swagger-ui.html">http://localhost:7777/swagger-ui.html</a>  注意其中localhost和7777要调整成实际项目的域名和端口号。</p><h3 id="4-4-具体配置"><a href="#4-4-具体配置" class="headerlink" title="4.4 具体配置"></a>4.4 具体配置</h3><h4 id="4-4-1-Controller配置"><a href="#4-4-1-Controller配置" class="headerlink" title="4.4.1 Controller配置"></a>4.4.1 Controller配置</h4><h5 id="4-4-1-Api-注解"><a href="#4-4-1-Api-注解" class="headerlink" title="4.4.1 @Api 注解"></a>4.4.1 @Api 注解</h5><p>属性介绍：</p><p>tags  设置标签</p><p>description 设置描述信息</p><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@RestController</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/comment"</span><span class="token punctuation">)</span><span class="token annotation punctuation">@Api</span><span class="token punctuation">(</span>tags <span class="token operator">=</span> <span class="token string">"评论"</span><span class="token punctuation">,</span>description <span class="token operator">=</span> <span class="token string">"评论相关接口"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CommentController</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></code></pre><h4 id="4-4-2-接口配置"><a href="#4-4-2-接口配置" class="headerlink" title="4.4.2 接口配置"></a>4.4.2 接口配置</h4><h5 id="4-4-2-1-接口描述配置-ApiOperation"><a href="#4-4-2-1-接口描述配置-ApiOperation" class="headerlink" title="4.4.2.1 接口描述配置@ApiOperation"></a>4.4.2.1 接口描述配置@ApiOperation</h5><pre class=" language-java"><code class="language-java">    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/linkCommentList"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ApiOperation</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"友链评论列表"</span><span class="token punctuation">,</span>notes <span class="token operator">=</span> <span class="token string">"获取一页友链评论"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> ResponseResult <span class="token function">linkCommentList</span><span class="token punctuation">(</span>Integer pageNum<span class="token punctuation">,</span>Integer pageSize<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> commentService<span class="token punctuation">.</span><span class="token function">commentList</span><span class="token punctuation">(</span>SystemConstants<span class="token punctuation">.</span>LINK_COMMENT<span class="token punctuation">,</span>null<span class="token punctuation">,</span>pageNum<span class="token punctuation">,</span>pageSize<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><h5 id="4-4-2-2-接口参数描述"><a href="#4-4-2-2-接口参数描述" class="headerlink" title="4.4.2.2 接口参数描述"></a>4.4.2.2 接口参数描述</h5><p> @ApiImplicitParam 用于描述接口的参数，但是一个接口可能有多个参数，所以一般与 @ApiImplicitParams 组合使用。</p><pre class=" language-java"><code class="language-java">    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/linkCommentList"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ApiOperation</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"友链评论列表"</span><span class="token punctuation">,</span>notes <span class="token operator">=</span> <span class="token string">"获取一页友链评论"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ApiImplicitParams</span><span class="token punctuation">(</span><span class="token punctuation">{</span>           <span class="token annotation punctuation">@ApiImplicitParam</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"pageNum"</span><span class="token punctuation">,</span>value <span class="token operator">=</span> <span class="token string">"页号"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>           <span class="token annotation punctuation">@ApiImplicitParam</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"pageSize"</span><span class="token punctuation">,</span>value <span class="token operator">=</span> <span class="token string">"每页大小"</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span>    <span class="token punctuation">)</span>    <span class="token keyword">public</span> ResponseResult <span class="token function">linkCommentList</span><span class="token punctuation">(</span>Integer pageNum<span class="token punctuation">,</span>Integer pageSize<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> commentService<span class="token punctuation">.</span><span class="token function">commentList</span><span class="token punctuation">(</span>SystemConstants<span class="token punctuation">.</span>LINK_COMMENT<span class="token punctuation">,</span>null<span class="token punctuation">,</span>pageNum<span class="token punctuation">,</span>pageSize<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><h4 id="4-4-3-实体类配置"><a href="#4-4-3-实体类配置" class="headerlink" title="4.4.3 实体类配置"></a>4.4.3 实体类配置</h4><h5 id="4-4-3-1-实体的描述配置-ApiModel"><a href="#4-4-3-1-实体的描述配置-ApiModel" class="headerlink" title="4.4.3.1 实体的描述配置@ApiModel"></a>4.4.3.1 实体的描述配置@ApiModel</h5><p>@ApiModel用于描述实体类。</p><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Data</span><span class="token annotation punctuation">@AllArgsConstructor</span><span class="token annotation punctuation">@NoArgsConstructor</span><span class="token annotation punctuation">@ApiModel</span><span class="token punctuation">(</span>description <span class="token operator">=</span> <span class="token string">"添加评论dto"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AddCommentDto</span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//..</span><span class="token punctuation">}</span></code></pre><h5 id="4-4-3-2-实体的属性的描述配置-ApiModelProperty"><a href="#4-4-3-2-实体的属性的描述配置-ApiModelProperty" class="headerlink" title="4.4.3.2 实体的属性的描述配置@ApiModelProperty"></a>4.4.3.2 实体的属性的描述配置@ApiModelProperty</h5><p>@ApiModelProperty用于描述实体的属性</p><pre class=" language-java"><code class="language-java">    <span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span>notes <span class="token operator">=</span> <span class="token string">"评论类型（0代表文章评论，1代表友链评论）"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> String type<span class="token punctuation">;</span></code></pre><h4 id="4-4-4-文档信息配置"><a href="#4-4-4-文档信息配置" class="headerlink" title="4.4.4 文档信息配置"></a>4.4.4 文档信息配置</h4><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Configuration</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SwaggerConfig</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> Docket <span class="token function">customDocket</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Docket</span><span class="token punctuation">(</span>DocumentationType<span class="token punctuation">.</span>SWAGGER_2<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">apiInfo</span><span class="token punctuation">(</span><span class="token function">apiInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">apis</span><span class="token punctuation">(</span>RequestHandlerSelectors<span class="token punctuation">.</span><span class="token function">basePackage</span><span class="token punctuation">(</span><span class="token string">"com.sangeng.controller"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">private</span> ApiInfo <span class="token function">apiInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        Contact contact <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Contact</span><span class="token punctuation">(</span><span class="token string">"团队名"</span><span class="token punctuation">,</span> <span class="token string">"http://www.my.com"</span><span class="token punctuation">,</span> <span class="token string">"my@my.com"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ApiInfoBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">title</span><span class="token punctuation">(</span><span class="token string">"文档标题"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">description</span><span class="token punctuation">(</span><span class="token string">"文档描述"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">contact</span><span class="token punctuation">(</span>contact<span class="token punctuation">)</span>   <span class="token comment" spellcheck="true">// 联系方式</span>                <span class="token punctuation">.</span><span class="token function">version</span><span class="token punctuation">(</span><span class="token string">"1.1.0"</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">// 版本</span>                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h2 id="5-博客后台"><a href="#5-博客后台" class="headerlink" title="5. 博客后台"></a>5. 博客后台</h2><h3 id="5-0-准备工作"><a href="#5-0-准备工作" class="headerlink" title="5.0 准备工作"></a>5.0 准备工作</h3><p>前端工程启动</p><p>npm install</p><p>npm run dev</p><p>①创建启动类</p><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">/** * @Author 三更  B站： https://space.bilibili.com/663528522 */</span><span class="token annotation punctuation">@SpringBootApplication</span><span class="token annotation punctuation">@MapperScan</span><span class="token punctuation">(</span><span class="token string">"com.sangeng.mapper"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BlogAdminApplication</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        SpringApplication<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span>BlogAdminApplication<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>②创建application.yml配置文件</p><pre class=" language-yml"><code class="language-yml">server:  port: 8989spring:  datasource:    url: jdbc:mysql://localhost:3306/sg_blog?characterEncoding=utf-8&serverTimezone=UTC    username: root    password: root    driver-class-name: com.mysql.cj.jdbc.Driver  servlet:    multipart:      max-file-size: 2MB      max-request-size: 5MBmybatis-plus:  configuration:    # 日志    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl  global-config:    db-config:      logic-delete-field: delFlag      logic-delete-value: 1      logic-not-delete-value: 0      id-type: auto</code></pre><p>③ SQL语句</p><p>​SQL脚本：SGBlog\资源\SQL\sg_tag.sql</p><p>④ 创建实体类，Mapper，Service </p><p>​注意思考这些文件应该写在哪个模块下？</p><p>Tag</p><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@SuppressWarnings</span><span class="token punctuation">(</span><span class="token string">"serial"</span><span class="token punctuation">)</span><span class="token annotation punctuation">@Data</span><span class="token annotation punctuation">@AllArgsConstructor</span><span class="token annotation punctuation">@NoArgsConstructor</span><span class="token annotation punctuation">@TableName</span><span class="token punctuation">(</span><span class="token string">"sg_tag"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Tag</span>  <span class="token punctuation">{</span>    <span class="token annotation punctuation">@TableId</span>    <span class="token keyword">private</span> Long id<span class="token punctuation">;</span>        <span class="token keyword">private</span> Long createBy<span class="token punctuation">;</span>        <span class="token keyword">private</span> Date createTime<span class="token punctuation">;</span>        <span class="token keyword">private</span> Long updateBy<span class="token punctuation">;</span>        <span class="token keyword">private</span> Date updateTime<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//删除标志（0代表未删除，1代表已删除）</span>    <span class="token keyword">private</span> Integer delFlag<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//备注</span>    <span class="token keyword">private</span> String remark<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//标签名</span>    <span class="token keyword">private</span> String name<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>TagMapper</p><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">/** * 标签(Tag)表数据库访问层 * * @author makejava * @since 2022-07-19 22:33:35 */</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">TagMapper</span> <span class="token keyword">extends</span> <span class="token class-name">BaseMapper</span><span class="token operator">&lt;</span>Tag<span class="token operator">></span> <span class="token punctuation">{</span><span class="token punctuation">}</span></code></pre><p>TagService</p><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">/** * 标签(Tag)表服务接口 * * @author makejava * @since 2022-07-19 22:33:38 */</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">TagService</span> <span class="token keyword">extends</span> <span class="token class-name">IService</span><span class="token operator">&lt;</span>Tag<span class="token operator">></span> <span class="token punctuation">{</span><span class="token punctuation">}</span></code></pre><p>TagServiceImpl</p><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">/** * 标签(Tag)表服务实现类 * * @author makejava * @since 2022-07-19 22:33:38 */</span><span class="token annotation punctuation">@Service</span><span class="token punctuation">(</span><span class="token string">"tagService"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TagServiceImpl</span> <span class="token keyword">extends</span> <span class="token class-name">ServiceImpl</span><span class="token operator">&lt;</span>TagMapper<span class="token punctuation">,</span> Tag<span class="token operator">></span> <span class="token keyword">implements</span> <span class="token class-name">TagService</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></code></pre><p>⑤ 创建Controller测试接口</p><p>​注意思考这些文件应该写在哪个模块下？</p><p>TagController    /content/tag</p><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@RestController</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/content/tag"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TagController</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> TagService tagService<span class="token punctuation">;</span>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/list"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> ResponseResult <span class="token function">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> ResponseResult<span class="token punctuation">.</span><span class="token function">okResult</span><span class="token punctuation">(</span>tagService<span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>⑥添加security相关类</p><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Configuration</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SecurityConfig</span> <span class="token keyword">extends</span> <span class="token class-name">WebSecurityConfigurerAdapter</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> AuthenticationManager <span class="token function">authenticationManagerBean</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">authenticationManagerBean</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> JwtAuthenticationTokenFilter jwtAuthenticationTokenFilter<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Autowired</span>    AuthenticationEntryPoint authenticationEntryPoint<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Autowired</span>    AccessDeniedHandler accessDeniedHandler<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">configure</span><span class="token punctuation">(</span>HttpSecurity http<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>        http                <span class="token comment" spellcheck="true">//关闭csrf</span>                <span class="token punctuation">.</span><span class="token function">csrf</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">disable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true">//不通过Session获取SecurityContext</span>                <span class="token punctuation">.</span><span class="token function">sessionManagement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sessionCreationPolicy</span><span class="token punctuation">(</span>SessionCreationPolicy<span class="token punctuation">.</span>STATELESS<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">and</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">authorizeRequests</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true">// 对于登录接口 允许匿名访问</span><span class="token comment" spellcheck="true">//                .antMatchers("/login").anonymous()</span><span class="token comment" spellcheck="true">//                //注销接口需要认证才能访问</span><span class="token comment" spellcheck="true">//                .antMatchers("/logout").authenticated()</span><span class="token comment" spellcheck="true">//                .antMatchers("/user/userInfo").authenticated()</span><span class="token comment" spellcheck="true">//                .antMatchers("/upload").authenticated()</span>                <span class="token comment" spellcheck="true">// 除上面外的所有请求全部不需要认证即可访问</span>                <span class="token punctuation">.</span><span class="token function">anyRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">permitAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//配置异常处理器</span>        http<span class="token punctuation">.</span><span class="token function">exceptionHandling</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">authenticationEntryPoint</span><span class="token punctuation">(</span>authenticationEntryPoint<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">accessDeniedHandler</span><span class="token punctuation">(</span>accessDeniedHandler<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//关闭默认的注销功能</span>        http<span class="token punctuation">.</span><span class="token function">logout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">disable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//把jwtAuthenticationTokenFilter添加到SpringSecurity的过滤器链中</span>        http<span class="token punctuation">.</span><span class="token function">addFilterBefore</span><span class="token punctuation">(</span>jwtAuthenticationTokenFilter<span class="token punctuation">,</span> UsernamePasswordAuthenticationFilter<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//允许跨域</span>        http<span class="token punctuation">.</span><span class="token function">cors</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> PasswordEncoder <span class="token function">passwordEncoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">BCryptPasswordEncoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Component</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JwtAuthenticationTokenFilter</span> <span class="token keyword">extends</span> <span class="token class-name">OncePerRequestFilter</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> RedisCache redisCache<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doFilterInternal</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">,</span> FilterChain filterChain<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//获取请求头中的token</span>        String token <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getHeader</span><span class="token punctuation">(</span><span class="token string">"token"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>StringUtils<span class="token punctuation">.</span><span class="token function">hasText</span><span class="token punctuation">(</span>token<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//说明该接口不需要登录  直接放行</span>            filterChain<span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">//解析获取userid</span>        Claims claims <span class="token operator">=</span> null<span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            claims <span class="token operator">=</span> JwtUtil<span class="token punctuation">.</span><span class="token function">parseJWT</span><span class="token punctuation">(</span>token<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//token超时  token非法</span>            <span class="token comment" spellcheck="true">//响应告诉前端需要重新登录</span>            ResponseResult result <span class="token operator">=</span> ResponseResult<span class="token punctuation">.</span><span class="token function">errorResult</span><span class="token punctuation">(</span>AppHttpCodeEnum<span class="token punctuation">.</span>NEED_LOGIN<span class="token punctuation">)</span><span class="token punctuation">;</span>            WebUtils<span class="token punctuation">.</span><span class="token function">renderString</span><span class="token punctuation">(</span>response<span class="token punctuation">,</span> JSON<span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        String userId <span class="token operator">=</span> claims<span class="token punctuation">.</span><span class="token function">getSubject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//从redis中获取用户信息</span>        LoginUser loginUser <span class="token operator">=</span> redisCache<span class="token punctuation">.</span><span class="token function">getCacheObject</span><span class="token punctuation">(</span><span class="token string">"login:"</span> <span class="token operator">+</span> userId<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//如果获取不到</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>Objects<span class="token punctuation">.</span><span class="token function">isNull</span><span class="token punctuation">(</span>loginUser<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//说明登录过期  提示重新登录</span>            ResponseResult result <span class="token operator">=</span> ResponseResult<span class="token punctuation">.</span><span class="token function">errorResult</span><span class="token punctuation">(</span>AppHttpCodeEnum<span class="token punctuation">.</span>NEED_LOGIN<span class="token punctuation">)</span><span class="token punctuation">;</span>            WebUtils<span class="token punctuation">.</span><span class="token function">renderString</span><span class="token punctuation">(</span>response<span class="token punctuation">,</span> JSON<span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">//存入SecurityContextHolder</span>        UsernamePasswordAuthenticationToken authenticationToken <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UsernamePasswordAuthenticationToken</span><span class="token punctuation">(</span>loginUser<span class="token punctuation">,</span>null<span class="token punctuation">,</span>null<span class="token punctuation">)</span><span class="token punctuation">;</span>        SecurityContextHolder<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setAuthentication</span><span class="token punctuation">(</span>authenticationToken<span class="token punctuation">)</span><span class="token punctuation">;</span>        filterChain<span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="5-1-后台登录"><a href="#5-1-后台登录" class="headerlink" title="5.1 后台登录"></a>5.1 后台登录</h3><p>​后台的认证授权也使用SpringSecurity安全框架来实现。</p><h4 id="5-1-0-需求"><a href="#5-1-0-需求" class="headerlink" title="5.1.0 需求"></a>5.1.0 需求</h4><p>​需要实现登录功能</p><p>​后台所有功能都必须登录才能使用。</p><h4 id="5-1-1-接口设计"><a href="#5-1-1-接口设计" class="headerlink" title="5.1.1 接口设计"></a>5.1.1 接口设计</h4><table><thead><tr><th>请求方式</th><th>请求路径</th></tr></thead><tbody><tr><td>POST</td><td>/user/login</td></tr></tbody></table><p>请求体：</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>    <span class="token property">"userName"</span><span class="token operator">:</span><span class="token string">"sg"</span><span class="token punctuation">,</span>    <span class="token property">"password"</span><span class="token operator">:</span><span class="token string">"1234"</span><span class="token punctuation">}</span></code></pre><p>响应格式：</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>    <span class="token property">"code"</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span>    <span class="token property">"data"</span><span class="token operator">:</span> <span class="token punctuation">{</span>        <span class="token property">"token"</span><span class="token operator">:</span> <span class="token string">"eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI0ODBmOThmYmJkNmI0NjM0OWUyZjY2NTM0NGNjZWY2NSIsInN1YiI6IjEiLCJpc3MiOiJzZyIsImlhdCI6MTY0Mzg3NDMxNiwiZXhwIjoxNjQzOTYwNzE2fQ.ldLBUvNIxQCGemkCoMgT_0YsjsWndTg5tqfJb77pabk"</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"msg"</span><span class="token operator">:</span> <span class="token string">"操作成功"</span><span class="token punctuation">}</span></code></pre><h4 id="5-1-2-思路分析"><a href="#5-1-2-思路分析" class="headerlink" title="5.1.2 思路分析"></a>5.1.2 思路分析</h4><p>登录</p><p>​①自定义登录接口  </p><p>​调用ProviderManager的方法进行认证 如果认证通过生成jwt</p><p>​把用户信息存入redis中</p><p>​②自定义UserDetailsService </p><p>​在这个实现类中去查询数据库</p><p>​注意配置passwordEncoder为BCryptPasswordEncoder</p><p>校验：</p><p>​①定义Jwt认证过滤器</p><p>​获取token</p><p>​解析token获取其中的userid</p><p>​从redis中获取用户信息</p><p>​存入SecurityContextHolder</p><h4 id="5-1-3-准备工作"><a href="#5-1-3-准备工作" class="headerlink" title="5.1.3 准备工作"></a>5.1.3 准备工作</h4><p>①添加依赖</p><p>前面已经添加过相关依赖，不需要做什么处理</p><pre class=" language-xml"><code class="language-xml">        <span class="token comment" spellcheck="true">&lt;!--redis依赖--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-data-redis<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!--fastjson依赖--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.alibaba<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>fastjson<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.2.33<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!--jwt依赖--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>io.jsonwebtoken<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>jjwt<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>0.9.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span></code></pre><h4 id="5-1-4-登录接口代码实现"><a href="#5-1-4-登录接口代码实现" class="headerlink" title="5.1.4 登录接口代码实现"></a>5.1.4 登录接口代码实现</h4><h5 id="LoginController"><a href="#LoginController" class="headerlink" title="LoginController"></a>LoginController</h5><p>复制一份BlogLoginController ，命名为LoginController，其中注入 LoginService </p><p>请求地址修改为/user/login即可</p><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@RestController</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LoginController</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> LoginService loginService<span class="token punctuation">;</span>    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"/user/login"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> ResponseResult <span class="token function">login</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> User user<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>StringUtils<span class="token punctuation">.</span><span class="token function">hasText</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getUserName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//提示 必须要传用户名</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">SystemException</span><span class="token punctuation">(</span>AppHttpCodeEnum<span class="token punctuation">.</span>REQUIRE_USERNAME<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> loginService<span class="token punctuation">.</span><span class="token function">login</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h5 id="LoginService"><a href="#LoginService" class="headerlink" title="LoginService"></a>LoginService</h5><p>复制一份BlogLoginService命名为LoginService即可</p><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">LoginService</span> <span class="token punctuation">{</span>    ResponseResult <span class="token function">login</span><span class="token punctuation">(</span>User user<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h5 id="SecurityConfig-2"><a href="#SecurityConfig-2" class="headerlink" title="SecurityConfig"></a>SecurityConfig</h5><p>之前已经复制过了</p><h5 id="SystemLoginServiceImpl"><a href="#SystemLoginServiceImpl" class="headerlink" title="SystemLoginServiceImpl"></a>SystemLoginServiceImpl</h5><p>复制一份，LoginServiceImpl，命名为SystemLoginServiceImpl  实现 LoginService</p><p>login方法中存redis的key的前缀修改为login</p><p>返回的数据中只要返回token</p><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Service</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SystemLoginServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">LoginService</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> AuthenticationManager authenticationManager<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> RedisCache redisCache<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> ResponseResult <span class="token function">login</span><span class="token punctuation">(</span>User user<span class="token punctuation">)</span> <span class="token punctuation">{</span>        UsernamePasswordAuthenticationToken authenticationToken <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UsernamePasswordAuthenticationToken</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getUserName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>user<span class="token punctuation">.</span><span class="token function">getPassword</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Authentication authenticate <span class="token operator">=</span> authenticationManager<span class="token punctuation">.</span><span class="token function">authenticate</span><span class="token punctuation">(</span>authenticationToken<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//判断是否认证通过</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>Objects<span class="token punctuation">.</span><span class="token function">isNull</span><span class="token punctuation">(</span>authenticate<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">"用户名或密码错误"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">//获取userid 生成token</span>        LoginUser loginUser <span class="token operator">=</span> <span class="token punctuation">(</span>LoginUser<span class="token punctuation">)</span> authenticate<span class="token punctuation">.</span><span class="token function">getPrincipal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        String userId <span class="token operator">=</span> loginUser<span class="token punctuation">.</span><span class="token function">getUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        String jwt <span class="token operator">=</span> JwtUtil<span class="token punctuation">.</span><span class="token function">createJWT</span><span class="token punctuation">(</span>userId<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//把用户信息存入redis</span>        redisCache<span class="token punctuation">.</span><span class="token function">setCacheObject</span><span class="token punctuation">(</span><span class="token string">"login:"</span><span class="token operator">+</span>userId<span class="token punctuation">,</span>loginUser<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//把token封装 返回</span>        Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span>String<span class="token operator">></span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"token"</span><span class="token punctuation">,</span>jwt<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> ResponseResult<span class="token punctuation">.</span><span class="token function">okResult</span><span class="token punctuation">(</span>map<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h5 id="UserDetailServiceImpl-1"><a href="#UserDetailServiceImpl-1" class="headerlink" title="UserDetailServiceImpl"></a>UserDetailServiceImpl</h5><p>复用原来的即可</p><h5 id="LoginUser-1"><a href="#LoginUser-1" class="headerlink" title="LoginUser"></a>LoginUser</h5><p>复用原来的即可</p><h3 id="5-2-后台权限控制及动态路由"><a href="#5-2-后台权限控制及动态路由" class="headerlink" title="5.2 后台权限控制及动态路由"></a>5.2 后台权限控制及动态路由</h3><h4 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h4><p>​后台系统需要能实现不同的用户权限可以看到不同的功能。</p><p>​    用户只能使用他的权限所允许使用的功能。</p><h4 id="功能设计"><a href="#功能设计" class="headerlink" title="功能设计"></a>功能设计</h4><p>​之前在我的SpringSecurity的课程中就介绍过RBAC权限模型。没有学习过的可以去看下 <a href="https://www.bilibili.com/video/BV1mm4y1X7Hc?p=28">RBAC权限模型</a>  。这里我们就是在RBAC权限模型的基础上去实现这个功能。</p><p>​</p><h4 id="表分析"><a href="#表分析" class="headerlink" title="表分析"></a>表分析</h4><p>​通过需求去分析需要有哪些字段。</p><p>​建表SQL及初始化数据见：SGBlog\资源\SQL\sg_menu.sql</p><h4 id="接口设计"><a href="#接口设计" class="headerlink" title="接口设计"></a>接口设计</h4><h5 id="getInfo接口"><a href="#getInfo接口" class="headerlink" title="getInfo接口"></a>getInfo接口</h5><p>是</p><table><thead><tr><th>请求方式</th><th>请求地址</th><th>请求头</th></tr></thead><tbody><tr><td>GET</td><td>/getInfo</td><td>需要token请求头</td></tr></tbody></table><p>请求参数：</p><p>无</p><p>响应格式:</p><p>如果用户id为1代表管理员，roles 中只需要有admin，permissions中需要有所有菜单类型为C或者F的，状态为正常的，未被删除的权限</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>    <span class="token property">"code"</span><span class="token operator">:</span><span class="token number">200</span><span class="token punctuation">,</span>    <span class="token property">"data"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"permissions"</span><span class="token operator">:</span><span class="token punctuation">[</span>            <span class="token string">"system:user:list"</span><span class="token punctuation">,</span>            <span class="token string">"system:role:list"</span><span class="token punctuation">,</span>            <span class="token string">"system:menu:list"</span><span class="token punctuation">,</span>            <span class="token string">"system:user:query"</span><span class="token punctuation">,</span>            <span class="token string">"system:user:add"</span>            //此次省略<span class="token number">1000</span>字        <span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token property">"roles"</span><span class="token operator">:</span><span class="token punctuation">[</span>            <span class="token string">"admin"</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token property">"user"</span><span class="token operator">:</span><span class="token punctuation">{</span>            <span class="token property">"avatar"</span><span class="token operator">:</span><span class="token string">"http://r7yxkqloa.bkt.clouddn.com/2022/03/05/75fd15587811443a9a9a771f24da458d.png"</span><span class="token punctuation">,</span>            <span class="token property">"email"</span><span class="token operator">:</span><span class="token string">"23412332@qq.com"</span><span class="token punctuation">,</span>            <span class="token property">"id"</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span>            <span class="token property">"nickName"</span><span class="token operator">:</span><span class="token string">"sg3334"</span><span class="token punctuation">,</span>            <span class="token property">"sex"</span><span class="token operator">:</span><span class="token string">"1"</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"msg"</span><span class="token operator">:</span><span class="token string">"操作成功"</span><span class="token punctuation">}</span></code></pre><h5 id="getRouters接口"><a href="#getRouters接口" class="headerlink" title="getRouters接口"></a>getRouters接口</h5><table><thead><tr><th>请求方式</th><th>请求地址</th><th>请求头</th></tr></thead><tbody><tr><td>GET</td><td>/getRouters</td><td>需要token请求头</td></tr></tbody></table><p>请求参数：</p><p>无</p><p>响应格式:</p><p>​前端为了实现动态路由的效果，需要后端有接口能返回用户所能访问的菜单数据。</p><p>​注意：<strong>返回的菜单数据需要体现父子菜单的层级关系</strong></p><p>​如果用户id为1代表管理员，menus中需要有所有菜单类型为C或者M的，状态为正常的，未被删除的权限</p><p>​数据格式如下：</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>    <span class="token property">"code"</span><span class="token operator">:</span><span class="token number">200</span><span class="token punctuation">,</span>    <span class="token property">"data"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"menus"</span><span class="token operator">:</span><span class="token punctuation">[</span>            <span class="token punctuation">{</span>                <span class="token property">"children"</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                <span class="token property">"component"</span><span class="token operator">:</span><span class="token string">"content/article/write/index"</span><span class="token punctuation">,</span>                <span class="token property">"createTime"</span><span class="token operator">:</span><span class="token string">"2022-01-08 11:39:58"</span><span class="token punctuation">,</span>                <span class="token property">"icon"</span><span class="token operator">:</span><span class="token string">"build"</span><span class="token punctuation">,</span>                <span class="token property">"id"</span><span class="token operator">:</span><span class="token number">2023</span><span class="token punctuation">,</span>                <span class="token property">"menuName"</span><span class="token operator">:</span><span class="token string">"写博文"</span><span class="token punctuation">,</span>                <span class="token property">"menuType"</span><span class="token operator">:</span><span class="token string">"C"</span><span class="token punctuation">,</span>                <span class="token property">"orderNum"</span><span class="token operator">:</span><span class="token string">"0"</span><span class="token punctuation">,</span>                <span class="token property">"parentId"</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span>                <span class="token property">"path"</span><span class="token operator">:</span><span class="token string">"write"</span><span class="token punctuation">,</span>                <span class="token property">"perms"</span><span class="token operator">:</span><span class="token string">"content:article:writer"</span><span class="token punctuation">,</span>                <span class="token property">"status"</span><span class="token operator">:</span><span class="token string">"0"</span><span class="token punctuation">,</span>                <span class="token property">"visible"</span><span class="token operator">:</span><span class="token string">"0"</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token punctuation">{</span>                <span class="token property">"children"</span><span class="token operator">:</span><span class="token punctuation">[</span>                    <span class="token punctuation">{</span>                        <span class="token property">"children"</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                        <span class="token property">"component"</span><span class="token operator">:</span><span class="token string">"system/user/index"</span><span class="token punctuation">,</span>                        <span class="token property">"createTime"</span><span class="token operator">:</span><span class="token string">"2021-11-12 18:46:19"</span><span class="token punctuation">,</span>                        <span class="token property">"icon"</span><span class="token operator">:</span><span class="token string">"user"</span><span class="token punctuation">,</span>                        <span class="token property">"id"</span><span class="token operator">:</span><span class="token number">100</span><span class="token punctuation">,</span>                        <span class="token property">"menuName"</span><span class="token operator">:</span><span class="token string">"用户管理"</span><span class="token punctuation">,</span>                        <span class="token property">"menuType"</span><span class="token operator">:</span><span class="token string">"C"</span><span class="token punctuation">,</span>                        <span class="token property">"orderNum"</span><span class="token operator">:</span><span class="token string">"1"</span><span class="token punctuation">,</span>                        <span class="token property">"parentId"</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span>                        <span class="token property">"path"</span><span class="token operator">:</span><span class="token string">"user"</span><span class="token punctuation">,</span>                        <span class="token property">"perms"</span><span class="token operator">:</span><span class="token string">"system:user:list"</span><span class="token punctuation">,</span>                        <span class="token property">"status"</span><span class="token operator">:</span><span class="token string">"0"</span><span class="token punctuation">,</span>                        <span class="token property">"visible"</span><span class="token operator">:</span><span class="token string">"0"</span>                    <span class="token punctuation">}</span><span class="token punctuation">,</span>                    <span class="token punctuation">{</span>                        <span class="token property">"children"</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                        <span class="token property">"component"</span><span class="token operator">:</span><span class="token string">"system/role/index"</span><span class="token punctuation">,</span>                        <span class="token property">"createTime"</span><span class="token operator">:</span><span class="token string">"2021-11-12 18:46:19"</span><span class="token punctuation">,</span>                        <span class="token property">"icon"</span><span class="token operator">:</span><span class="token string">"peoples"</span><span class="token punctuation">,</span>                        <span class="token property">"id"</span><span class="token operator">:</span><span class="token number">101</span><span class="token punctuation">,</span>                        <span class="token property">"menuName"</span><span class="token operator">:</span><span class="token string">"角色管理"</span><span class="token punctuation">,</span>                        <span class="token property">"menuType"</span><span class="token operator">:</span><span class="token string">"C"</span><span class="token punctuation">,</span>                        <span class="token property">"orderNum"</span><span class="token operator">:</span><span class="token string">"2"</span><span class="token punctuation">,</span>                        <span class="token property">"parentId"</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span>                        <span class="token property">"path"</span><span class="token operator">:</span><span class="token string">"role"</span><span class="token punctuation">,</span>                        <span class="token property">"perms"</span><span class="token operator">:</span><span class="token string">"system:role:list"</span><span class="token punctuation">,</span>                        <span class="token property">"status"</span><span class="token operator">:</span><span class="token string">"0"</span><span class="token punctuation">,</span>                        <span class="token property">"visible"</span><span class="token operator">:</span><span class="token string">"0"</span>                    <span class="token punctuation">}</span><span class="token punctuation">,</span>                    <span class="token punctuation">{</span>                        <span class="token property">"children"</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                        <span class="token property">"component"</span><span class="token operator">:</span><span class="token string">"system/menu/index"</span><span class="token punctuation">,</span>                        <span class="token property">"createTime"</span><span class="token operator">:</span><span class="token string">"2021-11-12 18:46:19"</span><span class="token punctuation">,</span>                        <span class="token property">"icon"</span><span class="token operator">:</span><span class="token string">"tree-table"</span><span class="token punctuation">,</span>                        <span class="token property">"id"</span><span class="token operator">:</span><span class="token number">102</span><span class="token punctuation">,</span>                        <span class="token property">"menuName"</span><span class="token operator">:</span><span class="token string">"菜单管理"</span><span class="token punctuation">,</span>                        <span class="token property">"menuType"</span><span class="token operator">:</span><span class="token string">"C"</span><span class="token punctuation">,</span>                        <span class="token property">"orderNum"</span><span class="token operator">:</span><span class="token string">"3"</span><span class="token punctuation">,</span>                        <span class="token property">"parentId"</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span>                        <span class="token property">"path"</span><span class="token operator">:</span><span class="token string">"menu"</span><span class="token punctuation">,</span>                        <span class="token property">"perms"</span><span class="token operator">:</span><span class="token string">"system:menu:list"</span><span class="token punctuation">,</span>                        <span class="token property">"status"</span><span class="token operator">:</span><span class="token string">"0"</span><span class="token punctuation">,</span>                        <span class="token property">"visible"</span><span class="token operator">:</span><span class="token string">"0"</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">]</span><span class="token punctuation">,</span>                <span class="token property">"createTime"</span><span class="token operator">:</span><span class="token string">"2021-11-12 18:46:19"</span><span class="token punctuation">,</span>                <span class="token property">"icon"</span><span class="token operator">:</span><span class="token string">"system"</span><span class="token punctuation">,</span>                <span class="token property">"id"</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span>                <span class="token property">"menuName"</span><span class="token operator">:</span><span class="token string">"系统管理"</span><span class="token punctuation">,</span>                <span class="token property">"menuType"</span><span class="token operator">:</span><span class="token string">"M"</span><span class="token punctuation">,</span>                <span class="token property">"orderNum"</span><span class="token operator">:</span><span class="token string">"1"</span><span class="token punctuation">,</span>                <span class="token property">"parentId"</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span>                <span class="token property">"path"</span><span class="token operator">:</span><span class="token string">"system"</span><span class="token punctuation">,</span>                <span class="token property">"perms"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">,</span>                <span class="token property">"status"</span><span class="token operator">:</span><span class="token string">"0"</span><span class="token punctuation">,</span>                <span class="token property">"visible"</span><span class="token operator">:</span><span class="token string">"0"</span>            <span class="token punctuation">}</span>        <span class="token punctuation">]</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"msg"</span><span class="token operator">:</span><span class="token string">"操作成功"</span><span class="token punctuation">}</span></code></pre><h4 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h4><h5 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h5><p>​生成menu和role表对于的类</p><h5 id="getInfo接口-1"><a href="#getInfo接口-1" class="headerlink" title="getInfo接口"></a>getInfo接口</h5><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Data</span><span class="token annotation punctuation">@Accessors</span><span class="token punctuation">(</span>chain <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token annotation punctuation">@AllArgsConstructor</span><span class="token annotation punctuation">@NoArgsConstructor</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AdminUserInfoVo</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> List<span class="token operator">&lt;</span>String<span class="token operator">></span> permissions<span class="token punctuation">;</span>    <span class="token keyword">private</span> List<span class="token operator">&lt;</span>String<span class="token operator">></span> roles<span class="token punctuation">;</span>    <span class="token keyword">private</span> UserInfoVo user<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@RestController</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LoginController</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> LoginService loginService<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> MenuService menuService<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> RoleService roleService<span class="token punctuation">;</span>    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"/user/login"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> ResponseResult <span class="token function">login</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> User user<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>StringUtils<span class="token punctuation">.</span><span class="token function">hasText</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getUserName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//提示 必须要传用户名</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">SystemException</span><span class="token punctuation">(</span>AppHttpCodeEnum<span class="token punctuation">.</span>REQUIRE_USERNAME<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> loginService<span class="token punctuation">.</span><span class="token function">login</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"getInfo"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> ResponseResult<span class="token operator">&lt;</span>AdminUserInfoVo<span class="token operator">></span> <span class="token function">getInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//获取当前登录的用户</span>        LoginUser loginUser <span class="token operator">=</span> SecurityUtils<span class="token punctuation">.</span><span class="token function">getLoginUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//根据用户id查询权限信息</span>        List<span class="token operator">&lt;</span>String<span class="token operator">></span> perms <span class="token operator">=</span> menuService<span class="token punctuation">.</span><span class="token function">selectPermsByUserId</span><span class="token punctuation">(</span>loginUser<span class="token punctuation">.</span><span class="token function">getUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//根据用户id查询角色信息</span>        List<span class="token operator">&lt;</span>String<span class="token operator">></span> roleKeyList <span class="token operator">=</span> roleService<span class="token punctuation">.</span><span class="token function">selectRoleKeyByUserId</span><span class="token punctuation">(</span>loginUser<span class="token punctuation">.</span><span class="token function">getUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//获取用户信息</span>        User user <span class="token operator">=</span> loginUser<span class="token punctuation">.</span><span class="token function">getUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        UserInfoVo userInfoVo <span class="token operator">=</span> BeanCopyUtils<span class="token punctuation">.</span><span class="token function">copyBean</span><span class="token punctuation">(</span>user<span class="token punctuation">,</span> UserInfoVo<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//封装数据返回</span>        AdminUserInfoVo adminUserInfoVo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AdminUserInfoVo</span><span class="token punctuation">(</span>perms<span class="token punctuation">,</span>roleKeyList<span class="token punctuation">,</span>userInfoVo<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> ResponseResult<span class="token punctuation">.</span><span class="token function">okResult</span><span class="token punctuation">(</span>adminUserInfoVo<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>RoleServiceImpl  selectRoleKeyByUserId方法</p><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Service</span><span class="token punctuation">(</span><span class="token string">"menuService"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MenuServiceImpl</span> <span class="token keyword">extends</span> <span class="token class-name">ServiceImpl</span><span class="token operator">&lt;</span>MenuMapper<span class="token punctuation">,</span> Menu<span class="token operator">></span> <span class="token keyword">implements</span> <span class="token class-name">MenuService</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> List<span class="token operator">&lt;</span>String<span class="token operator">></span> <span class="token function">selectPermsByUserId</span><span class="token punctuation">(</span>Long id<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//如果是管理员，返回所有的权限</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>id <span class="token operator">==</span> 1L<span class="token punctuation">)</span><span class="token punctuation">{</span>            LambdaQueryWrapper<span class="token operator">&lt;</span>Menu<span class="token operator">></span> wrapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LambdaQueryWrapper</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            wrapper<span class="token punctuation">.</span><span class="token function">in</span><span class="token punctuation">(</span>Menu<span class="token operator">:</span><span class="token operator">:</span>getMenuType<span class="token punctuation">,</span>SystemConstants<span class="token punctuation">.</span>MENU<span class="token punctuation">,</span>SystemConstants<span class="token punctuation">.</span>BUTTON<span class="token punctuation">)</span><span class="token punctuation">;</span>            wrapper<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span>Menu<span class="token operator">:</span><span class="token operator">:</span>getStatus<span class="token punctuation">,</span>SystemConstants<span class="token punctuation">.</span>STATUS_NORMAL<span class="token punctuation">)</span><span class="token punctuation">;</span>            List<span class="token operator">&lt;</span>Menu<span class="token operator">></span> menus <span class="token operator">=</span> <span class="token function">list</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>            List<span class="token operator">&lt;</span>String<span class="token operator">></span> perms <span class="token operator">=</span> menus<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>Menu<span class="token operator">:</span><span class="token operator">:</span>getPerms<span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span>Collectors<span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> perms<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">//否则返回所具有的权限</span>        <span class="token keyword">return</span> <span class="token function">getBaseMapper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">selectPermsByUserId</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>MenuMapper </p><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">/** * 菜单权限表(Menu)表数据库访问层 * * @author makejava * @since 2022-08-09 22:32:07 */</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">MenuMapper</span> <span class="token keyword">extends</span> <span class="token class-name">BaseMapper</span><span class="token operator">&lt;</span>Menu<span class="token operator">></span> <span class="token punctuation">{</span>    List<span class="token operator">&lt;</span>String<span class="token operator">></span> <span class="token function">selectPermsByUserId</span><span class="token punctuation">(</span>Long userId<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><pre class=" language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8" ?></span><span class="token doctype">&lt;!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" ></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapper</span> <span class="token attr-name">namespace</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.sangeng.mapper.MenuMapper<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>selectPermsByUserId<span class="token punctuation">"</span></span> <span class="token attr-name">resultType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>java.lang.String<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        SELECT            DISTINCT m.perms        FROM            `sys_user_role` ur            LEFT JOIN `sys_role_menu` rm ON ur.`role_id` = rm.`role_id`            LEFT JOIN `sys_menu` m ON m.`id` = rm.`menu_id`        WHERE            ur.`user_id` = #{userId} AND            m.`menu_type` IN ('C','F') AND            m.`status` = 0 AND            m.`del_flag` = 0    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mapper</span><span class="token punctuation">></span></span></code></pre><p>MenuServiceImpl  selectPermsByUserId方法</p><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Service</span><span class="token punctuation">(</span><span class="token string">"roleService"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RoleServiceImpl</span> <span class="token keyword">extends</span> <span class="token class-name">ServiceImpl</span><span class="token operator">&lt;</span>RoleMapper<span class="token punctuation">,</span> Role<span class="token operator">></span> <span class="token keyword">implements</span> <span class="token class-name">RoleService</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> List<span class="token operator">&lt;</span>String<span class="token operator">></span> <span class="token function">selectRoleKeyByUserId</span><span class="token punctuation">(</span>Long id<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//判断是否是管理员 如果是返回集合中只需要有admin</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>id <span class="token operator">==</span> 1L<span class="token punctuation">)</span><span class="token punctuation">{</span>            List<span class="token operator">&lt;</span>String<span class="token operator">></span> roleKeys <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            roleKeys<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"admin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> roleKeys<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">//否则查询用户所具有的角色信息</span>        <span class="token keyword">return</span> <span class="token function">getBaseMapper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">selectRoleKeyByUserId</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">RoleMapper</span> <span class="token keyword">extends</span> <span class="token class-name">BaseMapper</span><span class="token operator">&lt;</span>Role<span class="token operator">></span> <span class="token punctuation">{</span>    List<span class="token operator">&lt;</span>String<span class="token operator">></span> <span class="token function">selectRoleKeyByUserId</span><span class="token punctuation">(</span>Long userId<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><pre class=" language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8" ?></span><span class="token doctype">&lt;!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" ></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapper</span> <span class="token attr-name">namespace</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.sangeng.mapper.RoleMapper<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>selectRoleKeyByUserId<span class="token punctuation">"</span></span> <span class="token attr-name">resultType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>java.lang.String<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        SELECT            r.`role_key`        FROM            `sys_user_role` ur            LEFT JOIN `sys_role` r ON ur.`role_id` = r.`id`        WHERE            ur.`user_id` = #{userId} AND            r.`status` = 0 AND            r.`del_flag` = 0    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mapper</span><span class="token punctuation">></span></span></code></pre><h5 id="getRouters接口-1"><a href="#getRouters接口-1" class="headerlink" title="getRouters接口"></a>getRouters接口</h5><p>RoutersVo</p><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Data</span><span class="token annotation punctuation">@AllArgsConstructor</span><span class="token annotation punctuation">@NoArgsConstructor</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RoutersVo</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> List<span class="token operator">&lt;</span>Menu<span class="token operator">></span> menus<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>LoginController</p><pre class=" language-java"><code class="language-java">    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"getRouters"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> ResponseResult<span class="token operator">&lt;</span>RoutersVo<span class="token operator">></span> <span class="token function">getRouters</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        Long userId <span class="token operator">=</span> SecurityUtils<span class="token punctuation">.</span><span class="token function">getUserId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//查询menu 结果是tree的形式</span>        List<span class="token operator">&lt;</span>Menu<span class="token operator">></span> menus <span class="token operator">=</span> menuService<span class="token punctuation">.</span><span class="token function">selectRouterMenuTreeByUserId</span><span class="token punctuation">(</span>userId<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//封装数据返回</span>        <span class="token keyword">return</span> ResponseResult<span class="token punctuation">.</span><span class="token function">okResult</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">RoutersVo</span><span class="token punctuation">(</span>menus<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><p>MenuService</p><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">MenuService</span> <span class="token keyword">extends</span> <span class="token class-name">IService</span><span class="token operator">&lt;</span>Menu<span class="token operator">></span> <span class="token punctuation">{</span>    List<span class="token operator">&lt;</span>String<span class="token operator">></span> <span class="token function">selectPermsByUserId</span><span class="token punctuation">(</span>Long id<span class="token punctuation">)</span><span class="token punctuation">;</span>    List<span class="token operator">&lt;</span>Menu<span class="token operator">></span> <span class="token function">selectRouterMenuTreeByUserId</span><span class="token punctuation">(</span>Long userId<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>MenuServiceImpl</p><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> List<span class="token operator">&lt;</span>Menu<span class="token operator">></span> <span class="token function">selectRouterMenuTreeByUserId</span><span class="token punctuation">(</span>Long userId<span class="token punctuation">)</span> <span class="token punctuation">{</span>        MenuMapper menuMapper <span class="token operator">=</span> <span class="token function">getBaseMapper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        List<span class="token operator">&lt;</span>Menu<span class="token operator">></span> menus <span class="token operator">=</span> null<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//判断是否是管理员</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>SecurityUtils<span class="token punctuation">.</span><span class="token function">isAdmin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//如果是 获取所有符合要求的Menu</span>            menus <span class="token operator">=</span> menuMapper<span class="token punctuation">.</span><span class="token function">selectAllRouterMenu</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//否则  获取当前用户所具有的Menu</span>            menus <span class="token operator">=</span> menuMapper<span class="token punctuation">.</span><span class="token function">selectRouterMenuTreeByUserId</span><span class="token punctuation">(</span>userId<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">//构建tree</span>        <span class="token comment" spellcheck="true">//先找出第一层的菜单  然后去找他们的子菜单设置到children属性中</span>        List<span class="token operator">&lt;</span>Menu<span class="token operator">></span> menuTree <span class="token operator">=</span> <span class="token function">builderMenuTree</span><span class="token punctuation">(</span>menus<span class="token punctuation">,</span>0L<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> menuTree<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">private</span> List<span class="token operator">&lt;</span>Menu<span class="token operator">></span> <span class="token function">builderMenuTree</span><span class="token punctuation">(</span>List<span class="token operator">&lt;</span>Menu<span class="token operator">></span> menus<span class="token punctuation">,</span> Long parentId<span class="token punctuation">)</span> <span class="token punctuation">{</span>        List<span class="token operator">&lt;</span>Menu<span class="token operator">></span> menuTree <span class="token operator">=</span> menus<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>menu <span class="token operator">-</span><span class="token operator">></span> menu<span class="token punctuation">.</span><span class="token function">getParentId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>parentId<span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>menu <span class="token operator">-</span><span class="token operator">></span> menu<span class="token punctuation">.</span><span class="token function">setChildren</span><span class="token punctuation">(</span><span class="token function">getChildren</span><span class="token punctuation">(</span>menu<span class="token punctuation">,</span> menus<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span>Collectors<span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> menuTree<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 获取存入参数的 子Menu集合     * @param menu     * @param menus     * @return     */</span>    <span class="token keyword">private</span> List<span class="token operator">&lt;</span>Menu<span class="token operator">></span> <span class="token function">getChildren</span><span class="token punctuation">(</span>Menu menu<span class="token punctuation">,</span> List<span class="token operator">&lt;</span>Menu<span class="token operator">></span> menus<span class="token punctuation">)</span> <span class="token punctuation">{</span>        List<span class="token operator">&lt;</span>Menu<span class="token operator">></span> childrenList <span class="token operator">=</span> menus<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>m <span class="token operator">-</span><span class="token operator">></span> m<span class="token punctuation">.</span><span class="token function">getParentId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>menu<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>m<span class="token operator">-</span><span class="token operator">></span>m<span class="token punctuation">.</span><span class="token function">setChildren</span><span class="token punctuation">(</span><span class="token function">getChildren</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span>menus<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span>Collectors<span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> childrenList<span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><p>MenuMapper.java</p><pre class=" language-java"><code class="language-java">    List<span class="token operator">&lt;</span>Menu<span class="token operator">></span> <span class="token function">selectAllRouterMenu</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    List<span class="token operator">&lt;</span>Menu<span class="token operator">></span> <span class="token function">selectRouterMenuTreeByUserId</span><span class="token punctuation">(</span>Long userId<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>MenuMapper.xml</p><pre class=" language-xml"><code class="language-xml"> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>selectAllRouterMenu<span class="token punctuation">"</span></span> <span class="token attr-name">resultType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.sangeng.domain.entity.Menu<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        SELECT          DISTINCT m.id, m.parent_id, m.menu_name, m.path, m.component, m.visible, m.status, IFNULL(m.perms,'') AS perms, m.is_frame,  m.menu_type, m.icon, m.order_num, m.create_time        FROM            `sys_menu` m        WHERE            m.`menu_type` IN ('C','M') AND            m.`status` = 0 AND            m.`del_flag` = 0        ORDER BY            m.parent_id,m.order_num    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>selectRouterMenuTreeByUserId<span class="token punctuation">"</span></span> <span class="token attr-name">resultType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.sangeng.domain.entity.Menu<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        SELECT          DISTINCT m.id, m.parent_id, m.menu_name, m.path, m.component, m.visible, m.status, IFNULL(m.perms,'') AS perms, m.is_frame,  m.menu_type, m.icon, m.order_num, m.create_time        FROM            `sys_user_role` ur            LEFT JOIN `sys_role_menu` rm ON ur.`role_id` = rm.`role_id`            LEFT JOIN `sys_menu` m ON m.`id` = rm.`menu_id`        WHERE            ur.`user_id` = #{userId} AND            m.`menu_type` IN ('C','M') AND            m.`status` = 0 AND            m.`del_flag` = 0        ORDER BY            m.parent_id,m.order_num    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span></code></pre><p>查询的列：</p><p>SELECT DISTINCT m.id, m.parent_id, m.menu_name, m.path, m.component, m.visible, m.status, IFNULL(m.perms,’’) AS perms, m.is_frame,  m.menu_type, m.icon, m.order_num, m.create_time</p><p>注意需要按照parent_id和order_num排序</p><h3 id="5-3-退出登录接口"><a href="#5-3-退出登录接口" class="headerlink" title="5.3 退出登录接口"></a>5.3 退出登录接口</h3><h4 id="5-3-1-接口设计"><a href="#5-3-1-接口设计" class="headerlink" title="5.3.1 接口设计"></a>5.3.1 接口设计</h4><table><thead><tr><th>请求方式</th><th>请求地址</th><th>请求头</th></tr></thead><tbody><tr><td>POST</td><td>/user/logout</td><td>需要token请求头</td></tr></tbody></table><p>响应格式:</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>    <span class="token property">"code"</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span>    <span class="token property">"msg"</span><span class="token operator">:</span> <span class="token string">"操作成功"</span><span class="token punctuation">}</span></code></pre><h4 id="5-3-2-代码实现"><a href="#5-3-2-代码实现" class="headerlink" title="5.3.2 代码实现"></a>5.3.2 代码实现</h4><p>要实现的操作：</p><p>​删除redis中的用户信息</p><p>LoginController</p><pre class=" language-java"><code class="language-java">    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"/user/logout"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> ResponseResult <span class="token function">logout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> loginServcie<span class="token punctuation">.</span><span class="token function">logout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><p>LoginService</p><pre class=" language-java"><code class="language-java">ResponseResult <span class="token function">logout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>SystemLoginServiceImpl</p><pre class=" language-java"><code class="language-java">    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> ResponseResult <span class="token function">logout</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//获取当前登录的用户id</span>        Long userId <span class="token operator">=</span> SecurityUtils<span class="token punctuation">.</span><span class="token function">getUserId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//删除redis中对应的值</span>        redisCache<span class="token punctuation">.</span><span class="token function">deleteObject</span><span class="token punctuation">(</span><span class="token string">"login:"</span><span class="token operator">+</span>userId<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> ResponseResult<span class="token punctuation">.</span><span class="token function">okResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><p>SecurityConfig</p><p>要关闭默认的退出登录功能。并且要配置我们的退出登录接口需要认证才能访问</p><pre class=" language-java"><code class="language-java">    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">configure</span><span class="token punctuation">(</span>HttpSecurity http<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>        http                <span class="token comment" spellcheck="true">//关闭csrf</span>                <span class="token punctuation">.</span><span class="token function">csrf</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">disable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true">//不通过Session获取SecurityContext</span>                <span class="token punctuation">.</span><span class="token function">sessionManagement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sessionCreationPolicy</span><span class="token punctuation">(</span>SessionCreationPolicy<span class="token punctuation">.</span>STATELESS<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">and</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">authorizeRequests</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true">// 对于登录接口 允许匿名访问</span>                <span class="token punctuation">.</span><span class="token function">antMatchers</span><span class="token punctuation">(</span><span class="token string">"/user/login"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">anonymous</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//                //注销接口需要认证才能访问</span><span class="token comment" spellcheck="true">//                .antMatchers("/logout").authenticated()</span><span class="token comment" spellcheck="true">//                .antMatchers("/user/userInfo").authenticated()</span><span class="token comment" spellcheck="true">//                .antMatchers("/upload").authenticated()</span>                <span class="token comment" spellcheck="true">// 除上面外的所有请求全部不需要认证即可访问</span>                <span class="token punctuation">.</span><span class="token function">anyRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">authenticated</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//配置异常处理器</span>        http<span class="token punctuation">.</span><span class="token function">exceptionHandling</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">authenticationEntryPoint</span><span class="token punctuation">(</span>authenticationEntryPoint<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">accessDeniedHandler</span><span class="token punctuation">(</span>accessDeniedHandler<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//关闭默认的注销功能</span>        http<span class="token punctuation">.</span><span class="token function">logout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">disable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//把jwtAuthenticationTokenFilter添加到SpringSecurity的过滤器链中</span>        http<span class="token punctuation">.</span><span class="token function">addFilterBefore</span><span class="token punctuation">(</span>jwtAuthenticationTokenFilter<span class="token punctuation">,</span> UsernamePasswordAuthenticationFilter<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//允许跨域</span>        http<span class="token punctuation">.</span><span class="token function">cors</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><h3 id="5-4-查询标签列表"><a href="#5-4-查询标签列表" class="headerlink" title="5.4 查询标签列表"></a>5.4 查询标签列表</h3><h4 id="5-4-0-需求"><a href="#5-4-0-需求" class="headerlink" title="5.4.0 需求"></a>5.4.0 需求</h4><p>​为了方便后期对文章进行管理，需要提供标签的功能，一个文章可以有多个标签。</p><p>​    在后台需要分页查询标签功能，要求能根据标签名进行分页查询。 <strong>后期可能会增加备注查询等需求</strong>。</p><p>​注意：不能把删除了的标签查询出来。</p><h4 id="5-4-1-标签表分析"><a href="#5-4-1-标签表分析" class="headerlink" title="5.4.1 标签表分析"></a>5.4.1 标签表分析</h4><p>​通过需求去分析需要有哪些字段。</p><h4 id="5-4-2-接口设计"><a href="#5-4-2-接口设计" class="headerlink" title="5.4.2 接口设计"></a>5.4.2 接口设计</h4><table><thead><tr><th>请求方式</th><th>请求路径</th></tr></thead><tbody><tr><td>Get</td><td>content/tag/list</td></tr></tbody></table><p>Query格式请求参数：</p><p>pageNum: 页码</p><p>pageSize: 每页条数</p><p>name：标签名</p><p>remark：备注</p><p>响应格式：</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>    <span class="token property">"code"</span><span class="token operator">:</span><span class="token number">200</span><span class="token punctuation">,</span>    <span class="token property">"data"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"rows"</span><span class="token operator">:</span><span class="token punctuation">[</span>            <span class="token punctuation">{</span>                <span class="token property">"id"</span><span class="token operator">:</span><span class="token number">4</span><span class="token punctuation">,</span>                <span class="token property">"name"</span><span class="token operator">:</span><span class="token string">"Java"</span><span class="token punctuation">,</span>                <span class="token property">"remark"</span><span class="token operator">:</span><span class="token string">"sdad"</span>            <span class="token punctuation">}</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token property">"total"</span><span class="token operator">:</span><span class="token number">1</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"msg"</span><span class="token operator">:</span><span class="token string">"操作成功"</span><span class="token punctuation">}</span></code></pre><h4 id="5-4-3-代码实现"><a href="#5-4-3-代码实现" class="headerlink" title="5.4.3 代码实现"></a>5.4.3 代码实现</h4><p>Controller</p><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@RestController</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/content/tag"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TagController</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> TagService tagService<span class="token punctuation">;</span>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/list"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> ResponseResult<span class="token operator">&lt;</span>PageVo<span class="token operator">></span> <span class="token function">list</span><span class="token punctuation">(</span>Integer pageNum<span class="token punctuation">,</span> Integer pageSize<span class="token punctuation">,</span> TagListDto tagListDto<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> tagService<span class="token punctuation">.</span><span class="token function">pageTagList</span><span class="token punctuation">(</span>pageNum<span class="token punctuation">,</span>pageSize<span class="token punctuation">,</span>tagListDto<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>Service</p><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">TagService</span> <span class="token keyword">extends</span> <span class="token class-name">IService</span><span class="token operator">&lt;</span>Tag<span class="token operator">></span> <span class="token punctuation">{</span>    ResponseResult<span class="token operator">&lt;</span>PageVo<span class="token operator">></span> <span class="token function">pageTagList</span><span class="token punctuation">(</span>Integer pageNum<span class="token punctuation">,</span> Integer pageSize<span class="token punctuation">,</span> TagListDto tagListDto<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Service</span><span class="token punctuation">(</span><span class="token string">"tagService"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TagServiceImpl</span> <span class="token keyword">extends</span> <span class="token class-name">ServiceImpl</span><span class="token operator">&lt;</span>TagMapper<span class="token punctuation">,</span> Tag<span class="token operator">></span> <span class="token keyword">implements</span> <span class="token class-name">TagService</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> ResponseResult<span class="token operator">&lt;</span>PageVo<span class="token operator">></span> <span class="token function">pageTagList</span><span class="token punctuation">(</span>Integer pageNum<span class="token punctuation">,</span> Integer pageSize<span class="token punctuation">,</span> TagListDto tagListDto<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//分页查询</span>        LambdaQueryWrapper<span class="token operator">&lt;</span>Tag<span class="token operator">></span> queryWrapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LambdaQueryWrapper</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        queryWrapper<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">hasText</span><span class="token punctuation">(</span>tagListDto<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>Tag<span class="token operator">:</span><span class="token operator">:</span>getName<span class="token punctuation">,</span>tagListDto<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        queryWrapper<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">hasText</span><span class="token punctuation">(</span>tagListDto<span class="token punctuation">.</span><span class="token function">getRemark</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>Tag<span class="token operator">:</span><span class="token operator">:</span>getRemark<span class="token punctuation">,</span>tagListDto<span class="token punctuation">.</span><span class="token function">getRemark</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Page<span class="token operator">&lt;</span>Tag<span class="token operator">></span> page <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Page</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        page<span class="token punctuation">.</span><span class="token function">setCurrent</span><span class="token punctuation">(</span>pageNum<span class="token punctuation">)</span><span class="token punctuation">;</span>        page<span class="token punctuation">.</span><span class="token function">setSize</span><span class="token punctuation">(</span>pageSize<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">page</span><span class="token punctuation">(</span>page<span class="token punctuation">,</span> queryWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//封装数据返回</span>        PageVo pageVo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PageVo</span><span class="token punctuation">(</span>page<span class="token punctuation">.</span><span class="token function">getRecords</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>page<span class="token punctuation">.</span><span class="token function">getTotal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> ResponseResult<span class="token punctuation">.</span><span class="token function">okResult</span><span class="token punctuation">(</span>pageVo<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="5-5-新增标签"><a href="#5-5-新增标签" class="headerlink" title="5.5 新增标签"></a>5.5 新增标签</h3><h4 id="5-5-0-需求"><a href="#5-5-0-需求" class="headerlink" title="5.5.0 需求"></a>5.5.0 需求</h4><p>​点击标签管理的新增按钮可以实现新增标签的功能。</p><h4 id="5-5-1-接口设计"><a href="#5-5-1-接口设计" class="headerlink" title="5.5.1 接口设计"></a>5.5.1 接口设计</h4><table><thead><tr><th>请求方式</th><th>请求地址</th><th>请求头</th></tr></thead><tbody><tr><td>POST</td><td>/content/tag</td><td>需要token请求头</td></tr></tbody></table><p>请求体格式:</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span><span class="token property">"name"</span><span class="token operator">:</span><span class="token string">"c#"</span><span class="token punctuation">,</span><span class="token property">"remark"</span><span class="token operator">:</span><span class="token string">"c++++"</span><span class="token punctuation">}</span></code></pre><p>响应格式：</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>    <span class="token property">"code"</span><span class="token operator">:</span><span class="token number">200</span><span class="token punctuation">,</span>    <span class="token property">"msg"</span><span class="token operator">:</span><span class="token string">"操作成功"</span><span class="token punctuation">}</span></code></pre><h4 id="5-5-2-测试"><a href="#5-5-2-测试" class="headerlink" title="5.5.2 测试"></a>5.5.2 测试</h4><p>测试时注意，添加到数据库中的记录有没有 创建时间，更新时间，创建人，更新人字段。</p><h3 id="5-6-删除标签"><a href="#5-6-删除标签" class="headerlink" title="5.6 删除标签"></a>5.6 删除标签</h3><h4 id="5-6-1-接口设计"><a href="#5-6-1-接口设计" class="headerlink" title="5.6.1 接口设计"></a>5.6.1 接口设计</h4><table><thead><tr><th>请求方式</th><th>请求地址</th><th>请求头</th></tr></thead><tbody><tr><td>DELETE</td><td>/content/tag/{id}</td><td>需要token请求头</td></tr></tbody></table><p>请求参数在path中</p><p>例如：content/tag/6   代表删除id为6的标签数据</p><p>响应格式：</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>    <span class="token property">"code"</span><span class="token operator">:</span><span class="token number">200</span><span class="token punctuation">,</span>    <span class="token property">"msg"</span><span class="token operator">:</span><span class="token string">"操作成功"</span><span class="token punctuation">}</span></code></pre><h4 id="5-6-2-测试"><a href="#5-6-2-测试" class="headerlink" title="5.6.2 测试"></a>5.6.2 测试</h4><p>注意测试删除后在列表中是否查看不到该条数据</p><p>数据库中该条数据还是存在的，只是修改了逻辑删除字段的值</p><h3 id="5-7-修改标签"><a href="#5-7-修改标签" class="headerlink" title="5.7 修改标签"></a>5.7 修改标签</h3><h4 id="5-7-1-接口设计"><a href="#5-7-1-接口设计" class="headerlink" title="5.7.1 接口设计"></a>5.7.1 接口设计</h4><h5 id="5-7-1-1-获取标签信息"><a href="#5-7-1-1-获取标签信息" class="headerlink" title="5.7.1.1 获取标签信息"></a>5.7.1.1 获取标签信息</h5><table><thead><tr><th>请求方式</th><th>请求地址</th><th>请求头</th></tr></thead><tbody><tr><td>GET</td><td>/content/tag/{id}</td><td>需要token请求头</td></tr></tbody></table><p>请求参数在path中</p><p>例如：content/tag/6   代表获取id为6的标签数据</p><p>响应格式：</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>    <span class="token property">"code"</span><span class="token operator">:</span><span class="token number">200</span><span class="token punctuation">,</span>    <span class="token property">"data"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"id"</span><span class="token operator">:</span><span class="token number">4</span><span class="token punctuation">,</span>        <span class="token property">"name"</span><span class="token operator">:</span><span class="token string">"Java"</span><span class="token punctuation">,</span>        <span class="token property">"remark"</span><span class="token operator">:</span><span class="token string">"sdad"</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"msg"</span><span class="token operator">:</span><span class="token string">"操作成功"</span><span class="token punctuation">}</span></code></pre><h5 id="5-7-1-2-修改标签接口"><a href="#5-7-1-2-修改标签接口" class="headerlink" title="5.7.1.2 修改标签接口"></a>5.7.1.2 修改标签接口</h5><table><thead><tr><th>请求方式</th><th>请求地址</th><th>请求头</th></tr></thead><tbody><tr><td>PUT</td><td>/content/tag</td><td>需要token请求头</td></tr></tbody></table><p>请求体格式：</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span><span class="token property">"id"</span><span class="token operator">:</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token property">"name"</span><span class="token operator">:</span><span class="token string">"c#"</span><span class="token punctuation">,</span><span class="token property">"remark"</span><span class="token operator">:</span><span class="token string">"c++++"</span><span class="token punctuation">}</span></code></pre><p>响应格式：</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>    <span class="token property">"code"</span><span class="token operator">:</span><span class="token number">200</span><span class="token punctuation">,</span>    <span class="token property">"msg"</span><span class="token operator">:</span><span class="token string">"操作成功"</span><span class="token punctuation">}</span></code></pre><h3 id="5-8-写博文"><a href="#5-8-写博文" class="headerlink" title="5.8 写博文"></a>5.8 写博文</h3><h4 id="5-8-1-需求"><a href="#5-8-1-需求" class="headerlink" title="5.8.1 需求"></a>5.8.1 需求</h4><p>​需要提供写博文的功能，写博文时需要关联分类和标签。</p><p>​可以上传缩略图，也可以在正文中添加图片。</p><p>​文章可以直接发布，也可以保存到草稿箱。</p><h4 id="5-8-2-表分析"><a href="#5-8-2-表分析" class="headerlink" title="5.8.2 表分析"></a>5.8.2 表分析</h4><p>​标签和文章需要关联所以需要一张关联表。</p><p>​SQL脚本：SGBlog\资源\SQL\sg_article_tag.sql</p><h4 id="5-8-2-接口设计"><a href="#5-8-2-接口设计" class="headerlink" title="5.8.2 接口设计"></a>5.8.2 接口设计</h4><p>​思考下需要哪些接口才能实现这个功能？</p><h5 id="5-8-2-1-查询所有分类接口"><a href="#5-8-2-1-查询所有分类接口" class="headerlink" title="5.8.2.1 查询所有分类接口"></a>5.8.2.1 查询所有分类接口</h5><table><thead><tr><th>请求方式</th><th>请求地址</th><th>请求头</th></tr></thead><tbody><tr><td>GET</td><td>/content/category/listAllCategory</td><td>需要token请求头</td></tr></tbody></table><p>请求参数：</p><p>​无</p><p>响应格式：</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>    <span class="token property">"code"</span><span class="token operator">:</span><span class="token number">200</span><span class="token punctuation">,</span>    <span class="token property">"data"</span><span class="token operator">:</span><span class="token punctuation">[</span>        <span class="token punctuation">{</span>            <span class="token property">"description"</span><span class="token operator">:</span><span class="token string">"wsd"</span><span class="token punctuation">,</span>            <span class="token property">"id"</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span>            <span class="token property">"name"</span><span class="token operator">:</span><span class="token string">"java"</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">{</span>            <span class="token property">"description"</span><span class="token operator">:</span><span class="token string">"wsd"</span><span class="token punctuation">,</span>            <span class="token property">"id"</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span>            <span class="token property">"name"</span><span class="token operator">:</span><span class="token string">"PHP"</span>        <span class="token punctuation">}</span>    <span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token property">"msg"</span><span class="token operator">:</span><span class="token string">"操作成功"</span><span class="token punctuation">}</span></code></pre><h5 id="5-8-2-2-查询所有标签接口"><a href="#5-8-2-2-查询所有标签接口" class="headerlink" title="5.8.2.2 查询所有标签接口"></a>5.8.2.2 查询所有标签接口</h5><table><thead><tr><th>请求方式</th><th>请求地址</th><th>请求头</th></tr></thead><tbody><tr><td>GET</td><td>/content/tag/listAllTag</td><td>需要token请求头</td></tr></tbody></table><p>请求参数:</p><p>​无</p><p>响应格式：</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>    <span class="token property">"code"</span><span class="token operator">:</span><span class="token number">200</span><span class="token punctuation">,</span>    <span class="token property">"data"</span><span class="token operator">:</span><span class="token punctuation">[</span>        <span class="token punctuation">{</span>            <span class="token property">"id"</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span>            <span class="token property">"name"</span><span class="token operator">:</span><span class="token string">"Mybatis"</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">{</span>            <span class="token property">"id"</span><span class="token operator">:</span><span class="token number">4</span><span class="token punctuation">,</span>            <span class="token property">"name"</span><span class="token operator">:</span><span class="token string">"Java"</span>        <span class="token punctuation">}</span>    <span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token property">"msg"</span><span class="token operator">:</span><span class="token string">"操作成功"</span><span class="token punctuation">}</span></code></pre><h5 id="5-8-2-3-上传图片"><a href="#5-8-2-3-上传图片" class="headerlink" title="5.8.2.3 上传图片"></a>5.8.2.3 上传图片</h5><table><thead><tr><th>请求方式</th><th>请求地址</th><th>请求头</th></tr></thead><tbody><tr><td>POST</td><td>/upload</td><td>需要token请求头</td></tr></tbody></table><p>参数：</p><p>​img,值为要上传的文件</p><p>请求头：</p><p>​Content-Type ：multipart/form-data;</p><p>响应格式:</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>    <span class="token property">"code"</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span>    <span class="token property">"data"</span><span class="token operator">:</span> <span class="token string">"文件访问链接"</span><span class="token punctuation">,</span>    <span class="token property">"msg"</span><span class="token operator">:</span> <span class="token string">"操作成功"</span><span class="token punctuation">}</span></code></pre><h5 id="5-8-2-4-新增博文"><a href="#5-8-2-4-新增博文" class="headerlink" title="5.8.2.4 新增博文"></a>5.8.2.4 新增博文</h5><table><thead><tr><th>请求方式</th><th>请求地址</th><th>请求头</th></tr></thead><tbody><tr><td>POST</td><td>/content/article</td><td>需要token请求头</td></tr></tbody></table><p>请求体格式：</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>    <span class="token property">"title"</span><span class="token operator">:</span><span class="token string">"测试新增博文"</span><span class="token punctuation">,</span>    <span class="token property">"thumbnail"</span><span class="token operator">:</span><span class="token string">"https://sg-blog-oss.oss-cn-beijing.aliyuncs.com/2022/08/21/4ceebc07e7484beba732f12b0d2c43a9.png"</span><span class="token punctuation">,</span>    <span class="token property">"isTop"</span><span class="token operator">:</span><span class="token string">"0"</span><span class="token punctuation">,</span>    <span class="token property">"isComment"</span><span class="token operator">:</span><span class="token string">"0"</span><span class="token punctuation">,</span>    <span class="token property">"content"</span><span class="token operator">:</span><span class="token string">"# 一级标题\n## 二级标题\n![Snipaste_20220228_224837.png](https://sg-blog-oss.oss-cn-beijing.aliyuncs.com/2022/08/21/c3af554d4a0f4935b4073533a4c26ee8.png)\n正文"</span><span class="token punctuation">,</span>    <span class="token property">"tags"</span><span class="token operator">:</span><span class="token punctuation">[</span>        <span class="token number">1</span><span class="token punctuation">,</span>        <span class="token number">4</span>    <span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token property">"categoryId"</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span>    <span class="token property">"summary"</span><span class="token operator">:</span><span class="token string">"哈哈"</span><span class="token punctuation">,</span>    <span class="token property">"status"</span><span class="token operator">:</span><span class="token string">"1"</span><span class="token punctuation">}</span></code></pre><p>响应格式：</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>    <span class="token property">"code"</span><span class="token operator">:</span><span class="token number">200</span><span class="token punctuation">,</span>    <span class="token property">"msg"</span><span class="token operator">:</span><span class="token string">"操作成功"</span><span class="token punctuation">}</span></code></pre><h4 id="5-8-3-代码实现"><a href="#5-8-3-代码实现" class="headerlink" title="5.8.3 代码实现"></a>5.8.3 代码实现</h4><h5 id="5-8-3-1-查询所有分类接口"><a href="#5-8-3-1-查询所有分类接口" class="headerlink" title="5.8.3.1 查询所有分类接口"></a>5.8.3.1 查询所有分类接口</h5><p>CategoryController</p><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">/** * @Author 三更  B站： https://space.bilibili.com/663528522 */</span><span class="token annotation punctuation">@RestController</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/content/category"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CategoryController</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> CategoryService categoryService<span class="token punctuation">;</span>        <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/listAllCategory"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> ResponseResult <span class="token function">listAllCategory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        List<span class="token operator">&lt;</span>CategoryVo<span class="token operator">></span> list <span class="token operator">=</span> categoryService<span class="token punctuation">.</span><span class="token function">listAllCategory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> ResponseResult<span class="token punctuation">.</span><span class="token function">okResult</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token punctuation">}</span></code></pre><p>CategoryVo修改,增加description属性</p><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Data</span><span class="token annotation punctuation">@NoArgsConstructor</span><span class="token annotation punctuation">@AllArgsConstructor</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CategoryVo</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> Long id<span class="token punctuation">;</span>    <span class="token keyword">private</span> String name<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//描述</span>    <span class="token keyword">private</span> String description<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>CategoryService增加listAllCategory方法</p><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">CategoryService</span> <span class="token keyword">extends</span> <span class="token class-name">IService</span><span class="token operator">&lt;</span>Category<span class="token operator">></span> <span class="token punctuation">{</span>    ResponseResult <span class="token function">getCategoryList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    List<span class="token operator">&lt;</span>CategoryVo<span class="token operator">></span> <span class="token function">listAllCategory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>SystemConstants中增加常量</p><pre class=" language-java"><code class="language-java">    <span class="token comment" spellcheck="true">/** 正常状态 */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> String NORMAL <span class="token operator">=</span> <span class="token string">"0"</span><span class="token punctuation">;</span></code></pre><p>CategoryServiceImpl增加方法</p><pre class=" language-java"><code class="language-java">    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> List<span class="token operator">&lt;</span>CategoryVo<span class="token operator">></span> <span class="token function">listAllCategory</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        LambdaQueryWrapper<span class="token operator">&lt;</span>Category<span class="token operator">></span> wrapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LambdaQueryWrapper</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        wrapper<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span>Category<span class="token operator">:</span><span class="token operator">:</span>getStatus<span class="token punctuation">,</span> SystemConstants<span class="token punctuation">.</span>NORMAL<span class="token punctuation">)</span><span class="token punctuation">;</span>        List<span class="token operator">&lt;</span>Category<span class="token operator">></span> list <span class="token operator">=</span> <span class="token function">list</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>        List<span class="token operator">&lt;</span>CategoryVo<span class="token operator">></span> categoryVos <span class="token operator">=</span> BeanCopyUtils<span class="token punctuation">.</span><span class="token function">copyBeanList</span><span class="token punctuation">(</span>list<span class="token punctuation">,</span> CategoryVo<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> categoryVos<span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><h5 id="5-8-3-2-查询所有标签接口"><a href="#5-8-3-2-查询所有标签接口" class="headerlink" title="5.8.3.2 查询所有标签接口"></a>5.8.3.2 查询所有标签接口</h5><p>TagVo</p><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Data</span><span class="token annotation punctuation">@AllArgsConstructor</span><span class="token annotation punctuation">@NoArgsConstructor</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TagVo</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> Long id<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//标签名</span>    <span class="token keyword">private</span> String name<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>TagController</p><pre class=" language-java"><code class="language-java">    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/listAllTag"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> ResponseResult <span class="token function">listAllTag</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        List<span class="token operator">&lt;</span>TagVo<span class="token operator">></span> list <span class="token operator">=</span> tagService<span class="token punctuation">.</span><span class="token function">listAllTag</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> ResponseResult<span class="token punctuation">.</span><span class="token function">okResult</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><p>TagService 增加listAllTag方法</p><pre class=" language-java"><code class="language-java">List<span class="token operator">&lt;</span>TagVo<span class="token operator">></span> <span class="token function">listAllTag</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>TagServiceImpl</p><pre class=" language-java"><code class="language-java">    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> List<span class="token operator">&lt;</span>TagVo<span class="token operator">></span> <span class="token function">listAllTag</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        LambdaQueryWrapper<span class="token operator">&lt;</span>Tag<span class="token operator">></span> wrapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LambdaQueryWrapper</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        wrapper<span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span>Tag<span class="token operator">:</span><span class="token operator">:</span>getId<span class="token punctuation">,</span>Tag<span class="token operator">:</span><span class="token operator">:</span>getName<span class="token punctuation">)</span><span class="token punctuation">;</span>        List<span class="token operator">&lt;</span>Tag<span class="token operator">></span> list <span class="token operator">=</span> <span class="token function">list</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>        List<span class="token operator">&lt;</span>TagVo<span class="token operator">></span> tagVos <span class="token operator">=</span> BeanCopyUtils<span class="token punctuation">.</span><span class="token function">copyBeanList</span><span class="token punctuation">(</span>list<span class="token punctuation">,</span> TagVo<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> tagVos<span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><h5 id="5-8-3-3-上传图片接口"><a href="#5-8-3-3-上传图片接口" class="headerlink" title="5.8.3.3 上传图片接口"></a>5.8.3.3 上传图片接口</h5><p>在sangeng-admin中增加UploadController</p><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">/** * @Author 三更  B站： https://space.bilibili.com/663528522 */</span><span class="token annotation punctuation">@RestController</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UploadController</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> UploadService uploadService<span class="token punctuation">;</span>    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"/upload"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> ResponseResult <span class="token function">uploadImg</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span><span class="token string">"img"</span><span class="token punctuation">)</span> MultipartFile multipartFile<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> uploadService<span class="token punctuation">.</span><span class="token function">uploadImg</span><span class="token punctuation">(</span>multipartFile<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">"文件上传上传失败"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h5 id="5-8-3-4-新增博文接口"><a href="#5-8-3-4-新增博文接口" class="headerlink" title="5.8.3.4 新增博文接口"></a>5.8.3.4 新增博文接口</h5><p>ArticleController</p><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">/** * @Author 三更  B站： https://space.bilibili.com/663528522 */</span><span class="token annotation punctuation">@RestController</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/content/article"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ArticleController</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> ArticleService articleService<span class="token punctuation">;</span>    <span class="token annotation punctuation">@PostMapping</span>    <span class="token keyword">public</span> ResponseResult <span class="token function">add</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> AddArticleDto article<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> articleService<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>article<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>AddArticleDto</p><p>注意增加tags属性用于接收文章关联标签的id</p><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Data</span><span class="token annotation punctuation">@AllArgsConstructor</span><span class="token annotation punctuation">@NoArgsConstructor</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AddArticleDto</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> Long id<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//标题</span>    <span class="token keyword">private</span> String title<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//文章内容</span>    <span class="token keyword">private</span> String content<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//文章摘要</span>    <span class="token keyword">private</span> String summary<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//所属分类id</span>    <span class="token keyword">private</span> Long categoryId<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//缩略图</span>    <span class="token keyword">private</span> String thumbnail<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//是否置顶（0否，1是）</span>    <span class="token keyword">private</span> String isTop<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//状态（0已发布，1草稿）</span>    <span class="token keyword">private</span> String status<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//访问量</span>    <span class="token keyword">private</span> Long viewCount<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//是否允许评论 1是，0否</span>    <span class="token keyword">private</span> String isComment<span class="token punctuation">;</span>    <span class="token keyword">private</span> List<span class="token operator">&lt;</span>Long<span class="token operator">></span> tags<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>Article 修改这样创建时间创建人修改时间修改人可以自动填充</p><pre class=" language-java"><code class="language-java">    <span class="token annotation punctuation">@TableField</span><span class="token punctuation">(</span>fill <span class="token operator">=</span> FieldFill<span class="token punctuation">.</span>INSERT<span class="token punctuation">)</span>    <span class="token keyword">private</span> Long createBy<span class="token punctuation">;</span>    <span class="token annotation punctuation">@TableField</span><span class="token punctuation">(</span>fill <span class="token operator">=</span> FieldFill<span class="token punctuation">.</span>INSERT<span class="token punctuation">)</span>    <span class="token keyword">private</span> Date createTime<span class="token punctuation">;</span>    <span class="token annotation punctuation">@TableField</span><span class="token punctuation">(</span>fill <span class="token operator">=</span> FieldFill<span class="token punctuation">.</span>INSERT_UPDATE<span class="token punctuation">)</span>    <span class="token keyword">private</span> Long updateBy<span class="token punctuation">;</span>    <span class="token annotation punctuation">@TableField</span><span class="token punctuation">(</span>fill <span class="token operator">=</span> FieldFill<span class="token punctuation">.</span>INSERT_UPDATE<span class="token punctuation">)</span>    <span class="token keyword">private</span> Date updateTime<span class="token punctuation">;</span></code></pre><p>ArticleService增加方法</p><pre class=" language-java"><code class="language-java">ResponseResult <span class="token function">add</span><span class="token punctuation">(</span>AddArticleDto article<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>创建ArticleTag表相关的实体类，mapper，service,serviceimpl等</p><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@TableName</span><span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token string">"sg_article_tag"</span><span class="token punctuation">)</span><span class="token annotation punctuation">@Data</span><span class="token annotation punctuation">@AllArgsConstructor</span><span class="token annotation punctuation">@NoArgsConstructor</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ArticleTag</span> <span class="token keyword">implements</span> <span class="token class-name">Serializable</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> serialVersionUID <span class="token operator">=</span> 625337492348897098L<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">/**    * 文章id    */</span>    <span class="token keyword">private</span> Long articleId<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**    * 标签id    */</span>    <span class="token keyword">private</span> Long tagId<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>ArticleServiceImpl增加如下代码</p><pre class=" language-java"><code class="language-java">    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> ArticleTagService articleTagService<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token annotation punctuation">@Transactional</span>    <span class="token keyword">public</span> ResponseResult <span class="token function">add</span><span class="token punctuation">(</span>AddArticleDto articleDto<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//添加 博客</span>        Article article <span class="token operator">=</span> BeanCopyUtils<span class="token punctuation">.</span><span class="token function">copyBean</span><span class="token punctuation">(</span>articleDto<span class="token punctuation">,</span> Article<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">save</span><span class="token punctuation">(</span>article<span class="token punctuation">)</span><span class="token punctuation">;</span>        List<span class="token operator">&lt;</span>ArticleTag<span class="token operator">></span> articleTags <span class="token operator">=</span> articleDto<span class="token punctuation">.</span><span class="token function">getTags</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>tagId <span class="token operator">-</span><span class="token operator">></span> <span class="token keyword">new</span> <span class="token class-name">ArticleTag</span><span class="token punctuation">(</span>article<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> tagId<span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span>Collectors<span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//添加 博客和标签的关联</span>        articleTagService<span class="token punctuation">.</span><span class="token function">saveBatch</span><span class="token punctuation">(</span>articleTags<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> ResponseResult<span class="token punctuation">.</span><span class="token function">okResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><h3 id="5-9-导出所有分类到Excel"><a href="#5-9-导出所有分类到Excel" class="headerlink" title="5.9 导出所有分类到Excel"></a>5.9 导出所有分类到Excel</h3><h4 id="5-9-1-需求"><a href="#5-9-1-需求" class="headerlink" title="5.9.1 需求"></a>5.9.1 需求</h4><p>​在分类管理中点击导出按钮可以把所有的分类导出到Excel文件中。</p><p>​</p><h4 id="5-9-2-技术方案"><a href="#5-9-2-技术方案" class="headerlink" title="5.9.2 技术方案"></a>5.9.2 技术方案</h4><p>​使用EasyExcel实现Excel的导出操作。</p><p>​<a href="https://github.com/alibaba/easyexcel">https://github.com/alibaba/easyexcel</a></p><p>​    <a href="https://easyexcel.opensource.alibaba.com/docs/current/quickstart/write#%E7%A4%BA%E4%BE%8B%E4%BB%A3%E7%A0%81-1">https://easyexcel.opensource.alibaba.com/docs/current/quickstart/write#%E7%A4%BA%E4%BE%8B%E4%BB%A3%E7%A0%81-1</a></p><h4 id="5-9-3-接口设计"><a href="#5-9-3-接口设计" class="headerlink" title="5.9.3 接口设计"></a>5.9.3 接口设计</h4><p>​</p><table><thead><tr><th>请求方式</th><th>请求地址</th><th>请求头</th></tr></thead><tbody><tr><td>GET</td><td>/content/category/export</td><td>需要token请求头</td></tr></tbody></table><p>请求参数：</p><p>​无</p><p>响应格式：</p><p>成功的话可以直接导出一个Excel文件</p><p>失败的话响应格式如下：</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>    <span class="token property">"code"</span><span class="token operator">:</span><span class="token number">500</span><span class="token punctuation">,</span>    <span class="token property">"msg"</span><span class="token operator">:</span><span class="token string">"出现错误"</span><span class="token punctuation">}</span></code></pre><h4 id="5-9-4-代码实现"><a href="#5-9-4-代码实现" class="headerlink" title="5.9.4 代码实现"></a>5.9.4 代码实现</h4><p>工具类方法修改</p><p>WebUtils</p><pre class=" language-java"><code class="language-java">    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">setDownLoadHeader</span><span class="token punctuation">(</span>String filename<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token keyword">throws</span> UnsupportedEncodingException <span class="token punctuation">{</span>        response<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token string">"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        response<span class="token punctuation">.</span><span class="token function">setCharacterEncoding</span><span class="token punctuation">(</span><span class="token string">"utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        String fname<span class="token operator">=</span> URLEncoder<span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span>filename<span class="token punctuation">,</span><span class="token string">"UTF-8"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replaceAll</span><span class="token punctuation">(</span><span class="token string">"\\+"</span><span class="token punctuation">,</span> <span class="token string">"%20"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        response<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">"Content-disposition"</span><span class="token punctuation">,</span><span class="token string">"attachment; filename="</span><span class="token operator">+</span>fname<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><p>CategoryController</p><pre class=" language-java"><code class="language-java">    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/export"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">export</span><span class="token punctuation">(</span>HttpServletResponse response<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//设置下载文件的请求头</span>            WebUtils<span class="token punctuation">.</span><span class="token function">setDownLoadHeader</span><span class="token punctuation">(</span><span class="token string">"分类.xlsx"</span><span class="token punctuation">,</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//获取需要导出的数据</span>            List<span class="token operator">&lt;</span>Category<span class="token operator">></span> categoryVos <span class="token operator">=</span> categoryService<span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            List<span class="token operator">&lt;</span>ExcelCategoryVo<span class="token operator">></span> excelCategoryVos <span class="token operator">=</span> BeanCopyUtils<span class="token punctuation">.</span><span class="token function">copyBeanList</span><span class="token punctuation">(</span>categoryVos<span class="token punctuation">,</span> ExcelCategoryVo<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//把数据写入到Excel中</span>            EasyExcel<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span><span class="token function">getOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> ExcelCategoryVo<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">autoCloseStream</span><span class="token punctuation">(</span>Boolean<span class="token punctuation">.</span>FALSE<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sheet</span><span class="token punctuation">(</span><span class="token string">"分类导出"</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">doWrite</span><span class="token punctuation">(</span>excelCategoryVos<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//如果出现异常也要响应json</span>            ResponseResult result <span class="token operator">=</span> ResponseResult<span class="token punctuation">.</span><span class="token function">errorResult</span><span class="token punctuation">(</span>AppHttpCodeEnum<span class="token punctuation">.</span>SYSTEM_ERROR<span class="token punctuation">)</span><span class="token punctuation">;</span>            WebUtils<span class="token punctuation">.</span><span class="token function">renderString</span><span class="token punctuation">(</span>response<span class="token punctuation">,</span> JSON<span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span></code></pre><p>ExcelCategoryVo</p><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Data</span><span class="token annotation punctuation">@NoArgsConstructor</span><span class="token annotation punctuation">@AllArgsConstructor</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ExcelCategoryVo</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@ExcelProperty</span><span class="token punctuation">(</span><span class="token string">"分类名"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> String name<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//描述</span>    <span class="token annotation punctuation">@ExcelProperty</span><span class="token punctuation">(</span><span class="token string">"描述"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> String description<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//状态0:正常,1禁用</span>    <span class="token annotation punctuation">@ExcelProperty</span><span class="token punctuation">(</span><span class="token string">"状态0:正常,1禁用"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> String status<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h3 id="5-10-权限控制"><a href="#5-10-权限控制" class="headerlink" title="5.10 权限控制"></a>5.10 权限控制</h3><h4 id="5-10-1-需求"><a href="#5-10-1-需求" class="headerlink" title="5.10.1 需求"></a>5.10.1 需求</h4><p>​需要对导出分类的接口做权限控制。</p><p>sg   eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJkZGJkNjM5MWJiZTA0NmMzOTc4NDg1ZTcxNWQ3YjQ0MSIsInN1YiI6IjEiLCJpc3MiOiJzZyIsImlhdCI6MTY2MjI0NDE4NywiZXhwIjoxNjYyMzMwNTg3fQ.z4JGwFN3lWyVbOCbhikCe-O4D6SvCQFEE5eQY3jDJkw</p><p>sangeng</p><p>eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI0Y2I1ZjhmMTc0Mjk0NzM0YjI4Y2M1NTQzYjQ2Yjc1YyIsInN1YiI6IjYiLCJpc3MiOiJzZyIsImlhdCI6MTY2MjI0NDQzMywiZXhwIjoxNjYyMzMwODMzfQ.yEkbyGYXBp5ndnyq-3acdgpvqx2mnI8B9fK9f3Y6Jco</p><h4 id="5-10-2-代码实现"><a href="#5-10-2-代码实现" class="headerlink" title="5.10.2 代码实现"></a>5.10.2 代码实现</h4><p>SecurityConfig</p><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@EnableGlobalMethodSecurity</span><span class="token punctuation">(</span>prePostEnabled <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span></code></pre><p>UserDetailsServiceImpl</p><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Service</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserDetailsServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">UserDetailsService</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> UserMapper userMapper<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> MenuMapper menuMapper<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> UserDetails <span class="token function">loadUserByUsername</span><span class="token punctuation">(</span>String username<span class="token punctuation">)</span> <span class="token keyword">throws</span> UsernameNotFoundException <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//根据用户名查询用户信息</span>        LambdaQueryWrapper<span class="token operator">&lt;</span>User<span class="token operator">></span> queryWrapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LambdaQueryWrapper</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        queryWrapper<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span>User<span class="token operator">:</span><span class="token operator">:</span>getUserName<span class="token punctuation">,</span>username<span class="token punctuation">)</span><span class="token punctuation">;</span>        User user <span class="token operator">=</span> userMapper<span class="token punctuation">.</span><span class="token function">selectOne</span><span class="token punctuation">(</span>queryWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//判断是否查到用户  如果没查到抛出异常</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>Objects<span class="token punctuation">.</span><span class="token function">isNull</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">"用户不存在"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">//返回用户信息</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>SystemConstants<span class="token punctuation">.</span>ADMAIN<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            List<span class="token operator">&lt;</span>String<span class="token operator">></span> list <span class="token operator">=</span> menuMapper<span class="token punctuation">.</span><span class="token function">selectPermsByUserId</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">LoginUser</span><span class="token punctuation">(</span>user<span class="token punctuation">,</span>list<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">LoginUser</span><span class="token punctuation">(</span>user<span class="token punctuation">,</span>null<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>LoginUser</p><p>增加属性</p><pre class=" language-java"><code class="language-java"><span class="token keyword">private</span> List<span class="token operator">&lt;</span>String<span class="token operator">></span> permissions<span class="token punctuation">;</span></code></pre><p>PermissionService</p><p>hasPermisson</p><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Service</span><span class="token punctuation">(</span><span class="token string">"ps"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">PermissionService</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/**     * 判断当前用户是否具有permission     * @param permission 要判断的权限     * @return     */</span>    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">hasPermission</span><span class="token punctuation">(</span>String permission<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//如果是超级管理员  直接返回true</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>SecurityUtils<span class="token punctuation">.</span><span class="token function">isAdmin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">//否则  获取当前登录用户所具有的权限列表 如何判断是否存在permission</span>        List<span class="token operator">&lt;</span>String<span class="token operator">></span> permissions <span class="token operator">=</span> SecurityUtils<span class="token punctuation">.</span><span class="token function">getLoginUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getPermissions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> permissions<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>permission<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>CategoryController</p><pre class=" language-java"><code class="language-java">    <span class="token annotation punctuation">@PreAuthorize</span><span class="token punctuation">(</span><span class="token string">"@ps.hasPermission('content:category:export')"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/export"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">export</span><span class="token punctuation">(</span>HttpServletResponse response<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//设置下载文件的请求头</span>            WebUtils<span class="token punctuation">.</span><span class="token function">setDownLoadHeader</span><span class="token punctuation">(</span><span class="token string">"分类.xlsx"</span><span class="token punctuation">,</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//获取需要导出的数据</span>            List<span class="token operator">&lt;</span>Category<span class="token operator">></span> categoryVos <span class="token operator">=</span> categoryService<span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            List<span class="token operator">&lt;</span>ExcelCategoryVo<span class="token operator">></span> excelCategoryVos <span class="token operator">=</span> BeanCopyUtils<span class="token punctuation">.</span><span class="token function">copyBeanList</span><span class="token punctuation">(</span>categoryVos<span class="token punctuation">,</span> ExcelCategoryVo<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//把数据写入到Excel中</span>            EasyExcel<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span><span class="token function">getOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> ExcelCategoryVo<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">autoCloseStream</span><span class="token punctuation">(</span>Boolean<span class="token punctuation">.</span>FALSE<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sheet</span><span class="token punctuation">(</span><span class="token string">"分类导出"</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">doWrite</span><span class="token punctuation">(</span>excelCategoryVos<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//如果出现异常也要响应json</span>            ResponseResult result <span class="token operator">=</span> ResponseResult<span class="token punctuation">.</span><span class="token function">errorResult</span><span class="token punctuation">(</span>AppHttpCodeEnum<span class="token punctuation">.</span>SYSTEM_ERROR<span class="token punctuation">)</span><span class="token punctuation">;</span>            WebUtils<span class="token punctuation">.</span><span class="token function">renderString</span><span class="token punctuation">(</span>response<span class="token punctuation">,</span> JSON<span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span></code></pre><h3 id="5-11-文章列表"><a href="#5-11-文章列表" class="headerlink" title="5.11 文章列表"></a>5.11 文章列表</h3><h4 id="5-10-1-需求-1"><a href="#5-10-1-需求-1" class="headerlink" title="5.10.1 需求"></a>5.10.1 需求</h4><p>​为了对文章进行管理，需要提供文章列表，</p><p>​    在后台需要分页查询文章功能，要求能根据标题和摘要<strong>模糊查询</strong>。 </p><p>​注意：不能把删除了的文章查询出来</p><h4 id="5-10-2-接口设计"><a href="#5-10-2-接口设计" class="headerlink" title="5.10.2  接口设计"></a>5.10.2  接口设计</h4><table><thead><tr><th>请求方式</th><th>请求路径</th><th>是否需求token头</th></tr></thead><tbody><tr><td>Get</td><td>/content/article/list</td><td>是</td></tr></tbody></table><p>Query格式请求参数：</p><p>pageNum: 页码</p><p>pageSize: 每页条数</p><p>title：文章标题</p><p>summary：文章摘要</p><p>响应格式：</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>    <span class="token property">"code"</span><span class="token operator">:</span><span class="token number">200</span><span class="token punctuation">,</span>    <span class="token property">"data"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"rows"</span><span class="token operator">:</span><span class="token punctuation">[</span>            <span class="token punctuation">{</span>                <span class="token property">"categoryId"</span><span class="token operator">:</span><span class="token string">"1"</span><span class="token punctuation">,</span>                <span class="token property">"content"</span><span class="token operator">:</span><span class="token string">"嘻嘻嘻嘻嘻嘻"</span><span class="token punctuation">,</span>                <span class="token property">"createTime"</span><span class="token operator">:</span><span class="token string">"2022-01-24 07:20:11"</span><span class="token punctuation">,</span>                <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"1"</span><span class="token punctuation">,</span>                <span class="token property">"isComment"</span><span class="token operator">:</span><span class="token string">"0"</span><span class="token punctuation">,</span>                <span class="token property">"isTop"</span><span class="token operator">:</span><span class="token string">"1"</span><span class="token punctuation">,</span>                <span class="token property">"status"</span><span class="token operator">:</span><span class="token string">"0"</span><span class="token punctuation">,</span>                <span class="token property">"summary"</span><span class="token operator">:</span><span class="token string">"SpringSecurity框架教程-Spring Security+JWT实现项目级前端分离认证授权"</span><span class="token punctuation">,</span>                <span class="token property">"thumbnail"</span><span class="token operator">:</span><span class="token string">"https://sg-blog-oss.oss-cn-beijing.aliyuncs.com/2022/01/31/948597e164614902ab1662ba8452e106.png"</span><span class="token punctuation">,</span>                <span class="token property">"title"</span><span class="token operator">:</span><span class="token string">"SpringSecurity从入门到精通"</span><span class="token punctuation">,</span>                <span class="token property">"viewCount"</span><span class="token operator">:</span><span class="token string">"161"</span>            <span class="token punctuation">}</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token property">"total"</span><span class="token operator">:</span><span class="token string">"1"</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"msg"</span><span class="token operator">:</span><span class="token string">"操作成功"</span><span class="token punctuation">}</span></code></pre><p>​</p><h3 id="5-12-修改文章"><a href="#5-12-修改文章" class="headerlink" title="5.12 修改文章"></a>5.12 修改文章</h3><h4 id="5-12-1-需求"><a href="#5-12-1-需求" class="headerlink" title="5.12.1 需求"></a>5.12.1 需求</h4><p>​点击文章列表中的修改按钮可以跳转到写博文页面。回显示该文章的具体信息。</p><p>​用户可以在该页面修改文章信息。点击更新按钮后修改文章。</p><h4 id="5-12-2-分析"><a href="#5-12-2-分析" class="headerlink" title="5.12.2 分析"></a>5.12.2 分析</h4><p>​这个功能的实现首先需要能够根据文章id查询文章的详细信息这样才能实现文章的回显。</p><p>​如何需要提供更新文章的接口。</p><h4 id="5-12-3-接口设计"><a href="#5-12-3-接口设计" class="headerlink" title="5.12.3 接口设计"></a>5.12.3 接口设计</h4><h5 id="5-12-3-1-查询文章详情接口"><a href="#5-12-3-1-查询文章详情接口" class="headerlink" title="5.12.3.1 查询文章详情接口"></a>5.12.3.1 查询文章详情接口</h5><table><thead><tr><th>请求方式</th><th>请求路径</th><th>是否需求token头</th></tr></thead><tbody><tr><td>Get</td><td>content/article/{id}</td><td>是</td></tr></tbody></table><p>Path格式请求参数：</p><p>id: 文章id</p><p>响应格式：</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>    <span class="token property">"code"</span><span class="token operator">:</span><span class="token number">200</span><span class="token punctuation">,</span>    <span class="token property">"data"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"categoryId"</span><span class="token operator">:</span><span class="token string">"1"</span><span class="token punctuation">,</span>        <span class="token property">"content"</span><span class="token operator">:</span><span class="token string">"xxxxxxx"</span><span class="token punctuation">,</span>        <span class="token property">"createBy"</span><span class="token operator">:</span><span class="token string">"1"</span><span class="token punctuation">,</span>        <span class="token property">"createTime"</span><span class="token operator">:</span><span class="token string">"2022-08-28 15:15:46"</span><span class="token punctuation">,</span>        <span class="token property">"delFlag"</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span>        <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"10"</span><span class="token punctuation">,</span>        <span class="token property">"isComment"</span><span class="token operator">:</span><span class="token string">"0"</span><span class="token punctuation">,</span>        <span class="token property">"isTop"</span><span class="token operator">:</span><span class="token string">"1"</span><span class="token punctuation">,</span>        <span class="token property">"status"</span><span class="token operator">:</span><span class="token string">"0"</span><span class="token punctuation">,</span>        <span class="token property">"summary"</span><span class="token operator">:</span><span class="token string">"啊实打实"</span><span class="token punctuation">,</span>        <span class="token property">"tags"</span><span class="token operator">:</span><span class="token punctuation">[</span>            <span class="token string">"1"</span><span class="token punctuation">,</span>            <span class="token string">"4"</span><span class="token punctuation">,</span>            <span class="token string">"5"</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token property">"thumbnail"</span><span class="token operator">:</span><span class="token string">"https://sg-blog-oss.oss-cn-beijing.aliyuncs.com/2022/08/28/7659aac2b74247fe8ebd9e054b916dbf.png"</span><span class="token punctuation">,</span>        <span class="token property">"title"</span><span class="token operator">:</span><span class="token string">"委屈饿驱蚊器"</span><span class="token punctuation">,</span>        <span class="token property">"updateBy"</span><span class="token operator">:</span><span class="token string">"1"</span><span class="token punctuation">,</span>        <span class="token property">"updateTime"</span><span class="token operator">:</span><span class="token string">"2022-08-28 15:15:46"</span><span class="token punctuation">,</span>        <span class="token property">"viewCount"</span><span class="token operator">:</span><span class="token string">"0"</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"msg"</span><span class="token operator">:</span><span class="token string">"操作成功"</span><span class="token punctuation">}</span></code></pre><h5 id="5-12-3-2-更新文章接口"><a href="#5-12-3-2-更新文章接口" class="headerlink" title="5.12.3.2 更新文章接口"></a>5.12.3.2 更新文章接口</h5><table><thead><tr><th>请求方式</th><th>请求路径</th><th>是否需求token头</th></tr></thead><tbody><tr><td>PUT</td><td>content/article</td><td>是</td></tr></tbody></table><p>请求体参数格式：</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>    <span class="token property">"categoryId"</span><span class="token operator">:</span><span class="token string">"1"</span><span class="token punctuation">,</span>    <span class="token property">"content"</span><span class="token operator">:</span><span class="token string">"![Snipaste_20220228_224837.png](https://sg-blog-oss.oss-cn-beijing.aliyuncs.com/2022/08/28/f3938a0368c540ee909ba7f7079a829a.png)\n\n# 十大\n## 时代的"</span><span class="token punctuation">,</span>    <span class="token property">"createBy"</span><span class="token operator">:</span><span class="token string">"1"</span><span class="token punctuation">,</span>    <span class="token property">"createTime"</span><span class="token operator">:</span><span class="token string">"2022-08-28 15:15:46"</span><span class="token punctuation">,</span>    <span class="token property">"delFlag"</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span>    <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"10"</span><span class="token punctuation">,</span>    <span class="token property">"isComment"</span><span class="token operator">:</span><span class="token string">"0"</span><span class="token punctuation">,</span>    <span class="token property">"isTop"</span><span class="token operator">:</span><span class="token string">"1"</span><span class="token punctuation">,</span>    <span class="token property">"status"</span><span class="token operator">:</span><span class="token string">"0"</span><span class="token punctuation">,</span>    <span class="token property">"summary"</span><span class="token operator">:</span><span class="token string">"啊实打实2"</span><span class="token punctuation">,</span>    <span class="token property">"tags"</span><span class="token operator">:</span><span class="token punctuation">[</span>        <span class="token string">"1"</span><span class="token punctuation">,</span>        <span class="token string">"4"</span><span class="token punctuation">,</span>        <span class="token string">"5"</span>    <span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token property">"thumbnail"</span><span class="token operator">:</span><span class="token string">"https://sg-blog-oss.oss-cn-beijing.aliyuncs.com/2022/08/28/7659aac2b74247fe8ebd9e054b916dbf.png"</span><span class="token punctuation">,</span>    <span class="token property">"title"</span><span class="token operator">:</span><span class="token string">"委屈饿驱蚊器"</span><span class="token punctuation">,</span>    <span class="token property">"updateBy"</span><span class="token operator">:</span><span class="token string">"1"</span><span class="token punctuation">,</span>    <span class="token property">"updateTime"</span><span class="token operator">:</span><span class="token string">"2022-08-28 15:15:46"</span><span class="token punctuation">,</span>    <span class="token property">"viewCount"</span><span class="token operator">:</span><span class="token string">"0"</span><span class="token punctuation">}</span></code></pre><p>响应格式：</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>    <span class="token property">"code"</span><span class="token operator">:</span><span class="token number">200</span><span class="token punctuation">,</span>    <span class="token property">"msg"</span><span class="token operator">:</span><span class="token string">"操作成功"</span><span class="token punctuation">}</span></code></pre><h3 id="5-13-删除文章"><a href="#5-13-删除文章" class="headerlink" title="5.13 删除文章"></a>5.13 删除文章</h3><h4 id="5-13-1-需求"><a href="#5-13-1-需求" class="headerlink" title="5.13.1 需求"></a>5.13.1 需求</h4><p>​点击文章后面的删除按钮可以删除该文章</p><p>​注意：是逻辑删除不是物理删除</p><h4 id="5-13-2-接口设计"><a href="#5-13-2-接口设计" class="headerlink" title="5.13.2 接口设计"></a>5.13.2 接口设计</h4><p>​</p><table><thead><tr><th>请求方式</th><th>请求路径</th><th>是否需求token头</th></tr></thead><tbody><tr><td>DELETE</td><td>content/article/{id}</td><td>是</td></tr></tbody></table><p>Path请求参数：</p><p>id：要删除的文章id</p><p>响应格式：</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>    <span class="token property">"code"</span><span class="token operator">:</span><span class="token number">200</span><span class="token punctuation">,</span>    <span class="token property">"msg"</span><span class="token operator">:</span><span class="token string">"操作成功"</span><span class="token punctuation">}</span></code></pre><h3 id="5-14-菜单列表"><a href="#5-14-菜单列表" class="headerlink" title="5.14 菜单列表"></a>5.14 菜单列表</h3><h4 id="5-14-1-需求"><a href="#5-14-1-需求" class="headerlink" title="5.14.1 需求"></a>5.14.1 需求</h4><p>​需要展示菜单列表，不需要分页。</p><p>​可以针对菜单名进行模糊查询</p><p>​也可以针对菜单的状态进行查询。</p><p>​菜单要按照父菜单id和orderNum进行排序</p><h4 id="5-14-2-接口设计"><a href="#5-14-2-接口设计" class="headerlink" title="5.14.2 接口设计"></a>5.14.2 接口设计</h4><table><thead><tr><th>请求方式</th><th>请求路径</th><th>是否需求token头</th></tr></thead><tbody><tr><td>GET</td><td>system/menu/list</td><td>是</td></tr></tbody></table><p>Query请求参数：</p><p>status  : 状态</p><p>menuName： 菜单名</p><p>响应格式：</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>    <span class="token property">"code"</span><span class="token operator">:</span><span class="token number">200</span><span class="token punctuation">,</span>    <span class="token property">"data"</span><span class="token operator">:</span><span class="token punctuation">[</span>        <span class="token punctuation">{</span>            <span class="token property">"component"</span><span class="token operator">:</span><span class="token string">"content/article/write/index"</span><span class="token punctuation">,</span>            <span class="token property">"icon"</span><span class="token operator">:</span><span class="token string">"build"</span><span class="token punctuation">,</span>            <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"2023"</span><span class="token punctuation">,</span>            <span class="token property">"isFrame"</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span>            <span class="token property">"menuName"</span><span class="token operator">:</span><span class="token string">"写博文"</span><span class="token punctuation">,</span>            <span class="token property">"menuType"</span><span class="token operator">:</span><span class="token string">"C"</span><span class="token punctuation">,</span>            <span class="token property">"orderNum"</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span>            <span class="token property">"parentId"</span><span class="token operator">:</span><span class="token string">"0"</span><span class="token punctuation">,</span>            <span class="token property">"path"</span><span class="token operator">:</span><span class="token string">"write"</span><span class="token punctuation">,</span>            <span class="token property">"perms"</span><span class="token operator">:</span><span class="token string">"content:article:writer"</span><span class="token punctuation">,</span>            <span class="token property">"remark"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">,</span>            <span class="token property">"status"</span><span class="token operator">:</span><span class="token string">"0"</span><span class="token punctuation">,</span>            <span class="token property">"visible"</span><span class="token operator">:</span><span class="token string">"0"</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">{</span>            <span class="token property">"icon"</span><span class="token operator">:</span><span class="token string">"system"</span><span class="token punctuation">,</span>            <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"1"</span><span class="token punctuation">,</span>            <span class="token property">"isFrame"</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span>            <span class="token property">"menuName"</span><span class="token operator">:</span><span class="token string">"系统管理"</span><span class="token punctuation">,</span>            <span class="token property">"menuType"</span><span class="token operator">:</span><span class="token string">"M"</span><span class="token punctuation">,</span>            <span class="token property">"orderNum"</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span>            <span class="token property">"parentId"</span><span class="token operator">:</span><span class="token string">"0"</span><span class="token punctuation">,</span>            <span class="token property">"path"</span><span class="token operator">:</span><span class="token string">"system"</span><span class="token punctuation">,</span>            <span class="token property">"perms"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">,</span>            <span class="token property">"remark"</span><span class="token operator">:</span><span class="token string">"系统管理目录"</span><span class="token punctuation">,</span>            <span class="token property">"status"</span><span class="token operator">:</span><span class="token string">"0"</span><span class="token punctuation">,</span>            <span class="token property">"visible"</span><span class="token operator">:</span><span class="token string">"0"</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">{</span>            <span class="token property">"icon"</span><span class="token operator">:</span><span class="token string">"table"</span><span class="token punctuation">,</span>            <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"2017"</span><span class="token punctuation">,</span>            <span class="token property">"isFrame"</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span>            <span class="token property">"menuName"</span><span class="token operator">:</span><span class="token string">"内容管理"</span><span class="token punctuation">,</span>            <span class="token property">"menuType"</span><span class="token operator">:</span><span class="token string">"M"</span><span class="token punctuation">,</span>            <span class="token property">"orderNum"</span><span class="token operator">:</span><span class="token number">4</span><span class="token punctuation">,</span>            <span class="token property">"parentId"</span><span class="token operator">:</span><span class="token string">"0"</span><span class="token punctuation">,</span>            <span class="token property">"path"</span><span class="token operator">:</span><span class="token string">"content"</span><span class="token punctuation">,</span>            <span class="token property">"remark"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">,</span>            <span class="token property">"status"</span><span class="token operator">:</span><span class="token string">"0"</span><span class="token punctuation">,</span>            <span class="token property">"visible"</span><span class="token operator">:</span><span class="token string">"0"</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">{</span>            <span class="token property">"component"</span><span class="token operator">:</span><span class="token string">"system/user/index"</span><span class="token punctuation">,</span>            <span class="token property">"icon"</span><span class="token operator">:</span><span class="token string">"user"</span><span class="token punctuation">,</span>            <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"100"</span><span class="token punctuation">,</span>            <span class="token property">"isFrame"</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span>            <span class="token property">"menuName"</span><span class="token operator">:</span><span class="token string">"用户管理"</span><span class="token punctuation">,</span>            <span class="token property">"menuType"</span><span class="token operator">:</span><span class="token string">"C"</span><span class="token punctuation">,</span>            <span class="token property">"orderNum"</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span>            <span class="token property">"parentId"</span><span class="token operator">:</span><span class="token string">"1"</span><span class="token punctuation">,</span>            <span class="token property">"path"</span><span class="token operator">:</span><span class="token string">"user"</span><span class="token punctuation">,</span>            <span class="token property">"perms"</span><span class="token operator">:</span><span class="token string">"system:user:list"</span><span class="token punctuation">,</span>            <span class="token property">"remark"</span><span class="token operator">:</span><span class="token string">"用户管理菜单"</span><span class="token punctuation">,</span>            <span class="token property">"status"</span><span class="token operator">:</span><span class="token string">"0"</span><span class="token punctuation">,</span>            <span class="token property">"visible"</span><span class="token operator">:</span><span class="token string">"0"</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">{</span>            <span class="token property">"component"</span><span class="token operator">:</span><span class="token string">"system/role/index"</span><span class="token punctuation">,</span>            <span class="token property">"icon"</span><span class="token operator">:</span><span class="token string">"peoples"</span><span class="token punctuation">,</span>            <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"101"</span><span class="token punctuation">,</span>            <span class="token property">"isFrame"</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span>            <span class="token property">"menuName"</span><span class="token operator">:</span><span class="token string">"角色管理"</span><span class="token punctuation">,</span>            <span class="token property">"menuType"</span><span class="token operator">:</span><span class="token string">"C"</span><span class="token punctuation">,</span>            <span class="token property">"orderNum"</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span>            <span class="token property">"parentId"</span><span class="token operator">:</span><span class="token string">"1"</span><span class="token punctuation">,</span>            <span class="token property">"path"</span><span class="token operator">:</span><span class="token string">"role"</span><span class="token punctuation">,</span>            <span class="token property">"perms"</span><span class="token operator">:</span><span class="token string">"system:role:list"</span><span class="token punctuation">,</span>            <span class="token property">"remark"</span><span class="token operator">:</span><span class="token string">"角色管理菜单"</span><span class="token punctuation">,</span>            <span class="token property">"status"</span><span class="token operator">:</span><span class="token string">"0"</span><span class="token punctuation">,</span>            <span class="token property">"visible"</span><span class="token operator">:</span><span class="token string">"0"</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">{</span>            <span class="token property">"component"</span><span class="token operator">:</span><span class="token string">"system/menu/index"</span><span class="token punctuation">,</span>            <span class="token property">"icon"</span><span class="token operator">:</span><span class="token string">"tree-table"</span><span class="token punctuation">,</span>            <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"102"</span><span class="token punctuation">,</span>            <span class="token property">"isFrame"</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span>            <span class="token property">"menuName"</span><span class="token operator">:</span><span class="token string">"菜单管理"</span><span class="token punctuation">,</span>            <span class="token property">"menuType"</span><span class="token operator">:</span><span class="token string">"C"</span><span class="token punctuation">,</span>            <span class="token property">"orderNum"</span><span class="token operator">:</span><span class="token number">3</span><span class="token punctuation">,</span>            <span class="token property">"parentId"</span><span class="token operator">:</span><span class="token string">"1"</span><span class="token punctuation">,</span>            <span class="token property">"path"</span><span class="token operator">:</span><span class="token string">"menu"</span><span class="token punctuation">,</span>            <span class="token property">"perms"</span><span class="token operator">:</span><span class="token string">"system:menu:list"</span><span class="token punctuation">,</span>            <span class="token property">"remark"</span><span class="token operator">:</span><span class="token string">"菜单管理菜单"</span><span class="token punctuation">,</span>            <span class="token property">"status"</span><span class="token operator">:</span><span class="token string">"0"</span><span class="token punctuation">,</span>            <span class="token property">"visible"</span><span class="token operator">:</span><span class="token string">"0"</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">{</span>            <span class="token property">"component"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">,</span>            <span class="token property">"icon"</span><span class="token operator">:</span><span class="token string">"#"</span><span class="token punctuation">,</span>            <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"1001"</span><span class="token punctuation">,</span>            <span class="token property">"isFrame"</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span>            <span class="token property">"menuName"</span><span class="token operator">:</span><span class="token string">"用户查询"</span><span class="token punctuation">,</span>            <span class="token property">"menuType"</span><span class="token operator">:</span><span class="token string">"F"</span><span class="token punctuation">,</span>            <span class="token property">"orderNum"</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span>            <span class="token property">"parentId"</span><span class="token operator">:</span><span class="token string">"100"</span><span class="token punctuation">,</span>            <span class="token property">"path"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">,</span>            <span class="token property">"perms"</span><span class="token operator">:</span><span class="token string">"system:user:query"</span><span class="token punctuation">,</span>            <span class="token property">"remark"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">,</span>            <span class="token property">"status"</span><span class="token operator">:</span><span class="token string">"0"</span><span class="token punctuation">,</span>            <span class="token property">"visible"</span><span class="token operator">:</span><span class="token string">"0"</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">{</span>            <span class="token property">"component"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">,</span>            <span class="token property">"icon"</span><span class="token operator">:</span><span class="token string">"#"</span><span class="token punctuation">,</span>            <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"1002"</span><span class="token punctuation">,</span>            <span class="token property">"isFrame"</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span>            <span class="token property">"menuName"</span><span class="token operator">:</span><span class="token string">"用户新增"</span><span class="token punctuation">,</span>            <span class="token property">"menuType"</span><span class="token operator">:</span><span class="token string">"F"</span><span class="token punctuation">,</span>            <span class="token property">"orderNum"</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span>            <span class="token property">"parentId"</span><span class="token operator">:</span><span class="token string">"100"</span><span class="token punctuation">,</span>            <span class="token property">"path"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">,</span>            <span class="token property">"perms"</span><span class="token operator">:</span><span class="token string">"system:user:add"</span><span class="token punctuation">,</span>            <span class="token property">"remark"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">,</span>            <span class="token property">"status"</span><span class="token operator">:</span><span class="token string">"0"</span><span class="token punctuation">,</span>            <span class="token property">"visible"</span><span class="token operator">:</span><span class="token string">"0"</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">{</span>            <span class="token property">"component"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">,</span>            <span class="token property">"icon"</span><span class="token operator">:</span><span class="token string">"#"</span><span class="token punctuation">,</span>            <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"1003"</span><span class="token punctuation">,</span>            <span class="token property">"isFrame"</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span>            <span class="token property">"menuName"</span><span class="token operator">:</span><span class="token string">"用户修改"</span><span class="token punctuation">,</span>            <span class="token property">"menuType"</span><span class="token operator">:</span><span class="token string">"F"</span><span class="token punctuation">,</span>            <span class="token property">"orderNum"</span><span class="token operator">:</span><span class="token number">3</span><span class="token punctuation">,</span>            <span class="token property">"parentId"</span><span class="token operator">:</span><span class="token string">"100"</span><span class="token punctuation">,</span>            <span class="token property">"path"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">,</span>            <span class="token property">"perms"</span><span class="token operator">:</span><span class="token string">"system:user:edit"</span><span class="token punctuation">,</span>            <span class="token property">"remark"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">,</span>            <span class="token property">"status"</span><span class="token operator">:</span><span class="token string">"0"</span><span class="token punctuation">,</span>            <span class="token property">"visible"</span><span class="token operator">:</span><span class="token string">"0"</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">{</span>            <span class="token property">"component"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">,</span>            <span class="token property">"icon"</span><span class="token operator">:</span><span class="token string">"#"</span><span class="token punctuation">,</span>            <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"1004"</span><span class="token punctuation">,</span>            <span class="token property">"isFrame"</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span>            <span class="token property">"menuName"</span><span class="token operator">:</span><span class="token string">"用户删除"</span><span class="token punctuation">,</span>            <span class="token property">"menuType"</span><span class="token operator">:</span><span class="token string">"F"</span><span class="token punctuation">,</span>            <span class="token property">"orderNum"</span><span class="token operator">:</span><span class="token number">4</span><span class="token punctuation">,</span>            <span class="token property">"parentId"</span><span class="token operator">:</span><span class="token string">"100"</span><span class="token punctuation">,</span>            <span class="token property">"path"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">,</span>            <span class="token property">"perms"</span><span class="token operator">:</span><span class="token string">"system:user:remove"</span><span class="token punctuation">,</span>            <span class="token property">"remark"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">,</span>            <span class="token property">"status"</span><span class="token operator">:</span><span class="token string">"0"</span><span class="token punctuation">,</span>            <span class="token property">"visible"</span><span class="token operator">:</span><span class="token string">"0"</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">{</span>            <span class="token property">"component"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">,</span>            <span class="token property">"icon"</span><span class="token operator">:</span><span class="token string">"#"</span><span class="token punctuation">,</span>            <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"1005"</span><span class="token punctuation">,</span>            <span class="token property">"isFrame"</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span>            <span class="token property">"menuName"</span><span class="token operator">:</span><span class="token string">"用户导出"</span><span class="token punctuation">,</span>            <span class="token property">"menuType"</span><span class="token operator">:</span><span class="token string">"F"</span><span class="token punctuation">,</span>            <span class="token property">"orderNum"</span><span class="token operator">:</span><span class="token number">5</span><span class="token punctuation">,</span>            <span class="token property">"parentId"</span><span class="token operator">:</span><span class="token string">"100"</span><span class="token punctuation">,</span>            <span class="token property">"path"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">,</span>            <span class="token property">"perms"</span><span class="token operator">:</span><span class="token string">"system:user:export"</span><span class="token punctuation">,</span>            <span class="token property">"remark"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">,</span>            <span class="token property">"status"</span><span class="token operator">:</span><span class="token string">"0"</span><span class="token punctuation">,</span>            <span class="token property">"visible"</span><span class="token operator">:</span><span class="token string">"0"</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">{</span>            <span class="token property">"component"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">,</span>            <span class="token property">"icon"</span><span class="token operator">:</span><span class="token string">"#"</span><span class="token punctuation">,</span>            <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"1006"</span><span class="token punctuation">,</span>            <span class="token property">"isFrame"</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span>            <span class="token property">"menuName"</span><span class="token operator">:</span><span class="token string">"用户导入"</span><span class="token punctuation">,</span>            <span class="token property">"menuType"</span><span class="token operator">:</span><span class="token string">"F"</span><span class="token punctuation">,</span>            <span class="token property">"orderNum"</span><span class="token operator">:</span><span class="token number">6</span><span class="token punctuation">,</span>            <span class="token property">"parentId"</span><span class="token operator">:</span><span class="token string">"100"</span><span class="token punctuation">,</span>            <span class="token property">"path"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">,</span>            <span class="token property">"perms"</span><span class="token operator">:</span><span class="token string">"system:user:import"</span><span class="token punctuation">,</span>            <span class="token property">"remark"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">,</span>            <span class="token property">"status"</span><span class="token operator">:</span><span class="token string">"0"</span><span class="token punctuation">,</span>            <span class="token property">"visible"</span><span class="token operator">:</span><span class="token string">"0"</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">{</span>            <span class="token property">"component"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">,</span>            <span class="token property">"icon"</span><span class="token operator">:</span><span class="token string">"#"</span><span class="token punctuation">,</span>            <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"1007"</span><span class="token punctuation">,</span>            <span class="token property">"isFrame"</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span>            <span class="token property">"menuName"</span><span class="token operator">:</span><span class="token string">"重置密码"</span><span class="token punctuation">,</span>            <span class="token property">"menuType"</span><span class="token operator">:</span><span class="token string">"F"</span><span class="token punctuation">,</span>            <span class="token property">"orderNum"</span><span class="token operator">:</span><span class="token number">7</span><span class="token punctuation">,</span>            <span class="token property">"parentId"</span><span class="token operator">:</span><span class="token string">"100"</span><span class="token punctuation">,</span>            <span class="token property">"path"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">,</span>            <span class="token property">"perms"</span><span class="token operator">:</span><span class="token string">"system:user:resetPwd"</span><span class="token punctuation">,</span>            <span class="token property">"remark"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">,</span>            <span class="token property">"status"</span><span class="token operator">:</span><span class="token string">"0"</span><span class="token punctuation">,</span>            <span class="token property">"visible"</span><span class="token operator">:</span><span class="token string">"0"</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">{</span>            <span class="token property">"component"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">,</span>            <span class="token property">"icon"</span><span class="token operator">:</span><span class="token string">"#"</span><span class="token punctuation">,</span>            <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"1008"</span><span class="token punctuation">,</span>            <span class="token property">"isFrame"</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span>            <span class="token property">"menuName"</span><span class="token operator">:</span><span class="token string">"角色查询"</span><span class="token punctuation">,</span>            <span class="token property">"menuType"</span><span class="token operator">:</span><span class="token string">"F"</span><span class="token punctuation">,</span>            <span class="token property">"orderNum"</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span>            <span class="token property">"parentId"</span><span class="token operator">:</span><span class="token string">"101"</span><span class="token punctuation">,</span>            <span class="token property">"path"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">,</span>            <span class="token property">"perms"</span><span class="token operator">:</span><span class="token string">"system:role:query"</span><span class="token punctuation">,</span>            <span class="token property">"remark"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">,</span>            <span class="token property">"status"</span><span class="token operator">:</span><span class="token string">"0"</span><span class="token punctuation">,</span>            <span class="token property">"visible"</span><span class="token operator">:</span><span class="token string">"0"</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">{</span>            <span class="token property">"component"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">,</span>            <span class="token property">"icon"</span><span class="token operator">:</span><span class="token string">"#"</span><span class="token punctuation">,</span>            <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"1009"</span><span class="token punctuation">,</span>            <span class="token property">"isFrame"</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span>            <span class="token property">"menuName"</span><span class="token operator">:</span><span class="token string">"角色新增"</span><span class="token punctuation">,</span>            <span class="token property">"menuType"</span><span class="token operator">:</span><span class="token string">"F"</span><span class="token punctuation">,</span>            <span class="token property">"orderNum"</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span>            <span class="token property">"parentId"</span><span class="token operator">:</span><span class="token string">"101"</span><span class="token punctuation">,</span>            <span class="token property">"path"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">,</span>            <span class="token property">"perms"</span><span class="token operator">:</span><span class="token string">"system:role:add"</span><span class="token punctuation">,</span>            <span class="token property">"remark"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">,</span>            <span class="token property">"status"</span><span class="token operator">:</span><span class="token string">"0"</span><span class="token punctuation">,</span>            <span class="token property">"visible"</span><span class="token operator">:</span><span class="token string">"0"</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">{</span>            <span class="token property">"component"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">,</span>            <span class="token property">"icon"</span><span class="token operator">:</span><span class="token string">"#"</span><span class="token punctuation">,</span>            <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"1010"</span><span class="token punctuation">,</span>            <span class="token property">"isFrame"</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span>            <span class="token property">"menuName"</span><span class="token operator">:</span><span class="token string">"角色修改"</span><span class="token punctuation">,</span>            <span class="token property">"menuType"</span><span class="token operator">:</span><span class="token string">"F"</span><span class="token punctuation">,</span>            <span class="token property">"orderNum"</span><span class="token operator">:</span><span class="token number">3</span><span class="token punctuation">,</span>            <span class="token property">"parentId"</span><span class="token operator">:</span><span class="token string">"101"</span><span class="token punctuation">,</span>            <span class="token property">"path"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">,</span>            <span class="token property">"perms"</span><span class="token operator">:</span><span class="token string">"system:role:edit"</span><span class="token punctuation">,</span>            <span class="token property">"remark"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">,</span>            <span class="token property">"status"</span><span class="token operator">:</span><span class="token string">"0"</span><span class="token punctuation">,</span>            <span class="token property">"visible"</span><span class="token operator">:</span><span class="token string">"0"</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">{</span>            <span class="token property">"component"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">,</span>            <span class="token property">"icon"</span><span class="token operator">:</span><span class="token string">"#"</span><span class="token punctuation">,</span>            <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"1011"</span><span class="token punctuation">,</span>            <span class="token property">"isFrame"</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span>            <span class="token property">"menuName"</span><span class="token operator">:</span><span class="token string">"角色删除"</span><span class="token punctuation">,</span>            <span class="token property">"menuType"</span><span class="token operator">:</span><span class="token string">"F"</span><span class="token punctuation">,</span>            <span class="token property">"orderNum"</span><span class="token operator">:</span><span class="token number">4</span><span class="token punctuation">,</span>            <span class="token property">"parentId"</span><span class="token operator">:</span><span class="token string">"101"</span><span class="token punctuation">,</span>            <span class="token property">"path"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">,</span>            <span class="token property">"perms"</span><span class="token operator">:</span><span class="token string">"system:role:remove"</span><span class="token punctuation">,</span>            <span class="token property">"remark"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">,</span>            <span class="token property">"status"</span><span class="token operator">:</span><span class="token string">"0"</span><span class="token punctuation">,</span>            <span class="token property">"visible"</span><span class="token operator">:</span><span class="token string">"0"</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">{</span>            <span class="token property">"component"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">,</span>            <span class="token property">"icon"</span><span class="token operator">:</span><span class="token string">"#"</span><span class="token punctuation">,</span>            <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"1012"</span><span class="token punctuation">,</span>            <span class="token property">"isFrame"</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span>            <span class="token property">"menuName"</span><span class="token operator">:</span><span class="token string">"角色导出"</span><span class="token punctuation">,</span>            <span class="token property">"menuType"</span><span class="token operator">:</span><span class="token string">"F"</span><span class="token punctuation">,</span>            <span class="token property">"orderNum"</span><span class="token operator">:</span><span class="token number">5</span><span class="token punctuation">,</span>            <span class="token property">"parentId"</span><span class="token operator">:</span><span class="token string">"101"</span><span class="token punctuation">,</span>            <span class="token property">"path"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">,</span>            <span class="token property">"perms"</span><span class="token operator">:</span><span class="token string">"system:role:export"</span><span class="token punctuation">,</span>            <span class="token property">"remark"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">,</span>            <span class="token property">"status"</span><span class="token operator">:</span><span class="token string">"0"</span><span class="token punctuation">,</span>            <span class="token property">"visible"</span><span class="token operator">:</span><span class="token string">"0"</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">{</span>            <span class="token property">"component"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">,</span>            <span class="token property">"icon"</span><span class="token operator">:</span><span class="token string">"#"</span><span class="token punctuation">,</span>            <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"1013"</span><span class="token punctuation">,</span>            <span class="token property">"isFrame"</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span>            <span class="token property">"menuName"</span><span class="token operator">:</span><span class="token string">"菜单查询"</span><span class="token punctuation">,</span>            <span class="token property">"menuType"</span><span class="token operator">:</span><span class="token string">"F"</span><span class="token punctuation">,</span>            <span class="token property">"orderNum"</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span>            <span class="token property">"parentId"</span><span class="token operator">:</span><span class="token string">"102"</span><span class="token punctuation">,</span>            <span class="token property">"path"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">,</span>            <span class="token property">"perms"</span><span class="token operator">:</span><span class="token string">"system:menu:query"</span><span class="token punctuation">,</span>            <span class="token property">"remark"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">,</span>            <span class="token property">"status"</span><span class="token operator">:</span><span class="token string">"0"</span><span class="token punctuation">,</span>            <span class="token property">"visible"</span><span class="token operator">:</span><span class="token string">"0"</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">{</span>            <span class="token property">"component"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">,</span>            <span class="token property">"icon"</span><span class="token operator">:</span><span class="token string">"#"</span><span class="token punctuation">,</span>            <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"1014"</span><span class="token punctuation">,</span>            <span class="token property">"isFrame"</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span>            <span class="token property">"menuName"</span><span class="token operator">:</span><span class="token string">"菜单新增"</span><span class="token punctuation">,</span>            <span class="token property">"menuType"</span><span class="token operator">:</span><span class="token string">"F"</span><span class="token punctuation">,</span>            <span class="token property">"orderNum"</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span>            <span class="token property">"parentId"</span><span class="token operator">:</span><span class="token string">"102"</span><span class="token punctuation">,</span>            <span class="token property">"path"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">,</span>            <span class="token property">"perms"</span><span class="token operator">:</span><span class="token string">"system:menu:add"</span><span class="token punctuation">,</span>            <span class="token property">"remark"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">,</span>            <span class="token property">"status"</span><span class="token operator">:</span><span class="token string">"0"</span><span class="token punctuation">,</span>            <span class="token property">"visible"</span><span class="token operator">:</span><span class="token string">"0"</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">{</span>            <span class="token property">"component"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">,</span>            <span class="token property">"icon"</span><span class="token operator">:</span><span class="token string">"#"</span><span class="token punctuation">,</span>            <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"1015"</span><span class="token punctuation">,</span>            <span class="token property">"isFrame"</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span>            <span class="token property">"menuName"</span><span class="token operator">:</span><span class="token string">"菜单修改"</span><span class="token punctuation">,</span>            <span class="token property">"menuType"</span><span class="token operator">:</span><span class="token string">"F"</span><span class="token punctuation">,</span>            <span class="token property">"orderNum"</span><span class="token operator">:</span><span class="token number">3</span><span class="token punctuation">,</span>            <span class="token property">"parentId"</span><span class="token operator">:</span><span class="token string">"102"</span><span class="token punctuation">,</span>            <span class="token property">"path"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">,</span>            <span class="token property">"perms"</span><span class="token operator">:</span><span class="token string">"system:menu:edit"</span><span class="token punctuation">,</span>            <span class="token property">"remark"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">,</span>            <span class="token property">"status"</span><span class="token operator">:</span><span class="token string">"0"</span><span class="token punctuation">,</span>            <span class="token property">"visible"</span><span class="token operator">:</span><span class="token string">"0"</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">{</span>            <span class="token property">"component"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">,</span>            <span class="token property">"icon"</span><span class="token operator">:</span><span class="token string">"#"</span><span class="token punctuation">,</span>            <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"1016"</span><span class="token punctuation">,</span>            <span class="token property">"isFrame"</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span>            <span class="token property">"menuName"</span><span class="token operator">:</span><span class="token string">"菜单删除"</span><span class="token punctuation">,</span>            <span class="token property">"menuType"</span><span class="token operator">:</span><span class="token string">"F"</span><span class="token punctuation">,</span>            <span class="token property">"orderNum"</span><span class="token operator">:</span><span class="token number">4</span><span class="token punctuation">,</span>            <span class="token property">"parentId"</span><span class="token operator">:</span><span class="token string">"102"</span><span class="token punctuation">,</span>            <span class="token property">"path"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">,</span>            <span class="token property">"perms"</span><span class="token operator">:</span><span class="token string">"system:menu:remove"</span><span class="token punctuation">,</span>            <span class="token property">"remark"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">,</span>            <span class="token property">"status"</span><span class="token operator">:</span><span class="token string">"0"</span><span class="token punctuation">,</span>            <span class="token property">"visible"</span><span class="token operator">:</span><span class="token string">"0"</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">{</span>            <span class="token property">"component"</span><span class="token operator">:</span><span class="token string">"content/article/index"</span><span class="token punctuation">,</span>            <span class="token property">"icon"</span><span class="token operator">:</span><span class="token string">"build"</span><span class="token punctuation">,</span>            <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"2019"</span><span class="token punctuation">,</span>            <span class="token property">"isFrame"</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span>            <span class="token property">"menuName"</span><span class="token operator">:</span><span class="token string">"文章管理"</span><span class="token punctuation">,</span>            <span class="token property">"menuType"</span><span class="token operator">:</span><span class="token string">"C"</span><span class="token punctuation">,</span>            <span class="token property">"orderNum"</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span>            <span class="token property">"parentId"</span><span class="token operator">:</span><span class="token string">"2017"</span><span class="token punctuation">,</span>            <span class="token property">"path"</span><span class="token operator">:</span><span class="token string">"article"</span><span class="token punctuation">,</span>            <span class="token property">"perms"</span><span class="token operator">:</span><span class="token string">"content:article:list"</span><span class="token punctuation">,</span>            <span class="token property">"remark"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">,</span>            <span class="token property">"status"</span><span class="token operator">:</span><span class="token string">"0"</span><span class="token punctuation">,</span>            <span class="token property">"visible"</span><span class="token operator">:</span><span class="token string">"0"</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">{</span>            <span class="token property">"component"</span><span class="token operator">:</span><span class="token string">"content/category/index"</span><span class="token punctuation">,</span>            <span class="token property">"icon"</span><span class="token operator">:</span><span class="token string">"example"</span><span class="token punctuation">,</span>            <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"2018"</span><span class="token punctuation">,</span>            <span class="token property">"isFrame"</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span>            <span class="token property">"menuName"</span><span class="token operator">:</span><span class="token string">"分类管理"</span><span class="token punctuation">,</span>            <span class="token property">"menuType"</span><span class="token operator">:</span><span class="token string">"C"</span><span class="token punctuation">,</span>            <span class="token property">"orderNum"</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span>            <span class="token property">"parentId"</span><span class="token operator">:</span><span class="token string">"2017"</span><span class="token punctuation">,</span>            <span class="token property">"path"</span><span class="token operator">:</span><span class="token string">"category"</span><span class="token punctuation">,</span>            <span class="token property">"perms"</span><span class="token operator">:</span><span class="token string">"content:category:list"</span><span class="token punctuation">,</span>            <span class="token property">"remark"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">,</span>            <span class="token property">"status"</span><span class="token operator">:</span><span class="token string">"0"</span><span class="token punctuation">,</span>            <span class="token property">"visible"</span><span class="token operator">:</span><span class="token string">"0"</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">{</span>            <span class="token property">"component"</span><span class="token operator">:</span><span class="token string">"content/link/index"</span><span class="token punctuation">,</span>            <span class="token property">"icon"</span><span class="token operator">:</span><span class="token string">"404"</span><span class="token punctuation">,</span>            <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"2022"</span><span class="token punctuation">,</span>            <span class="token property">"isFrame"</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span>            <span class="token property">"menuName"</span><span class="token operator">:</span><span class="token string">"友链管理"</span><span class="token punctuation">,</span>            <span class="token property">"menuType"</span><span class="token operator">:</span><span class="token string">"C"</span><span class="token punctuation">,</span>            <span class="token property">"orderNum"</span><span class="token operator">:</span><span class="token number">4</span><span class="token punctuation">,</span>            <span class="token property">"parentId"</span><span class="token operator">:</span><span class="token string">"2017"</span><span class="token punctuation">,</span>            <span class="token property">"path"</span><span class="token operator">:</span><span class="token string">"link"</span><span class="token punctuation">,</span>            <span class="token property">"perms"</span><span class="token operator">:</span><span class="token string">"content:link:list"</span><span class="token punctuation">,</span>            <span class="token property">"remark"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">,</span>            <span class="token property">"status"</span><span class="token operator">:</span><span class="token string">"0"</span><span class="token punctuation">,</span>            <span class="token property">"visible"</span><span class="token operator">:</span><span class="token string">"0"</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">{</span>            <span class="token property">"component"</span><span class="token operator">:</span><span class="token string">"content/tag/index"</span><span class="token punctuation">,</span>            <span class="token property">"icon"</span><span class="token operator">:</span><span class="token string">"button"</span><span class="token punctuation">,</span>            <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"2021"</span><span class="token punctuation">,</span>            <span class="token property">"isFrame"</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span>            <span class="token property">"menuName"</span><span class="token operator">:</span><span class="token string">"标签管理"</span><span class="token punctuation">,</span>            <span class="token property">"menuType"</span><span class="token operator">:</span><span class="token string">"C"</span><span class="token punctuation">,</span>            <span class="token property">"orderNum"</span><span class="token operator">:</span><span class="token number">6</span><span class="token punctuation">,</span>            <span class="token property">"parentId"</span><span class="token operator">:</span><span class="token string">"2017"</span><span class="token punctuation">,</span>            <span class="token property">"path"</span><span class="token operator">:</span><span class="token string">"tag"</span><span class="token punctuation">,</span>            <span class="token property">"perms"</span><span class="token operator">:</span><span class="token string">"content:tag:index"</span><span class="token punctuation">,</span>            <span class="token property">"remark"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">,</span>            <span class="token property">"status"</span><span class="token operator">:</span><span class="token string">"0"</span><span class="token punctuation">,</span>            <span class="token property">"visible"</span><span class="token operator">:</span><span class="token string">"0"</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">{</span>            <span class="token property">"icon"</span><span class="token operator">:</span><span class="token string">"#"</span><span class="token punctuation">,</span>            <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"2028"</span><span class="token punctuation">,</span>            <span class="token property">"isFrame"</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span>            <span class="token property">"menuName"</span><span class="token operator">:</span><span class="token string">"导出分类"</span><span class="token punctuation">,</span>            <span class="token property">"menuType"</span><span class="token operator">:</span><span class="token string">"F"</span><span class="token punctuation">,</span>            <span class="token property">"orderNum"</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span>            <span class="token property">"parentId"</span><span class="token operator">:</span><span class="token string">"2018"</span><span class="token punctuation">,</span>            <span class="token property">"path"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">,</span>            <span class="token property">"perms"</span><span class="token operator">:</span><span class="token string">"content:category:export"</span><span class="token punctuation">,</span>            <span class="token property">"remark"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">,</span>            <span class="token property">"status"</span><span class="token operator">:</span><span class="token string">"0"</span><span class="token punctuation">,</span>            <span class="token property">"visible"</span><span class="token operator">:</span><span class="token string">"0"</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">{</span>            <span class="token property">"icon"</span><span class="token operator">:</span><span class="token string">"#"</span><span class="token punctuation">,</span>            <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"2024"</span><span class="token punctuation">,</span>            <span class="token property">"isFrame"</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span>            <span class="token property">"menuName"</span><span class="token operator">:</span><span class="token string">"友链新增"</span><span class="token punctuation">,</span>            <span class="token property">"menuType"</span><span class="token operator">:</span><span class="token string">"F"</span><span class="token punctuation">,</span>            <span class="token property">"orderNum"</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span>            <span class="token property">"parentId"</span><span class="token operator">:</span><span class="token string">"2022"</span><span class="token punctuation">,</span>            <span class="token property">"path"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">,</span>            <span class="token property">"perms"</span><span class="token operator">:</span><span class="token string">"content:link:add"</span><span class="token punctuation">,</span>            <span class="token property">"remark"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">,</span>            <span class="token property">"status"</span><span class="token operator">:</span><span class="token string">"0"</span><span class="token punctuation">,</span>            <span class="token property">"visible"</span><span class="token operator">:</span><span class="token string">"0"</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">{</span>            <span class="token property">"icon"</span><span class="token operator">:</span><span class="token string">"#"</span><span class="token punctuation">,</span>            <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"2025"</span><span class="token punctuation">,</span>            <span class="token property">"isFrame"</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span>            <span class="token property">"menuName"</span><span class="token operator">:</span><span class="token string">"友链修改"</span><span class="token punctuation">,</span>            <span class="token property">"menuType"</span><span class="token operator">:</span><span class="token string">"F"</span><span class="token punctuation">,</span>            <span class="token property">"orderNum"</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span>            <span class="token property">"parentId"</span><span class="token operator">:</span><span class="token string">"2022"</span><span class="token punctuation">,</span>            <span class="token property">"path"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">,</span>            <span class="token property">"perms"</span><span class="token operator">:</span><span class="token string">"content:link:edit"</span><span class="token punctuation">,</span>            <span class="token property">"remark"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">,</span>            <span class="token property">"status"</span><span class="token operator">:</span><span class="token string">"0"</span><span class="token punctuation">,</span>            <span class="token property">"visible"</span><span class="token operator">:</span><span class="token string">"0"</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">{</span>            <span class="token property">"icon"</span><span class="token operator">:</span><span class="token string">"#"</span><span class="token punctuation">,</span>            <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"2026"</span><span class="token punctuation">,</span>            <span class="token property">"isFrame"</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span>            <span class="token property">"menuName"</span><span class="token operator">:</span><span class="token string">"友链删除"</span><span class="token punctuation">,</span>            <span class="token property">"menuType"</span><span class="token operator">:</span><span class="token string">"F"</span><span class="token punctuation">,</span>            <span class="token property">"orderNum"</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span>            <span class="token property">"parentId"</span><span class="token operator">:</span><span class="token string">"2022"</span><span class="token punctuation">,</span>            <span class="token property">"path"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">,</span>            <span class="token property">"perms"</span><span class="token operator">:</span><span class="token string">"content:link:remove"</span><span class="token punctuation">,</span>            <span class="token property">"remark"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">,</span>            <span class="token property">"status"</span><span class="token operator">:</span><span class="token string">"0"</span><span class="token punctuation">,</span>            <span class="token property">"visible"</span><span class="token operator">:</span><span class="token string">"0"</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">{</span>            <span class="token property">"icon"</span><span class="token operator">:</span><span class="token string">"#"</span><span class="token punctuation">,</span>            <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"2027"</span><span class="token punctuation">,</span>            <span class="token property">"isFrame"</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span>            <span class="token property">"menuName"</span><span class="token operator">:</span><span class="token string">"友链查询"</span><span class="token punctuation">,</span>            <span class="token property">"menuType"</span><span class="token operator">:</span><span class="token string">"F"</span><span class="token punctuation">,</span>            <span class="token property">"orderNum"</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span>            <span class="token property">"parentId"</span><span class="token operator">:</span><span class="token string">"2022"</span><span class="token punctuation">,</span>            <span class="token property">"path"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">,</span>            <span class="token property">"perms"</span><span class="token operator">:</span><span class="token string">"content:link:query"</span><span class="token punctuation">,</span>            <span class="token property">"remark"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">,</span>            <span class="token property">"status"</span><span class="token operator">:</span><span class="token string">"0"</span><span class="token punctuation">,</span>            <span class="token property">"visible"</span><span class="token operator">:</span><span class="token string">"0"</span>        <span class="token punctuation">}</span>    <span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token property">"msg"</span><span class="token operator">:</span><span class="token string">"操作成功"</span><span class="token punctuation">}</span></code></pre><h3 id="5-15-新增菜单"><a href="#5-15-新增菜单" class="headerlink" title="5.15 新增菜单"></a>5.15 新增菜单</h3><h4 id="5-15-1-需求"><a href="#5-15-1-需求" class="headerlink" title="5.15.1 需求"></a>5.15.1 需求</h4><p>​可以新增菜单</p><h4 id="5-15-2-接口设计"><a href="#5-15-2-接口设计" class="headerlink" title="5.15.2 接口设计"></a>5.15.2 接口设计</h4><p>​</p><table><thead><tr><th>请求方式</th><th>请求路径</th><th>是否需求token头</th></tr></thead><tbody><tr><td>POST</td><td>content/article</td><td>是</td></tr></tbody></table><p>请求体参数：</p><p>​Menu类对应的json格式</p><p>响应格式：</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>    <span class="token property">"code"</span><span class="token operator">:</span><span class="token number">200</span><span class="token punctuation">,</span>    <span class="token property">"msg"</span><span class="token operator">:</span><span class="token string">"操作成功"</span><span class="token punctuation">}</span></code></pre><h3 id="5-16-修改菜单"><a href="#5-16-修改菜单" class="headerlink" title="5.16 修改菜单"></a>5.16 修改菜单</h3><h4 id="5-16-1-需求"><a href="#5-16-1-需求" class="headerlink" title="5.16.1 需求"></a>5.16.1 需求</h4><p>​能够修改菜单，但是修改的时候不能把父菜单设置为当前菜单，如果设置了需要给出相应的提示。并且修改失败。</p><h4 id="5-16-2-接口设计"><a href="#5-16-2-接口设计" class="headerlink" title="5.16.2 接口设计"></a>5.16.2 接口设计</h4><h5 id="5-16-2-1-根据id查询菜单数据"><a href="#5-16-2-1-根据id查询菜单数据" class="headerlink" title="5.16.2.1 根据id查询菜单数据"></a>5.16.2.1 根据id查询菜单数据</h5><table><thead><tr><th>请求方式</th><th>请求路径</th><th>是否需求token头</th></tr></thead><tbody><tr><td>Get</td><td>system/menu/{id}</td><td>是</td></tr></tbody></table><p>Path格式请求参数：</p><p>id: 菜单id</p><p>响应格式：</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>    <span class="token property">"code"</span><span class="token operator">:</span><span class="token number">200</span><span class="token punctuation">,</span>    <span class="token property">"data"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"icon"</span><span class="token operator">:</span><span class="token string">"table"</span><span class="token punctuation">,</span>        <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"2017"</span><span class="token punctuation">,</span>        <span class="token property">"menuName"</span><span class="token operator">:</span><span class="token string">"内容管理"</span><span class="token punctuation">,</span>        <span class="token property">"menuType"</span><span class="token operator">:</span><span class="token string">"M"</span><span class="token punctuation">,</span>        <span class="token property">"orderNum"</span><span class="token operator">:</span><span class="token string">"4"</span><span class="token punctuation">,</span>        <span class="token property">"parentId"</span><span class="token operator">:</span><span class="token string">"0"</span><span class="token punctuation">,</span>        <span class="token property">"path"</span><span class="token operator">:</span><span class="token string">"content"</span><span class="token punctuation">,</span>        <span class="token property">"remark"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">,</span>        <span class="token property">"status"</span><span class="token operator">:</span><span class="token string">"0"</span><span class="token punctuation">,</span>        <span class="token property">"visible"</span><span class="token operator">:</span><span class="token string">"0"</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"msg"</span><span class="token operator">:</span><span class="token string">"操作成功"</span><span class="token punctuation">}</span></code></pre><h5 id="5-16-2-2-更新菜单"><a href="#5-16-2-2-更新菜单" class="headerlink" title="5.16.2.2 更新菜单"></a>5.16.2.2 更新菜单</h5><table><thead><tr><th>请求方式</th><th>请求路径</th><th>是否需求token头</th></tr></thead><tbody><tr><td>PUT</td><td>system/menu</td><td>是</td></tr></tbody></table><p>请求体参数：</p><p>​Menu类对应的json格式</p><p>响应格式：</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>    <span class="token property">"code"</span><span class="token operator">:</span><span class="token number">200</span><span class="token punctuation">,</span>    <span class="token property">"msg"</span><span class="token operator">:</span><span class="token string">"操作成功"</span><span class="token punctuation">}</span></code></pre><p>如果把父菜单设置为当前菜单:</p><pre class=" language-java"><code class="language-java"><span class="token punctuation">{</span>    <span class="token string">"code"</span><span class="token operator">:</span><span class="token number">500</span><span class="token punctuation">,</span>    <span class="token string">"msg"</span><span class="token operator">:</span><span class="token string">"修改菜单'写博文'失败，上级菜单不能选择自己"</span><span class="token punctuation">}</span></code></pre><h3 id="5-17-删除菜单"><a href="#5-17-删除菜单" class="headerlink" title="5.17 删除菜单"></a>5.17 删除菜单</h3><h4 id="5-17-1-需求"><a href="#5-17-1-需求" class="headerlink" title="5.17.1 需求"></a>5.17.1 需求</h4><p>​能够删除菜单，但是如果要删除的菜单有子菜单则提示：存在子菜单不允许删除 并且删除失败。</p><h4 id="5-17-2-接口设计"><a href="#5-17-2-接口设计" class="headerlink" title="5.17.2 接口设计"></a>5.17.2 接口设计</h4><table><thead><tr><th>请求方式</th><th>请求路径</th><th>是否需求token头</th></tr></thead><tbody><tr><td>DELETE</td><td>content/article/{menuId}</td><td>是</td></tr></tbody></table><p>Path参数：</p><p>menuId：要删除菜单的id</p><p>响应格式：</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>    <span class="token property">"code"</span><span class="token operator">:</span><span class="token number">200</span><span class="token punctuation">,</span>    <span class="token property">"msg"</span><span class="token operator">:</span><span class="token string">"操作成功"</span><span class="token punctuation">}</span></code></pre><p>如果要删除的菜单有子菜单则</p><pre class=" language-java"><code class="language-java"><span class="token punctuation">{</span>    <span class="token string">"code"</span><span class="token operator">:</span><span class="token number">500</span><span class="token punctuation">,</span>    <span class="token string">"msg"</span><span class="token operator">:</span><span class="token string">"存在子菜单不允许删除"</span><span class="token punctuation">}</span></code></pre><h3 id="5-18-角色列表"><a href="#5-18-角色列表" class="headerlink" title="5.18 角色列表"></a>5.18 角色列表</h3><h4 id="5-18-1-需求"><a href="#5-18-1-需求" class="headerlink" title="5.18.1 需求"></a>5.18.1 需求</h4><p>​需要有角色列表分页查询的功能。</p><p>​要求能够针对角色名称进行模糊查询。</p><p>​要求能够针对状态进行查询。</p><p>​要求按照role_sort进行升序排列。</p><h4 id="5-18-2-接口设计"><a href="#5-18-2-接口设计" class="headerlink" title="5.18.2 接口设计"></a>5.18.2 接口设计</h4><table><thead><tr><th>请求方式</th><th>请求路径</th><th>是否需求token头</th></tr></thead><tbody><tr><td>GET</td><td>system/role/list</td><td>是</td></tr></tbody></table><p>Query格式请求参数：</p><p>pageNum: 页码</p><p>pageSize: 每页条数</p><p>roleName：角色名称</p><p>status：状态</p><p>响应格式：</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>    <span class="token property">"code"</span><span class="token operator">:</span><span class="token number">200</span><span class="token punctuation">,</span>    <span class="token property">"data"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"rows"</span><span class="token operator">:</span><span class="token punctuation">[</span>            <span class="token punctuation">{</span>                <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"12"</span><span class="token punctuation">,</span>                <span class="token property">"roleKey"</span><span class="token operator">:</span><span class="token string">"link"</span><span class="token punctuation">,</span>                <span class="token property">"roleName"</span><span class="token operator">:</span><span class="token string">"友链审核员"</span><span class="token punctuation">,</span>                <span class="token property">"roleSort"</span><span class="token operator">:</span><span class="token string">"1"</span><span class="token punctuation">,</span>                <span class="token property">"status"</span><span class="token operator">:</span><span class="token string">"0"</span>            <span class="token punctuation">}</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token property">"total"</span><span class="token operator">:</span><span class="token string">"1"</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"msg"</span><span class="token operator">:</span><span class="token string">"操作成功"</span><span class="token punctuation">}</span></code></pre><h3 id="5-19-改变角色状态"><a href="#5-19-改变角色状态" class="headerlink" title="5.19 改变角色状态"></a>5.19 改变角色状态</h3><h4 id="5-19-1-需求"><a href="#5-19-1-需求" class="headerlink" title="5.19.1 需求"></a>5.19.1 需求</h4><p>​要求能够修改角色的停启用状态</p><h4 id="5-19-2-接口设计"><a href="#5-19-2-接口设计" class="headerlink" title="5.19.2 接口设计"></a>5.19.2 接口设计</h4><table><thead><tr><th>请求方式</th><th>请求路径</th><th>是否需求token头</th></tr></thead><tbody><tr><td>PUT</td><td>system/role/changeStatus</td><td>是</td></tr></tbody></table><p>请求体：</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span><span class="token property">"roleId"</span><span class="token operator">:</span><span class="token string">"11"</span><span class="token punctuation">,</span><span class="token property">"status"</span><span class="token operator">:</span><span class="token string">"1"</span><span class="token punctuation">}</span></code></pre><p>响应格式：</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>    <span class="token property">"code"</span><span class="token operator">:</span><span class="token number">200</span><span class="token punctuation">,</span>    <span class="token property">"msg"</span><span class="token operator">:</span><span class="token string">"操作成功"</span><span class="token punctuation">}</span></code></pre><h3 id="5-20-新增角色！！"><a href="#5-20-新增角色！！" class="headerlink" title="5.20 新增角色！！"></a>5.20 新增角色！！</h3><h4 id="5-20-1-需求"><a href="#5-20-1-需求" class="headerlink" title="5.20.1 需求"></a>5.20.1 需求</h4><p>​需要提供新增角色的功能。新增角色时能够直接设置角色所关联的菜单权限。</p><h4 id="5-20-2-接口设计"><a href="#5-20-2-接口设计" class="headerlink" title="5.20.2 接口设计"></a>5.20.2 接口设计</h4><h5 id="5-20-2-1-获取菜单树接口"><a href="#5-20-2-1-获取菜单树接口" class="headerlink" title="5.20.2.1 获取菜单树接口"></a>5.20.2.1 获取菜单树接口</h5><table><thead><tr><th>请求方式</th><th>请求路径</th><th>是否需求token头</th></tr></thead><tbody><tr><td>GET</td><td>/system/menu/treeselect</td><td>是</td></tr></tbody></table><p>无需请求参数</p><p>响应格式：</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>    <span class="token property">"code"</span><span class="token operator">:</span><span class="token number">200</span><span class="token punctuation">,</span>    <span class="token property">"data"</span><span class="token operator">:</span><span class="token punctuation">[</span>        <span class="token punctuation">{</span>            <span class="token property">"children"</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>            <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"2023"</span><span class="token punctuation">,</span>            <span class="token property">"label"</span><span class="token operator">:</span><span class="token string">"写博文"</span><span class="token punctuation">,</span>            <span class="token property">"parentId"</span><span class="token operator">:</span><span class="token string">"0"</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">{</span>            <span class="token property">"children"</span><span class="token operator">:</span><span class="token punctuation">[</span>                <span class="token punctuation">{</span>                    <span class="token property">"children"</span><span class="token operator">:</span><span class="token punctuation">[</span>                        <span class="token punctuation">{</span>                            <span class="token property">"children"</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                            <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"1001"</span><span class="token punctuation">,</span>                            <span class="token property">"label"</span><span class="token operator">:</span><span class="token string">"用户查询"</span><span class="token punctuation">,</span>                            <span class="token property">"parentId"</span><span class="token operator">:</span><span class="token string">"100"</span>                        <span class="token punctuation">}</span><span class="token punctuation">,</span>                        <span class="token punctuation">{</span>                            <span class="token property">"children"</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                            <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"1002"</span><span class="token punctuation">,</span>                            <span class="token property">"label"</span><span class="token operator">:</span><span class="token string">"用户新增"</span><span class="token punctuation">,</span>                            <span class="token property">"parentId"</span><span class="token operator">:</span><span class="token string">"100"</span>                        <span class="token punctuation">}</span><span class="token punctuation">,</span>                        <span class="token punctuation">{</span>                            <span class="token property">"children"</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                            <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"1003"</span><span class="token punctuation">,</span>                            <span class="token property">"label"</span><span class="token operator">:</span><span class="token string">"用户修改"</span><span class="token punctuation">,</span>                            <span class="token property">"parentId"</span><span class="token operator">:</span><span class="token string">"100"</span>                        <span class="token punctuation">}</span><span class="token punctuation">,</span>                        <span class="token punctuation">{</span>                            <span class="token property">"children"</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                            <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"1004"</span><span class="token punctuation">,</span>                            <span class="token property">"label"</span><span class="token operator">:</span><span class="token string">"用户删除"</span><span class="token punctuation">,</span>                            <span class="token property">"parentId"</span><span class="token operator">:</span><span class="token string">"100"</span>                        <span class="token punctuation">}</span><span class="token punctuation">,</span>                        <span class="token punctuation">{</span>                            <span class="token property">"children"</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                            <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"1005"</span><span class="token punctuation">,</span>                            <span class="token property">"label"</span><span class="token operator">:</span><span class="token string">"用户导出"</span><span class="token punctuation">,</span>                            <span class="token property">"parentId"</span><span class="token operator">:</span><span class="token string">"100"</span>                        <span class="token punctuation">}</span><span class="token punctuation">,</span>                        <span class="token punctuation">{</span>                            <span class="token property">"children"</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                            <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"1006"</span><span class="token punctuation">,</span>                            <span class="token property">"label"</span><span class="token operator">:</span><span class="token string">"用户导入"</span><span class="token punctuation">,</span>                            <span class="token property">"parentId"</span><span class="token operator">:</span><span class="token string">"100"</span>                        <span class="token punctuation">}</span><span class="token punctuation">,</span>                        <span class="token punctuation">{</span>                            <span class="token property">"children"</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                            <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"1007"</span><span class="token punctuation">,</span>                            <span class="token property">"label"</span><span class="token operator">:</span><span class="token string">"重置密码"</span><span class="token punctuation">,</span>                            <span class="token property">"parentId"</span><span class="token operator">:</span><span class="token string">"100"</span>                        <span class="token punctuation">}</span>                    <span class="token punctuation">]</span><span class="token punctuation">,</span>                    <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"100"</span><span class="token punctuation">,</span>                    <span class="token property">"label"</span><span class="token operator">:</span><span class="token string">"用户管理"</span><span class="token punctuation">,</span>                    <span class="token property">"parentId"</span><span class="token operator">:</span><span class="token string">"1"</span>                <span class="token punctuation">}</span><span class="token punctuation">,</span>                <span class="token punctuation">{</span>                    <span class="token property">"children"</span><span class="token operator">:</span><span class="token punctuation">[</span>                        <span class="token punctuation">{</span>                            <span class="token property">"children"</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                            <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"1008"</span><span class="token punctuation">,</span>                            <span class="token property">"label"</span><span class="token operator">:</span><span class="token string">"角色查询"</span><span class="token punctuation">,</span>                            <span class="token property">"parentId"</span><span class="token operator">:</span><span class="token string">"101"</span>                        <span class="token punctuation">}</span><span class="token punctuation">,</span>                        <span class="token punctuation">{</span>                            <span class="token property">"children"</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                            <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"1009"</span><span class="token punctuation">,</span>                            <span class="token property">"label"</span><span class="token operator">:</span><span class="token string">"角色新增"</span><span class="token punctuation">,</span>                            <span class="token property">"parentId"</span><span class="token operator">:</span><span class="token string">"101"</span>                        <span class="token punctuation">}</span><span class="token punctuation">,</span>                        <span class="token punctuation">{</span>                            <span class="token property">"children"</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                            <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"1010"</span><span class="token punctuation">,</span>                            <span class="token property">"label"</span><span class="token operator">:</span><span class="token string">"角色修改"</span><span class="token punctuation">,</span>                            <span class="token property">"parentId"</span><span class="token operator">:</span><span class="token string">"101"</span>                        <span class="token punctuation">}</span><span class="token punctuation">,</span>                        <span class="token punctuation">{</span>                            <span class="token property">"children"</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                            <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"1011"</span><span class="token punctuation">,</span>                            <span class="token property">"label"</span><span class="token operator">:</span><span class="token string">"角色删除"</span><span class="token punctuation">,</span>                            <span class="token property">"parentId"</span><span class="token operator">:</span><span class="token string">"101"</span>                        <span class="token punctuation">}</span><span class="token punctuation">,</span>                        <span class="token punctuation">{</span>                            <span class="token property">"children"</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                            <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"1012"</span><span class="token punctuation">,</span>                            <span class="token property">"label"</span><span class="token operator">:</span><span class="token string">"角色导出"</span><span class="token punctuation">,</span>                            <span class="token property">"parentId"</span><span class="token operator">:</span><span class="token string">"101"</span>                        <span class="token punctuation">}</span>                    <span class="token punctuation">]</span><span class="token punctuation">,</span>                    <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"101"</span><span class="token punctuation">,</span>                    <span class="token property">"label"</span><span class="token operator">:</span><span class="token string">"角色管理"</span><span class="token punctuation">,</span>                    <span class="token property">"parentId"</span><span class="token operator">:</span><span class="token string">"1"</span>                <span class="token punctuation">}</span><span class="token punctuation">,</span>                <span class="token punctuation">{</span>                    <span class="token property">"children"</span><span class="token operator">:</span><span class="token punctuation">[</span>                        <span class="token punctuation">{</span>                            <span class="token property">"children"</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                            <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"1013"</span><span class="token punctuation">,</span>                            <span class="token property">"label"</span><span class="token operator">:</span><span class="token string">"菜单查询"</span><span class="token punctuation">,</span>                            <span class="token property">"parentId"</span><span class="token operator">:</span><span class="token string">"102"</span>                        <span class="token punctuation">}</span><span class="token punctuation">,</span>                        <span class="token punctuation">{</span>                            <span class="token property">"children"</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                            <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"1014"</span><span class="token punctuation">,</span>                            <span class="token property">"label"</span><span class="token operator">:</span><span class="token string">"菜单新增"</span><span class="token punctuation">,</span>                            <span class="token property">"parentId"</span><span class="token operator">:</span><span class="token string">"102"</span>                        <span class="token punctuation">}</span><span class="token punctuation">,</span>                        <span class="token punctuation">{</span>                            <span class="token property">"children"</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                            <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"1015"</span><span class="token punctuation">,</span>                            <span class="token property">"label"</span><span class="token operator">:</span><span class="token string">"菜单修改"</span><span class="token punctuation">,</span>                            <span class="token property">"parentId"</span><span class="token operator">:</span><span class="token string">"102"</span>                        <span class="token punctuation">}</span><span class="token punctuation">,</span>                        <span class="token punctuation">{</span>                            <span class="token property">"children"</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                            <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"1016"</span><span class="token punctuation">,</span>                            <span class="token property">"label"</span><span class="token operator">:</span><span class="token string">"菜单删除"</span><span class="token punctuation">,</span>                            <span class="token property">"parentId"</span><span class="token operator">:</span><span class="token string">"102"</span>                        <span class="token punctuation">}</span>                    <span class="token punctuation">]</span><span class="token punctuation">,</span>                    <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"102"</span><span class="token punctuation">,</span>                    <span class="token property">"label"</span><span class="token operator">:</span><span class="token string">"菜单管理"</span><span class="token punctuation">,</span>                    <span class="token property">"parentId"</span><span class="token operator">:</span><span class="token string">"1"</span>                <span class="token punctuation">}</span>            <span class="token punctuation">]</span><span class="token punctuation">,</span>            <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"1"</span><span class="token punctuation">,</span>            <span class="token property">"label"</span><span class="token operator">:</span><span class="token string">"系统管理"</span><span class="token punctuation">,</span>            <span class="token property">"parentId"</span><span class="token operator">:</span><span class="token string">"0"</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">{</span>            <span class="token property">"children"</span><span class="token operator">:</span><span class="token punctuation">[</span>                <span class="token punctuation">{</span>                    <span class="token property">"children"</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                    <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"2019"</span><span class="token punctuation">,</span>                    <span class="token property">"label"</span><span class="token operator">:</span><span class="token string">"文章管理"</span><span class="token punctuation">,</span>                    <span class="token property">"parentId"</span><span class="token operator">:</span><span class="token string">"2017"</span>                <span class="token punctuation">}</span><span class="token punctuation">,</span>                <span class="token punctuation">{</span>                    <span class="token property">"children"</span><span class="token operator">:</span><span class="token punctuation">[</span>                        <span class="token punctuation">{</span>                            <span class="token property">"children"</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                            <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"2028"</span><span class="token punctuation">,</span>                            <span class="token property">"label"</span><span class="token operator">:</span><span class="token string">"导出分类"</span><span class="token punctuation">,</span>                            <span class="token property">"parentId"</span><span class="token operator">:</span><span class="token string">"2018"</span>                        <span class="token punctuation">}</span>                    <span class="token punctuation">]</span><span class="token punctuation">,</span>                    <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"2018"</span><span class="token punctuation">,</span>                    <span class="token property">"label"</span><span class="token operator">:</span><span class="token string">"分类管理"</span><span class="token punctuation">,</span>                    <span class="token property">"parentId"</span><span class="token operator">:</span><span class="token string">"2017"</span>                <span class="token punctuation">}</span><span class="token punctuation">,</span>                <span class="token punctuation">{</span>                    <span class="token property">"children"</span><span class="token operator">:</span><span class="token punctuation">[</span>                        <span class="token punctuation">{</span>                            <span class="token property">"children"</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                            <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"2024"</span><span class="token punctuation">,</span>                            <span class="token property">"label"</span><span class="token operator">:</span><span class="token string">"友链新增"</span><span class="token punctuation">,</span>                            <span class="token property">"parentId"</span><span class="token operator">:</span><span class="token string">"2022"</span>                        <span class="token punctuation">}</span><span class="token punctuation">,</span>                        <span class="token punctuation">{</span>                            <span class="token property">"children"</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                            <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"2025"</span><span class="token punctuation">,</span>                            <span class="token property">"label"</span><span class="token operator">:</span><span class="token string">"友链修改"</span><span class="token punctuation">,</span>                            <span class="token property">"parentId"</span><span class="token operator">:</span><span class="token string">"2022"</span>                        <span class="token punctuation">}</span><span class="token punctuation">,</span>                        <span class="token punctuation">{</span>                            <span class="token property">"children"</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                            <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"2026"</span><span class="token punctuation">,</span>                            <span class="token property">"label"</span><span class="token operator">:</span><span class="token string">"友链删除"</span><span class="token punctuation">,</span>                            <span class="token property">"parentId"</span><span class="token operator">:</span><span class="token string">"2022"</span>                        <span class="token punctuation">}</span><span class="token punctuation">,</span>                        <span class="token punctuation">{</span>                            <span class="token property">"children"</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                            <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"2027"</span><span class="token punctuation">,</span>                            <span class="token property">"label"</span><span class="token operator">:</span><span class="token string">"友链查询"</span><span class="token punctuation">,</span>                            <span class="token property">"parentId"</span><span class="token operator">:</span><span class="token string">"2022"</span>                        <span class="token punctuation">}</span>                    <span class="token punctuation">]</span><span class="token punctuation">,</span>                    <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"2022"</span><span class="token punctuation">,</span>                    <span class="token property">"label"</span><span class="token operator">:</span><span class="token string">"友链管理"</span><span class="token punctuation">,</span>                    <span class="token property">"parentId"</span><span class="token operator">:</span><span class="token string">"2017"</span>                <span class="token punctuation">}</span><span class="token punctuation">,</span>                <span class="token punctuation">{</span>                    <span class="token property">"children"</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                    <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"2021"</span><span class="token punctuation">,</span>                    <span class="token property">"label"</span><span class="token operator">:</span><span class="token string">"标签管理"</span><span class="token punctuation">,</span>                    <span class="token property">"parentId"</span><span class="token operator">:</span><span class="token string">"2017"</span>                <span class="token punctuation">}</span>            <span class="token punctuation">]</span><span class="token punctuation">,</span>            <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"2017"</span><span class="token punctuation">,</span>            <span class="token property">"label"</span><span class="token operator">:</span><span class="token string">"内容管理"</span><span class="token punctuation">,</span>            <span class="token property">"parentId"</span><span class="token operator">:</span><span class="token string">"0"</span>        <span class="token punctuation">}</span>    <span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token property">"msg"</span><span class="token operator">:</span><span class="token string">"操作成功"</span><span class="token punctuation">}</span></code></pre><h5 id="5-20-2-2-新增角色接口"><a href="#5-20-2-2-新增角色接口" class="headerlink" title="5.20.2.2 新增角色接口"></a>5.20.2.2 新增角色接口</h5><table><thead><tr><th>请求方式</th><th>请求路径</th><th>是否需求token头</th></tr></thead><tbody><tr><td>POST</td><td>system/role</td><td>是</td></tr></tbody></table><p>请求体：</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>    <span class="token property">"roleName"</span><span class="token operator">:</span><span class="token string">"测试新增角色"</span><span class="token punctuation">,</span>    <span class="token property">"roleKey"</span><span class="token operator">:</span><span class="token string">"wds"</span><span class="token punctuation">,</span>    <span class="token property">"roleSort"</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span>    <span class="token property">"status"</span><span class="token operator">:</span><span class="token string">"0"</span><span class="token punctuation">,</span>    <span class="token property">"menuIds"</span><span class="token operator">:</span><span class="token punctuation">[</span>        <span class="token string">"1"</span><span class="token punctuation">,</span>        <span class="token string">"100"</span>    <span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token property">"remark"</span><span class="token operator">:</span><span class="token string">"我是角色备注"</span><span class="token punctuation">}</span></code></pre><p>响应格式：</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>    <span class="token property">"code"</span><span class="token operator">:</span><span class="token number">200</span><span class="token punctuation">,</span>    <span class="token property">"msg"</span><span class="token operator">:</span><span class="token string">"操作成功"</span><span class="token punctuation">}</span></code></pre><h3 id="5-21-修改角色"><a href="#5-21-修改角色" class="headerlink" title="5.21 修改角色"></a>5.21 修改角色</h3><h4 id="5-21-1-需求"><a href="#5-21-1-需求" class="headerlink" title="5.21.1 需求"></a>5.21.1 需求</h4><p>​需要提供修改角色的功能。修改角色时可以修改角色所关联的菜单权限</p><h4 id="5-21-2-接口设计"><a href="#5-21-2-接口设计" class="headerlink" title="5.21.2 接口设计"></a>5.21.2 接口设计</h4><h5 id="5-21-2-1-角色信息回显接口"><a href="#5-21-2-1-角色信息回显接口" class="headerlink" title="5.21.2.1 角色信息回显接口"></a>5.21.2.1 角色信息回显接口</h5><table><thead><tr><th>请求方式</th><th>请求路径</th><th>是否需求token头</th></tr></thead><tbody><tr><td>Get</td><td>system/role/{id}</td><td>是</td></tr></tbody></table><p>Path格式请求参数：</p><p>id: 角色id</p><p>响应格式：</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>    <span class="token property">"code"</span><span class="token operator">:</span><span class="token number">200</span><span class="token punctuation">,</span>    <span class="token property">"data"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"11"</span><span class="token punctuation">,</span>        <span class="token property">"remark"</span><span class="token operator">:</span><span class="token string">"嘎嘎嘎"</span><span class="token punctuation">,</span>        <span class="token property">"roleKey"</span><span class="token operator">:</span><span class="token string">"aggag"</span><span class="token punctuation">,</span>        <span class="token property">"roleName"</span><span class="token operator">:</span><span class="token string">"嘎嘎嘎"</span><span class="token punctuation">,</span>        <span class="token property">"roleSort"</span><span class="token operator">:</span><span class="token string">"5"</span><span class="token punctuation">,</span>        <span class="token property">"status"</span><span class="token operator">:</span><span class="token string">"0"</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"msg"</span><span class="token operator">:</span><span class="token string">"操作成功"</span><span class="token punctuation">}</span></code></pre><h5 id="5-21-2-2-加载对应角色菜单列表树接口"><a href="#5-21-2-2-加载对应角色菜单列表树接口" class="headerlink" title="5.21.2.2 加载对应角色菜单列表树接口"></a>5.21.2.2 加载对应角色菜单列表树接口</h5><table><thead><tr><th>请求方式</th><th>请求路径</th><th>是否需求token头</th></tr></thead><tbody><tr><td>Get</td><td>/system/menu/roleMenuTreeselect/{id}</td><td>是</td></tr></tbody></table><p>Path格式请求参数：</p><p>id: 角色id</p><p>响应格式：</p><p>字段介绍</p><p>​menus：菜单树。</p><p>​checkedKeys：角色所关联的菜单权限id列表。</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>    <span class="token property">"code"</span><span class="token operator">:</span><span class="token number">200</span><span class="token punctuation">,</span>    <span class="token property">"data"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"menus"</span><span class="token operator">:</span><span class="token punctuation">[</span>            <span class="token punctuation">{</span>                <span class="token property">"children"</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"2023"</span><span class="token punctuation">,</span>                <span class="token property">"label"</span><span class="token operator">:</span><span class="token string">"写博文"</span><span class="token punctuation">,</span>                <span class="token property">"parentId"</span><span class="token operator">:</span><span class="token string">"0"</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token punctuation">{</span>                <span class="token property">"children"</span><span class="token operator">:</span><span class="token punctuation">[</span>                    <span class="token punctuation">{</span>                        <span class="token property">"children"</span><span class="token operator">:</span><span class="token punctuation">[</span>                            <span class="token punctuation">{</span>                                <span class="token property">"children"</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                                <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"1001"</span><span class="token punctuation">,</span>                                <span class="token property">"label"</span><span class="token operator">:</span><span class="token string">"用户查询"</span><span class="token punctuation">,</span>                                <span class="token property">"parentId"</span><span class="token operator">:</span><span class="token string">"100"</span>                            <span class="token punctuation">}</span><span class="token punctuation">,</span>                            <span class="token punctuation">{</span>                                <span class="token property">"children"</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                                <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"1002"</span><span class="token punctuation">,</span>                                <span class="token property">"label"</span><span class="token operator">:</span><span class="token string">"用户新增"</span><span class="token punctuation">,</span>                                <span class="token property">"parentId"</span><span class="token operator">:</span><span class="token string">"100"</span>                            <span class="token punctuation">}</span><span class="token punctuation">,</span>                            <span class="token punctuation">{</span>                                <span class="token property">"children"</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                                <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"1003"</span><span class="token punctuation">,</span>                                <span class="token property">"label"</span><span class="token operator">:</span><span class="token string">"用户修改"</span><span class="token punctuation">,</span>                                <span class="token property">"parentId"</span><span class="token operator">:</span><span class="token string">"100"</span>                            <span class="token punctuation">}</span><span class="token punctuation">,</span>                            <span class="token punctuation">{</span>                                <span class="token property">"children"</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                                <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"1004"</span><span class="token punctuation">,</span>                                <span class="token property">"label"</span><span class="token operator">:</span><span class="token string">"用户删除"</span><span class="token punctuation">,</span>                                <span class="token property">"parentId"</span><span class="token operator">:</span><span class="token string">"100"</span>                            <span class="token punctuation">}</span><span class="token punctuation">,</span>                            <span class="token punctuation">{</span>                                <span class="token property">"children"</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                                <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"1005"</span><span class="token punctuation">,</span>                                <span class="token property">"label"</span><span class="token operator">:</span><span class="token string">"用户导出"</span><span class="token punctuation">,</span>                                <span class="token property">"parentId"</span><span class="token operator">:</span><span class="token string">"100"</span>                            <span class="token punctuation">}</span><span class="token punctuation">,</span>                            <span class="token punctuation">{</span>                                <span class="token property">"children"</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                                <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"1006"</span><span class="token punctuation">,</span>                                <span class="token property">"label"</span><span class="token operator">:</span><span class="token string">"用户导入"</span><span class="token punctuation">,</span>                                <span class="token property">"parentId"</span><span class="token operator">:</span><span class="token string">"100"</span>                            <span class="token punctuation">}</span><span class="token punctuation">,</span>                            <span class="token punctuation">{</span>                                <span class="token property">"children"</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                                <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"1007"</span><span class="token punctuation">,</span>                                <span class="token property">"label"</span><span class="token operator">:</span><span class="token string">"重置密码"</span><span class="token punctuation">,</span>                                <span class="token property">"parentId"</span><span class="token operator">:</span><span class="token string">"100"</span>                            <span class="token punctuation">}</span>                        <span class="token punctuation">]</span><span class="token punctuation">,</span>                        <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"100"</span><span class="token punctuation">,</span>                        <span class="token property">"label"</span><span class="token operator">:</span><span class="token string">"用户管理"</span><span class="token punctuation">,</span>                        <span class="token property">"parentId"</span><span class="token operator">:</span><span class="token string">"1"</span>                    <span class="token punctuation">}</span><span class="token punctuation">,</span>                    <span class="token punctuation">{</span>                        <span class="token property">"children"</span><span class="token operator">:</span><span class="token punctuation">[</span>                            <span class="token punctuation">{</span>                                <span class="token property">"children"</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                                <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"1008"</span><span class="token punctuation">,</span>                                <span class="token property">"label"</span><span class="token operator">:</span><span class="token string">"角色查询"</span><span class="token punctuation">,</span>                                <span class="token property">"parentId"</span><span class="token operator">:</span><span class="token string">"101"</span>                            <span class="token punctuation">}</span><span class="token punctuation">,</span>                            <span class="token punctuation">{</span>                                <span class="token property">"children"</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                                <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"1009"</span><span class="token punctuation">,</span>                                <span class="token property">"label"</span><span class="token operator">:</span><span class="token string">"角色新增"</span><span class="token punctuation">,</span>                                <span class="token property">"parentId"</span><span class="token operator">:</span><span class="token string">"101"</span>                            <span class="token punctuation">}</span><span class="token punctuation">,</span>                            <span class="token punctuation">{</span>                                <span class="token property">"children"</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                                <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"1010"</span><span class="token punctuation">,</span>                                <span class="token property">"label"</span><span class="token operator">:</span><span class="token string">"角色修改"</span><span class="token punctuation">,</span>                                <span class="token property">"parentId"</span><span class="token operator">:</span><span class="token string">"101"</span>                            <span class="token punctuation">}</span><span class="token punctuation">,</span>                            <span class="token punctuation">{</span>                                <span class="token property">"children"</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                                <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"1011"</span><span class="token punctuation">,</span>                                <span class="token property">"label"</span><span class="token operator">:</span><span class="token string">"角色删除"</span><span class="token punctuation">,</span>                                <span class="token property">"parentId"</span><span class="token operator">:</span><span class="token string">"101"</span>                            <span class="token punctuation">}</span><span class="token punctuation">,</span>                            <span class="token punctuation">{</span>                                <span class="token property">"children"</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                                <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"1012"</span><span class="token punctuation">,</span>                                <span class="token property">"label"</span><span class="token operator">:</span><span class="token string">"角色导出"</span><span class="token punctuation">,</span>                                <span class="token property">"parentId"</span><span class="token operator">:</span><span class="token string">"101"</span>                            <span class="token punctuation">}</span>                        <span class="token punctuation">]</span><span class="token punctuation">,</span>                        <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"101"</span><span class="token punctuation">,</span>                        <span class="token property">"label"</span><span class="token operator">:</span><span class="token string">"角色管理"</span><span class="token punctuation">,</span>                        <span class="token property">"parentId"</span><span class="token operator">:</span><span class="token string">"1"</span>                    <span class="token punctuation">}</span><span class="token punctuation">,</span>                    <span class="token punctuation">{</span>                        <span class="token property">"children"</span><span class="token operator">:</span><span class="token punctuation">[</span>                            <span class="token punctuation">{</span>                                <span class="token property">"children"</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                                <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"1013"</span><span class="token punctuation">,</span>                                <span class="token property">"label"</span><span class="token operator">:</span><span class="token string">"菜单查询"</span><span class="token punctuation">,</span>                                <span class="token property">"parentId"</span><span class="token operator">:</span><span class="token string">"102"</span>                            <span class="token punctuation">}</span><span class="token punctuation">,</span>                            <span class="token punctuation">{</span>                                <span class="token property">"children"</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                                <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"1014"</span><span class="token punctuation">,</span>                                <span class="token property">"label"</span><span class="token operator">:</span><span class="token string">"菜单新增"</span><span class="token punctuation">,</span>                                <span class="token property">"parentId"</span><span class="token operator">:</span><span class="token string">"102"</span>                            <span class="token punctuation">}</span><span class="token punctuation">,</span>                            <span class="token punctuation">{</span>                                <span class="token property">"children"</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                                <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"1015"</span><span class="token punctuation">,</span>                                <span class="token property">"label"</span><span class="token operator">:</span><span class="token string">"菜单修改"</span><span class="token punctuation">,</span>                                <span class="token property">"parentId"</span><span class="token operator">:</span><span class="token string">"102"</span>                            <span class="token punctuation">}</span><span class="token punctuation">,</span>                            <span class="token punctuation">{</span>                                <span class="token property">"children"</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                                <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"1016"</span><span class="token punctuation">,</span>                                <span class="token property">"label"</span><span class="token operator">:</span><span class="token string">"菜单删除"</span><span class="token punctuation">,</span>                                <span class="token property">"parentId"</span><span class="token operator">:</span><span class="token string">"102"</span>                            <span class="token punctuation">}</span>                        <span class="token punctuation">]</span><span class="token punctuation">,</span>                        <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"102"</span><span class="token punctuation">,</span>                        <span class="token property">"label"</span><span class="token operator">:</span><span class="token string">"菜单管理"</span><span class="token punctuation">,</span>                        <span class="token property">"parentId"</span><span class="token operator">:</span><span class="token string">"1"</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">]</span><span class="token punctuation">,</span>                <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"1"</span><span class="token punctuation">,</span>                <span class="token property">"label"</span><span class="token operator">:</span><span class="token string">"系统管理"</span><span class="token punctuation">,</span>                <span class="token property">"parentId"</span><span class="token operator">:</span><span class="token string">"0"</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token punctuation">{</span>                <span class="token property">"children"</span><span class="token operator">:</span><span class="token punctuation">[</span>                    <span class="token punctuation">{</span>                        <span class="token property">"children"</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                        <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"2019"</span><span class="token punctuation">,</span>                        <span class="token property">"label"</span><span class="token operator">:</span><span class="token string">"文章管理"</span><span class="token punctuation">,</span>                        <span class="token property">"parentId"</span><span class="token operator">:</span><span class="token string">"2017"</span>                    <span class="token punctuation">}</span><span class="token punctuation">,</span>                    <span class="token punctuation">{</span>                        <span class="token property">"children"</span><span class="token operator">:</span><span class="token punctuation">[</span>                            <span class="token punctuation">{</span>                                <span class="token property">"children"</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                                <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"2028"</span><span class="token punctuation">,</span>                                <span class="token property">"label"</span><span class="token operator">:</span><span class="token string">"导出分类"</span><span class="token punctuation">,</span>                                <span class="token property">"parentId"</span><span class="token operator">:</span><span class="token string">"2018"</span>                            <span class="token punctuation">}</span>                        <span class="token punctuation">]</span><span class="token punctuation">,</span>                        <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"2018"</span><span class="token punctuation">,</span>                        <span class="token property">"label"</span><span class="token operator">:</span><span class="token string">"分类管理"</span><span class="token punctuation">,</span>                        <span class="token property">"parentId"</span><span class="token operator">:</span><span class="token string">"2017"</span>                    <span class="token punctuation">}</span><span class="token punctuation">,</span>                    <span class="token punctuation">{</span>                        <span class="token property">"children"</span><span class="token operator">:</span><span class="token punctuation">[</span>                            <span class="token punctuation">{</span>                                <span class="token property">"children"</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                                <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"2024"</span><span class="token punctuation">,</span>                                <span class="token property">"label"</span><span class="token operator">:</span><span class="token string">"友链新增"</span><span class="token punctuation">,</span>                                <span class="token property">"parentId"</span><span class="token operator">:</span><span class="token string">"2022"</span>                            <span class="token punctuation">}</span><span class="token punctuation">,</span>                            <span class="token punctuation">{</span>                                <span class="token property">"children"</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                                <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"2025"</span><span class="token punctuation">,</span>                                <span class="token property">"label"</span><span class="token operator">:</span><span class="token string">"友链修改"</span><span class="token punctuation">,</span>                                <span class="token property">"parentId"</span><span class="token operator">:</span><span class="token string">"2022"</span>                            <span class="token punctuation">}</span><span class="token punctuation">,</span>                            <span class="token punctuation">{</span>                                <span class="token property">"children"</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                                <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"2026"</span><span class="token punctuation">,</span>                                <span class="token property">"label"</span><span class="token operator">:</span><span class="token string">"友链删除"</span><span class="token punctuation">,</span>                                <span class="token property">"parentId"</span><span class="token operator">:</span><span class="token string">"2022"</span>                            <span class="token punctuation">}</span><span class="token punctuation">,</span>                            <span class="token punctuation">{</span>                                <span class="token property">"children"</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                                <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"2027"</span><span class="token punctuation">,</span>                                <span class="token property">"label"</span><span class="token operator">:</span><span class="token string">"友链查询"</span><span class="token punctuation">,</span>                                <span class="token property">"parentId"</span><span class="token operator">:</span><span class="token string">"2022"</span>                            <span class="token punctuation">}</span>                        <span class="token punctuation">]</span><span class="token punctuation">,</span>                        <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"2022"</span><span class="token punctuation">,</span>                        <span class="token property">"label"</span><span class="token operator">:</span><span class="token string">"友链管理"</span><span class="token punctuation">,</span>                        <span class="token property">"parentId"</span><span class="token operator">:</span><span class="token string">"2017"</span>                    <span class="token punctuation">}</span><span class="token punctuation">,</span>                    <span class="token punctuation">{</span>                        <span class="token property">"children"</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                        <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"2021"</span><span class="token punctuation">,</span>                        <span class="token property">"label"</span><span class="token operator">:</span><span class="token string">"标签管理"</span><span class="token punctuation">,</span>                        <span class="token property">"parentId"</span><span class="token operator">:</span><span class="token string">"2017"</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">]</span><span class="token punctuation">,</span>                <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"2017"</span><span class="token punctuation">,</span>                <span class="token property">"label"</span><span class="token operator">:</span><span class="token string">"内容管理"</span><span class="token punctuation">,</span>                <span class="token property">"parentId"</span><span class="token operator">:</span><span class="token string">"0"</span>            <span class="token punctuation">}</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token property">"checkedKeys"</span><span class="token operator">:</span><span class="token punctuation">[</span>            <span class="token string">"1001"</span>          <span class="token punctuation">]</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"msg"</span><span class="token operator">:</span><span class="token string">"操作成功"</span><span class="token punctuation">}</span></code></pre><h5 id="5-21-2-3-更新角色信息接口"><a href="#5-21-2-3-更新角色信息接口" class="headerlink" title="5.21.2.3 更新角色信息接口"></a>5.21.2.3 更新角色信息接口</h5><table><thead><tr><th>请求方式</th><th>请求路径</th><th>是否需求token头</th></tr></thead><tbody><tr><td>PUT</td><td>system/role</td><td>是</td></tr></tbody></table><p>请求体：</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>    <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"13"</span><span class="token punctuation">,</span>    <span class="token property">"remark"</span><span class="token operator">:</span><span class="token string">"我是角色备注"</span><span class="token punctuation">,</span>    <span class="token property">"roleKey"</span><span class="token operator">:</span><span class="token string">"wds"</span><span class="token punctuation">,</span>    <span class="token property">"roleName"</span><span class="token operator">:</span><span class="token string">"测试新增角色"</span><span class="token punctuation">,</span>    <span class="token property">"roleSort"</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span>    <span class="token property">"status"</span><span class="token operator">:</span><span class="token string">"0"</span><span class="token punctuation">,</span>    <span class="token property">"menuIds"</span><span class="token operator">:</span><span class="token punctuation">[</span>        <span class="token string">"1"</span><span class="token punctuation">,</span>        <span class="token string">"100"</span><span class="token punctuation">,</span>        <span class="token string">"1001"</span>    <span class="token punctuation">]</span><span class="token punctuation">}</span></code></pre><p>响应格式：</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>    <span class="token property">"code"</span><span class="token operator">:</span><span class="token number">200</span><span class="token punctuation">,</span>    <span class="token property">"msg"</span><span class="token operator">:</span><span class="token string">"操作成功"</span><span class="token punctuation">}</span></code></pre><h3 id="5-22-删除角色"><a href="#5-22-删除角色" class="headerlink" title="5.22 删除角色"></a>5.22 删除角色</h3><h4 id="5-22-1-需求"><a href="#5-22-1-需求" class="headerlink" title="5.22.1 需求"></a>5.22.1 需求</h4><p>​删除固定的某个角色（逻辑删除）</p><h4 id="5-22-2-接口设计"><a href="#5-22-2-接口设计" class="headerlink" title="5.22.2 接口设计"></a>5.22.2 接口设计</h4><p>​</p><table><thead><tr><th>请求方式</th><th>请求路径</th><th>是否需求token头</th></tr></thead><tbody><tr><td>DELETE</td><td>system/role/{id}</td><td>是</td></tr></tbody></table><p>Path请求参数：</p><p>id：要删除的角色id</p><p>响应格式：</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>    <span class="token property">"code"</span><span class="token operator">:</span><span class="token number">200</span><span class="token punctuation">,</span>    <span class="token property">"msg"</span><span class="token operator">:</span><span class="token string">"操作成功"</span><span class="token punctuation">}</span></code></pre><h3 id="5-23-用户列表"><a href="#5-23-用户列表" class="headerlink" title="5.23 用户列表"></a>5.23 用户列表</h3><h4 id="5-23-1-需求"><a href="#5-23-1-需求" class="headerlink" title="5.23.1 需求"></a>5.23.1 需求</h4><p>​需要用户分页列表接口。</p><p>​可以根据用户名模糊搜索。</p><p>​可以进行手机号的搜索。</p><p>​可以进行状态的查询。</p><h4 id="5-23-2-接口设计"><a href="#5-23-2-接口设计" class="headerlink" title="5.23.2 接口设计"></a>5.23.2 接口设计</h4><table><thead><tr><th>请求方式</th><th>请求路径</th><th>是否需求token头</th></tr></thead><tbody><tr><td>GET</td><td>system/user/list</td><td>是</td></tr></tbody></table><p>Query格式请求参数：</p><p>pageNum: 页码</p><p>pageSize: 每页条数</p><p>userName：用户名</p><p>phonenumber：手机号</p><p>status:状态</p><p>响应格式：</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>    <span class="token property">"code"</span><span class="token operator">:</span><span class="token number">200</span><span class="token punctuation">,</span>    <span class="token property">"data"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"rows"</span><span class="token operator">:</span><span class="token punctuation">[</span>            <span class="token punctuation">{</span>                <span class="token property">"avatar"</span><span class="token operator">:</span><span class="token string">"http://r7yxkqloa.bkt.clouddn.com/2022/03/05/75fd15587811443a9a9a771f24da458d.png"</span><span class="token punctuation">,</span>                <span class="token property">"createTime"</span><span class="token operator">:</span><span class="token string">"2022-01-05 17:01:56"</span><span class="token punctuation">,</span>                <span class="token property">"email"</span><span class="token operator">:</span><span class="token string">"23412332@qq.com"</span><span class="token punctuation">,</span>                <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"1"</span><span class="token punctuation">,</span>                <span class="token property">"nickName"</span><span class="token operator">:</span><span class="token string">"sg3334"</span><span class="token punctuation">,</span>                <span class="token property">"phonenumber"</span><span class="token operator">:</span><span class="token string">"18888888888"</span><span class="token punctuation">,</span>                <span class="token property">"sex"</span><span class="token operator">:</span><span class="token string">"1"</span><span class="token punctuation">,</span>                <span class="token property">"status"</span><span class="token operator">:</span><span class="token string">"0"</span><span class="token punctuation">,</span>                <span class="token property">"updateBy"</span><span class="token operator">:</span><span class="token string">"1"</span><span class="token punctuation">,</span>                <span class="token property">"updateTime"</span><span class="token operator">:</span><span class="token string">"2022-03-13 21:36:22"</span><span class="token punctuation">,</span>                <span class="token property">"userName"</span><span class="token operator">:</span><span class="token string">"sg"</span>            <span class="token punctuation">}</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token property">"total"</span><span class="token operator">:</span><span class="token string">"1"</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"msg"</span><span class="token operator">:</span><span class="token string">"操作成功"</span><span class="token punctuation">}</span></code></pre><h3 id="5-24-新增用户！！！"><a href="#5-24-新增用户！！！" class="headerlink" title="5.24 新增用户！！！"></a>5.24 新增用户！！！</h3><h4 id="5-24-1-需求"><a href="#5-24-1-需求" class="headerlink" title="5.24.1 需求"></a>5.24.1 需求</h4><p>​需要新增用户功能。新增用户时可以直接关联角色。</p><p>​注意：新增用户时注意密码加密存储。</p><p>​用户名不能为空，否则提示：必需填写用户名</p><p>​用户名必须之前未存在，否则提示：用户名已存在</p><p>​    手机号必须之前未存在，否则提示：手机号已存在</p><p>​邮箱必须之前未存在，否则提示：邮箱已存在</p><h4 id="5-24-2-接口设计"><a href="#5-24-2-接口设计" class="headerlink" title="5.24.2 接口设计"></a>5.24.2 接口设计</h4><h5 id="5-24-2-1-查询角色列表接口"><a href="#5-24-2-1-查询角色列表接口" class="headerlink" title="5.24.2.1 查询角色列表接口"></a>5.24.2.1 查询角色列表接口</h5><p>注意：查询的是所有状态正常的角色</p><table><thead><tr><th>请求方式</th><th>请求路径</th><th>是否需求token头</th></tr></thead><tbody><tr><td>GET</td><td>/system/role/listAllRole</td><td>是</td></tr></tbody></table><p>响应格式：</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>    <span class="token property">"code"</span><span class="token operator">:</span><span class="token number">200</span><span class="token punctuation">,</span>    <span class="token property">"data"</span><span class="token operator">:</span><span class="token punctuation">[</span>        <span class="token punctuation">{</span>            <span class="token property">"createBy"</span><span class="token operator">:</span><span class="token string">"0"</span><span class="token punctuation">,</span>            <span class="token property">"createTime"</span><span class="token operator">:</span><span class="token string">"2021-11-12 18:46:19"</span><span class="token punctuation">,</span>            <span class="token property">"delFlag"</span><span class="token operator">:</span><span class="token string">"0"</span><span class="token punctuation">,</span>            <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"1"</span><span class="token punctuation">,</span>            <span class="token property">"remark"</span><span class="token operator">:</span><span class="token string">"超级管理员"</span><span class="token punctuation">,</span>            <span class="token property">"roleKey"</span><span class="token operator">:</span><span class="token string">"admin"</span><span class="token punctuation">,</span>            <span class="token property">"roleName"</span><span class="token operator">:</span><span class="token string">"超级管理员"</span><span class="token punctuation">,</span>            <span class="token property">"roleSort"</span><span class="token operator">:</span><span class="token string">"1"</span><span class="token punctuation">,</span>            <span class="token property">"status"</span><span class="token operator">:</span><span class="token string">"0"</span><span class="token punctuation">,</span>            <span class="token property">"updateBy"</span><span class="token operator">:</span><span class="token string">"0"</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">{</span>            <span class="token property">"createBy"</span><span class="token operator">:</span><span class="token string">"0"</span><span class="token punctuation">,</span>            <span class="token property">"createTime"</span><span class="token operator">:</span><span class="token string">"2021-11-12 18:46:19"</span><span class="token punctuation">,</span>            <span class="token property">"delFlag"</span><span class="token operator">:</span><span class="token string">"0"</span><span class="token punctuation">,</span>            <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"2"</span><span class="token punctuation">,</span>            <span class="token property">"remark"</span><span class="token operator">:</span><span class="token string">"普通角色"</span><span class="token punctuation">,</span>            <span class="token property">"roleKey"</span><span class="token operator">:</span><span class="token string">"common"</span><span class="token punctuation">,</span>            <span class="token property">"roleName"</span><span class="token operator">:</span><span class="token string">"普通角色"</span><span class="token punctuation">,</span>            <span class="token property">"roleSort"</span><span class="token operator">:</span><span class="token string">"2"</span><span class="token punctuation">,</span>            <span class="token property">"status"</span><span class="token operator">:</span><span class="token string">"0"</span><span class="token punctuation">,</span>            <span class="token property">"updateBy"</span><span class="token operator">:</span><span class="token string">"0"</span><span class="token punctuation">,</span>            <span class="token property">"updateTime"</span><span class="token operator">:</span><span class="token string">"2022-01-02 06:32:58"</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">{</span>            <span class="token property">"createTime"</span><span class="token operator">:</span><span class="token string">"2022-01-06 22:07:40"</span><span class="token punctuation">,</span>            <span class="token property">"delFlag"</span><span class="token operator">:</span><span class="token string">"0"</span><span class="token punctuation">,</span>            <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"11"</span><span class="token punctuation">,</span>            <span class="token property">"remark"</span><span class="token operator">:</span><span class="token string">"嘎嘎嘎"</span><span class="token punctuation">,</span>            <span class="token property">"roleKey"</span><span class="token operator">:</span><span class="token string">"aggag"</span><span class="token punctuation">,</span>            <span class="token property">"roleName"</span><span class="token operator">:</span><span class="token string">"嘎嘎嘎"</span><span class="token punctuation">,</span>            <span class="token property">"roleSort"</span><span class="token operator">:</span><span class="token string">"5"</span><span class="token punctuation">,</span>            <span class="token property">"status"</span><span class="token operator">:</span><span class="token string">"0"</span><span class="token punctuation">,</span>            <span class="token property">"updateBy"</span><span class="token operator">:</span><span class="token string">"1"</span><span class="token punctuation">,</span>            <span class="token property">"updateTime"</span><span class="token operator">:</span><span class="token string">"2022-09-12 10:00:25"</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">{</span>            <span class="token property">"createTime"</span><span class="token operator">:</span><span class="token string">"2022-01-16 14:49:30"</span><span class="token punctuation">,</span>            <span class="token property">"delFlag"</span><span class="token operator">:</span><span class="token string">"0"</span><span class="token punctuation">,</span>            <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"12"</span><span class="token punctuation">,</span>            <span class="token property">"roleKey"</span><span class="token operator">:</span><span class="token string">"link"</span><span class="token punctuation">,</span>            <span class="token property">"roleName"</span><span class="token operator">:</span><span class="token string">"友链审核员"</span><span class="token punctuation">,</span>            <span class="token property">"roleSort"</span><span class="token operator">:</span><span class="token string">"1"</span><span class="token punctuation">,</span>            <span class="token property">"status"</span><span class="token operator">:</span><span class="token string">"0"</span><span class="token punctuation">,</span>            <span class="token property">"updateTime"</span><span class="token operator">:</span><span class="token string">"2022-01-16 16:05:09"</span>        <span class="token punctuation">}</span>    <span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token property">"msg"</span><span class="token operator">:</span><span class="token string">"操作成功"</span><span class="token punctuation">}</span></code></pre><h5 id="5-24-2-2-新增用户"><a href="#5-24-2-2-新增用户" class="headerlink" title="5.24.2.2 新增用户"></a>5.24.2.2 新增用户</h5><table><thead><tr><th>请求方式</th><th>请求路径</th><th>是否需求token头</th></tr></thead><tbody><tr><td>POST</td><td>system/user</td><td>是</td></tr></tbody></table><p>请求体：</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>    <span class="token property">"userName"</span><span class="token operator">:</span><span class="token string">"wqeree"</span><span class="token punctuation">,</span>    <span class="token property">"nickName"</span><span class="token operator">:</span><span class="token string">"测试新增用户"</span><span class="token punctuation">,</span>    <span class="token property">"password"</span><span class="token operator">:</span><span class="token string">"1234343"</span><span class="token punctuation">,</span>    <span class="token property">"phonenumber"</span><span class="token operator">:</span><span class="token string">"18889778907"</span><span class="token punctuation">,</span>    <span class="token property">"email"</span><span class="token operator">:</span><span class="token string">"233@sq.com"</span><span class="token punctuation">,</span>    <span class="token property">"sex"</span><span class="token operator">:</span><span class="token string">"0"</span><span class="token punctuation">,</span>    <span class="token property">"status"</span><span class="token operator">:</span><span class="token string">"0"</span><span class="token punctuation">,</span>    <span class="token property">"roleIds"</span><span class="token operator">:</span><span class="token punctuation">[</span>        <span class="token string">"2"</span>    <span class="token punctuation">]</span><span class="token punctuation">}</span></code></pre><p>响应格式：</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>    <span class="token property">"code"</span><span class="token operator">:</span><span class="token number">200</span><span class="token punctuation">,</span>    <span class="token property">"msg"</span><span class="token operator">:</span><span class="token string">"操作成功"</span><span class="token punctuation">}</span></code></pre><h3 id="5-25-删除用户"><a href="#5-25-删除用户" class="headerlink" title="5.25 删除用户"></a>5.25 删除用户</h3><h4 id="5-25-1-需求"><a href="#5-25-1-需求" class="headerlink" title="5.25.1 需求"></a>5.25.1 需求</h4><p>删除固定的某个用户（逻辑删除）</p><h4 id="5-25-2-接口设计"><a href="#5-25-2-接口设计" class="headerlink" title="5.25.2 接口设计"></a>5.25.2 接口设计</h4><p>不能删除当前操作的用户</p><table><thead><tr><th>请求方式</th><th>请求路径</th><th>是否需求token头</th></tr></thead><tbody><tr><td>DELETE</td><td>/system/user/{id}</td><td>是</td></tr></tbody></table><p>Path请求参数：</p><p>id：要删除的用户id</p><p>响应格式：</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>    <span class="token property">"code"</span><span class="token operator">:</span><span class="token number">200</span><span class="token punctuation">,</span>    <span class="token property">"msg"</span><span class="token operator">:</span><span class="token string">"操作成功"</span><span class="token punctuation">}</span></code></pre><h3 id="5-26-修改用户"><a href="#5-26-修改用户" class="headerlink" title="5.26 修改用户"></a>5.26 修改用户</h3><h4 id="5-26-1-需求"><a href="#5-26-1-需求" class="headerlink" title="5.26.1 需求"></a>5.26.1 需求</h4><p>需要提供修改用户的功能。修改用户时可以修改用户所关联的角色。</p><h4 id="5-26-2-接口设计"><a href="#5-26-2-接口设计" class="headerlink" title="5.26.2 接口设计"></a>5.26.2 接口设计</h4><h5 id="5-26-2-1-根据id查询用户信息回显接口"><a href="#5-26-2-1-根据id查询用户信息回显接口" class="headerlink" title="5.26.2.1 根据id查询用户信息回显接口"></a>5.26.2.1 根据id查询用户信息回显接口</h5><table><thead><tr><th>请求方式</th><th>请求路径</th><th>是否需求token头</th></tr></thead><tbody><tr><td>Get</td><td>/system/user/{id}</td><td>是</td></tr></tbody></table><p>Path格式请求参数：</p><p>id: 用户id</p><p>响应格式：</p><p>roleIds：用户所关联的角色id列表</p><p>roles：所有角色的列表</p><p>user：用户信息</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>    <span class="token property">"code"</span><span class="token operator">:</span><span class="token number">200</span><span class="token punctuation">,</span>    <span class="token property">"data"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"roleIds"</span><span class="token operator">:</span><span class="token punctuation">[</span>            <span class="token string">"11"</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token property">"roles"</span><span class="token operator">:</span><span class="token punctuation">[</span>            <span class="token punctuation">{</span>                <span class="token property">"createBy"</span><span class="token operator">:</span><span class="token string">"0"</span><span class="token punctuation">,</span>                <span class="token property">"createTime"</span><span class="token operator">:</span><span class="token string">"2021-11-12 18:46:19"</span><span class="token punctuation">,</span>                <span class="token property">"delFlag"</span><span class="token operator">:</span><span class="token string">"0"</span><span class="token punctuation">,</span>                <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"1"</span><span class="token punctuation">,</span>                <span class="token property">"remark"</span><span class="token operator">:</span><span class="token string">"超级管理员"</span><span class="token punctuation">,</span>                <span class="token property">"roleKey"</span><span class="token operator">:</span><span class="token string">"admin"</span><span class="token punctuation">,</span>                <span class="token property">"roleName"</span><span class="token operator">:</span><span class="token string">"超级管理员"</span><span class="token punctuation">,</span>                <span class="token property">"roleSort"</span><span class="token operator">:</span><span class="token string">"1"</span><span class="token punctuation">,</span>                <span class="token property">"status"</span><span class="token operator">:</span><span class="token string">"0"</span><span class="token punctuation">,</span>                <span class="token property">"updateBy"</span><span class="token operator">:</span><span class="token string">"0"</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token punctuation">{</span>                <span class="token property">"createBy"</span><span class="token operator">:</span><span class="token string">"0"</span><span class="token punctuation">,</span>                <span class="token property">"createTime"</span><span class="token operator">:</span><span class="token string">"2021-11-12 18:46:19"</span><span class="token punctuation">,</span>                <span class="token property">"delFlag"</span><span class="token operator">:</span><span class="token string">"0"</span><span class="token punctuation">,</span>                <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"2"</span><span class="token punctuation">,</span>                <span class="token property">"remark"</span><span class="token operator">:</span><span class="token string">"普通角色"</span><span class="token punctuation">,</span>                <span class="token property">"roleKey"</span><span class="token operator">:</span><span class="token string">"common"</span><span class="token punctuation">,</span>                <span class="token property">"roleName"</span><span class="token operator">:</span><span class="token string">"普通角色"</span><span class="token punctuation">,</span>                <span class="token property">"roleSort"</span><span class="token operator">:</span><span class="token string">"2"</span><span class="token punctuation">,</span>                <span class="token property">"status"</span><span class="token operator">:</span><span class="token string">"0"</span><span class="token punctuation">,</span>                <span class="token property">"updateBy"</span><span class="token operator">:</span><span class="token string">"0"</span><span class="token punctuation">,</span>                <span class="token property">"updateTime"</span><span class="token operator">:</span><span class="token string">"2022-01-02 06:32:58"</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token punctuation">{</span>                <span class="token property">"createTime"</span><span class="token operator">:</span><span class="token string">"2022-01-06 22:07:40"</span><span class="token punctuation">,</span>                <span class="token property">"delFlag"</span><span class="token operator">:</span><span class="token string">"0"</span><span class="token punctuation">,</span>                <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"11"</span><span class="token punctuation">,</span>                <span class="token property">"remark"</span><span class="token operator">:</span><span class="token string">"嘎嘎嘎"</span><span class="token punctuation">,</span>                <span class="token property">"roleKey"</span><span class="token operator">:</span><span class="token string">"aggag"</span><span class="token punctuation">,</span>                <span class="token property">"roleName"</span><span class="token operator">:</span><span class="token string">"嘎嘎嘎"</span><span class="token punctuation">,</span>                <span class="token property">"roleSort"</span><span class="token operator">:</span><span class="token string">"5"</span><span class="token punctuation">,</span>                <span class="token property">"status"</span><span class="token operator">:</span><span class="token string">"0"</span><span class="token punctuation">,</span>                <span class="token property">"updateBy"</span><span class="token operator">:</span><span class="token string">"1"</span><span class="token punctuation">,</span>                <span class="token property">"updateTime"</span><span class="token operator">:</span><span class="token string">"2022-09-11 20:34:49"</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token punctuation">{</span>                <span class="token property">"createTime"</span><span class="token operator">:</span><span class="token string">"2022-01-16 14:49:30"</span><span class="token punctuation">,</span>                <span class="token property">"delFlag"</span><span class="token operator">:</span><span class="token string">"0"</span><span class="token punctuation">,</span>                <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"12"</span><span class="token punctuation">,</span>                <span class="token property">"roleKey"</span><span class="token operator">:</span><span class="token string">"link"</span><span class="token punctuation">,</span>                <span class="token property">"roleName"</span><span class="token operator">:</span><span class="token string">"友链审核员"</span><span class="token punctuation">,</span>                <span class="token property">"roleSort"</span><span class="token operator">:</span><span class="token string">"1"</span><span class="token punctuation">,</span>                <span class="token property">"status"</span><span class="token operator">:</span><span class="token string">"0"</span><span class="token punctuation">,</span>                <span class="token property">"updateTime"</span><span class="token operator">:</span><span class="token string">"2022-01-16 16:05:09"</span>            <span class="token punctuation">}</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token property">"user"</span><span class="token operator">:</span><span class="token punctuation">{</span>            <span class="token property">"email"</span><span class="token operator">:</span><span class="token string">"weq@2132.com"</span><span class="token punctuation">,</span>            <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"14787164048663"</span><span class="token punctuation">,</span>            <span class="token property">"nickName"</span><span class="token operator">:</span><span class="token string">"sg777"</span><span class="token punctuation">,</span>            <span class="token property">"sex"</span><span class="token operator">:</span><span class="token string">"0"</span><span class="token punctuation">,</span>            <span class="token property">"status"</span><span class="token operator">:</span><span class="token string">"0"</span><span class="token punctuation">,</span>            <span class="token property">"userName"</span><span class="token operator">:</span><span class="token string">"sg777"</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"msg"</span><span class="token operator">:</span><span class="token string">"操作成功"</span><span class="token punctuation">}</span></code></pre><h5 id="5-26-2-2-更新用户信息接口"><a href="#5-26-2-2-更新用户信息接口" class="headerlink" title="5.26.2.2 更新用户信息接口"></a>5.26.2.2 更新用户信息接口</h5><table><thead><tr><th>请求方式</th><th>请求路径</th><th>是否需求token头</th></tr></thead><tbody><tr><td>PUT</td><td>/system/user</td><td>是</td></tr></tbody></table><p>请求体：</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>    <span class="token property">"email"</span><span class="token operator">:</span><span class="token string">"weq@2132.com"</span><span class="token punctuation">,</span>    <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"14787164048663"</span><span class="token punctuation">,</span>    <span class="token property">"nickName"</span><span class="token operator">:</span><span class="token string">"sg777"</span><span class="token punctuation">,</span>    <span class="token property">"sex"</span><span class="token operator">:</span><span class="token string">"1"</span><span class="token punctuation">,</span>    <span class="token property">"status"</span><span class="token operator">:</span><span class="token string">"0"</span><span class="token punctuation">,</span>    <span class="token property">"userName"</span><span class="token operator">:</span><span class="token string">"sg777"</span><span class="token punctuation">,</span>    <span class="token property">"roleIds"</span><span class="token operator">:</span><span class="token punctuation">[</span>        <span class="token string">"11"</span>    <span class="token punctuation">]</span><span class="token punctuation">}</span></code></pre><p>响应格式：</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>    <span class="token property">"code"</span><span class="token operator">:</span><span class="token number">200</span><span class="token punctuation">,</span>    <span class="token property">"msg"</span><span class="token operator">:</span><span class="token string">"操作成功"</span><span class="token punctuation">}</span></code></pre><h3 id="5-27-分页查询分类列表"><a href="#5-27-分页查询分类列表" class="headerlink" title="5.27 分页查询分类列表"></a>5.27 分页查询分类列表</h3><h4 id="5-27-1-需求"><a href="#5-27-1-需求" class="headerlink" title="5.27.1 需求"></a>5.27.1 需求</h4><p>​需要分页查询分类列表。</p><p>​能根据分类名称进行模糊查询。</p><p>​能根据状态进行查询。</p><h4 id="5-27-2-接口设计"><a href="#5-27-2-接口设计" class="headerlink" title="5.27.2 接口设计"></a>5.27.2 接口设计</h4><table><thead><tr><th>请求方式</th><th>请求路径</th><th>是否需求token头</th></tr></thead><tbody><tr><td>GET</td><td>content/category/list</td><td>是</td></tr></tbody></table><p>Query格式请求参数：</p><p>pageNum: 页码</p><p>pageSize: 每页条数</p><p>name：分类名</p><p>status: 状态</p><p>响应格式：</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>    <span class="token property">"code"</span><span class="token operator">:</span><span class="token number">200</span><span class="token punctuation">,</span>    <span class="token property">"data"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"rows"</span><span class="token operator">:</span><span class="token punctuation">[</span>            <span class="token punctuation">{</span>                <span class="token property">"description"</span><span class="token operator">:</span><span class="token string">"wsd"</span><span class="token punctuation">,</span>                <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"1"</span><span class="token punctuation">,</span>                <span class="token property">"name"</span><span class="token operator">:</span><span class="token string">"java"</span><span class="token punctuation">,</span>                <span class="token property">"status"</span><span class="token operator">:</span><span class="token string">"0"</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token punctuation">{</span>                <span class="token property">"description"</span><span class="token operator">:</span><span class="token string">"wsd"</span><span class="token punctuation">,</span>                <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"2"</span><span class="token punctuation">,</span>                <span class="token property">"name"</span><span class="token operator">:</span><span class="token string">"PHP"</span><span class="token punctuation">,</span>                <span class="token property">"status"</span><span class="token operator">:</span><span class="token string">"0"</span>            <span class="token punctuation">}</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token property">"total"</span><span class="token operator">:</span><span class="token string">"2"</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"msg"</span><span class="token operator">:</span><span class="token string">"操作成功"</span><span class="token punctuation">}</span></code></pre><h3 id="5-28-新增分类"><a href="#5-28-新增分类" class="headerlink" title="5.28 新增分类"></a>5.28 新增分类</h3><h4 id="5-28-1-需求"><a href="#5-28-1-需求" class="headerlink" title="5.28.1 需求"></a>5.28.1 需求</h4><p>​需要新增分类功能</p><h4 id="5-28-2-接口设计"><a href="#5-28-2-接口设计" class="headerlink" title="5.28.2 接口设计"></a>5.28.2 接口设计</h4><table><thead><tr><th>请求方式</th><th>请求路径</th><th>是否需求token头</th></tr></thead><tbody><tr><td>POST</td><td>/content/category</td><td>是</td></tr></tbody></table><p>请求体：</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>    <span class="token property">"name"</span><span class="token operator">:</span><span class="token string">"威威"</span><span class="token punctuation">,</span>    <span class="token property">"description"</span><span class="token operator">:</span><span class="token string">"是的"</span><span class="token punctuation">,</span>    <span class="token property">"status"</span><span class="token operator">:</span><span class="token string">"0"</span><span class="token punctuation">}</span></code></pre><p>响应格式：</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>    <span class="token property">"code"</span><span class="token operator">:</span><span class="token number">200</span><span class="token punctuation">,</span>    <span class="token property">"msg"</span><span class="token operator">:</span><span class="token string">"操作成功"</span><span class="token punctuation">}</span></code></pre><h3 id="5-29-修改分类"><a href="#5-29-修改分类" class="headerlink" title="5.29 修改分类"></a>5.29 修改分类</h3><h4 id="5-29-1-需求"><a href="#5-29-1-需求" class="headerlink" title="5.29.1 需求"></a>5.29.1 需求</h4><p>​需要提供修改分类的功能</p><h4 id="5-29-2-接口设计"><a href="#5-29-2-接口设计" class="headerlink" title="5.29.2 接口设计"></a>5.29.2 接口设计</h4><h5 id="5-29-2-1-根据id查询分类"><a href="#5-29-2-1-根据id查询分类" class="headerlink" title="5.29.2.1 根据id查询分类"></a>5.29.2.1 根据id查询分类</h5><table><thead><tr><th>请求方式</th><th>请求路径</th><th>是否需求token头</th></tr></thead><tbody><tr><td>Get</td><td>content/category/{id}</td><td>是</td></tr></tbody></table><p>Path格式请求参数：</p><p>id: 分类id</p><p>响应格式：</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>    <span class="token property">"code"</span><span class="token operator">:</span><span class="token number">200</span><span class="token punctuation">,</span>    <span class="token property">"data"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"description"</span><span class="token operator">:</span><span class="token string">"qwew"</span><span class="token punctuation">,</span>        <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"4"</span><span class="token punctuation">,</span>        <span class="token property">"name"</span><span class="token operator">:</span><span class="token string">"ww"</span><span class="token punctuation">,</span>        <span class="token property">"status"</span><span class="token operator">:</span><span class="token string">"0"</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"msg"</span><span class="token operator">:</span><span class="token string">"操作成功"</span><span class="token punctuation">}</span></code></pre><h5 id="5-29-2-2-更新分类"><a href="#5-29-2-2-更新分类" class="headerlink" title="5.29.2.2 更新分类"></a>5.29.2.2 更新分类</h5><table><thead><tr><th>请求方式</th><th>请求路径</th><th>是否需求token头</th></tr></thead><tbody><tr><td>PUT</td><td>/content/category</td><td>是</td></tr></tbody></table><p>请求体：</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>    <span class="token property">"description"</span><span class="token operator">:</span><span class="token string">"是的"</span><span class="token punctuation">,</span>    <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"3"</span><span class="token punctuation">,</span>    <span class="token property">"name"</span><span class="token operator">:</span><span class="token string">"威威2"</span><span class="token punctuation">,</span>    <span class="token property">"status"</span><span class="token operator">:</span><span class="token string">"0"</span><span class="token punctuation">}</span></code></pre><p>响应格式：</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>    <span class="token property">"code"</span><span class="token operator">:</span><span class="token number">200</span><span class="token punctuation">,</span>    <span class="token property">"msg"</span><span class="token operator">:</span><span class="token string">"操作成功"</span><span class="token punctuation">}</span></code></pre><h3 id="5-30-删除分类"><a href="#5-30-删除分类" class="headerlink" title="5.30 删除分类"></a>5.30 删除分类</h3><h4 id="5-30-1-需求"><a href="#5-30-1-需求" class="headerlink" title="5.30.1 需求"></a>5.30.1 需求</h4><p>​删除某个分类（逻辑删除）</p><h4 id="5-30-2-接口设计"><a href="#5-30-2-接口设计" class="headerlink" title="5.30.2 接口设计"></a>5.30.2 接口设计</h4><table><thead><tr><th>请求方式</th><th>请求路径</th><th>是否需求token头</th></tr></thead><tbody><tr><td>DELETE</td><td>/content/category/{id}</td><td>是</td></tr></tbody></table><p>Path请求参数：</p><p>id：要删除的分类id</p><p>响应格式：</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>    <span class="token property">"code"</span><span class="token operator">:</span><span class="token number">200</span><span class="token punctuation">,</span>    <span class="token property">"msg"</span><span class="token operator">:</span><span class="token string">"操作成功"</span><span class="token punctuation">}</span></code></pre><h3 id="5-31-分页查询友链列表"><a href="#5-31-分页查询友链列表" class="headerlink" title="5.31 分页查询友链列表"></a>5.31 分页查询友链列表</h3><h4 id="5-31-1-需求"><a href="#5-31-1-需求" class="headerlink" title="5.31.1 需求"></a>5.31.1 需求</h4><p>​需要分页查询友链列表。</p><p>​能根据友链名称进行模糊查询。</p><p>​能根据状态进行查询。</p><h4 id="5-31-2-接口设计"><a href="#5-31-2-接口设计" class="headerlink" title="5.31.2 接口设计"></a>5.31.2 接口设计</h4><table><thead><tr><th>请求方式</th><th>请求路径</th><th>是否需求token头</th></tr></thead><tbody><tr><td>GET</td><td>/content/link/list</td><td>是</td></tr></tbody></table><p>Query格式请求参数：</p><p>pageNum: 页码</p><p>pageSize: 每页条数</p><p>name：友链名</p><p>status:状态</p><p>响应格式：</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>    <span class="token property">"code"</span><span class="token operator">:</span><span class="token number">200</span><span class="token punctuation">,</span>    <span class="token property">"data"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"rows"</span><span class="token operator">:</span><span class="token punctuation">[</span>            <span class="token punctuation">{</span>                <span class="token property">"address"</span><span class="token operator">:</span><span class="token string">"https://www.baidu.com"</span><span class="token punctuation">,</span>                <span class="token property">"description"</span><span class="token operator">:</span><span class="token string">"sda"</span><span class="token punctuation">,</span>                <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"1"</span><span class="token punctuation">,</span>       <span class="token property">"logo"</span><span class="token operator">:</span><span class="token string">"https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fn1.itc.cn%2Fimg8%2Fwb%2Frecom%2F2016%2F05%2F10%2F146286696706220328.PNG&amp;refer=http%3A%2F%2Fn1.itc.cn&amp;app=2002&amp;size=f9999,10000&amp;q=a80&amp;n=0&amp;g=0n&amp;fmt=jpeg?sec=1646205529&amp;t=f942665181eb9b0685db7a6f59d59975"</span><span class="token punctuation">,</span>                <span class="token property">"name"</span><span class="token operator">:</span><span class="token string">"sda"</span><span class="token punctuation">,</span>                <span class="token property">"status"</span><span class="token operator">:</span><span class="token string">"0"</span>            <span class="token punctuation">}</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token property">"total"</span><span class="token operator">:</span><span class="token string">"1"</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"msg"</span><span class="token operator">:</span><span class="token string">"操作成功"</span><span class="token punctuation">}</span></code></pre><h3 id="5-32-新增友链"><a href="#5-32-新增友链" class="headerlink" title="5.32 新增友链"></a>5.32 新增友链</h3><h4 id="5-32-1-需求"><a href="#5-32-1-需求" class="headerlink" title="5.32.1 需求"></a>5.32.1 需求</h4><p>​需要新增友链功能</p><h4 id="5-32-2-接口设计"><a href="#5-32-2-接口设计" class="headerlink" title="5.32.2 接口设计"></a>5.32.2 接口设计</h4><table><thead><tr><th>请求方式</th><th>请求路径</th><th>是否需求token头</th></tr></thead><tbody><tr><td>POST</td><td>/content/link</td><td>是</td></tr></tbody></table><p>请求体：</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>    <span class="token property">"name"</span><span class="token operator">:</span><span class="token string">"sda"</span><span class="token punctuation">,</span>    <span class="token property">"description"</span><span class="token operator">:</span><span class="token string">"weqw"</span><span class="token punctuation">,</span>    <span class="token property">"address"</span><span class="token operator">:</span><span class="token string">"wewe"</span><span class="token punctuation">,</span>    <span class="token property">"logo"</span><span class="token operator">:</span><span class="token string">"weqe"</span><span class="token punctuation">,</span>    <span class="token property">"status"</span><span class="token operator">:</span><span class="token string">"2"</span><span class="token punctuation">}</span></code></pre><p>响应格式：</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>    <span class="token property">"code"</span><span class="token operator">:</span><span class="token number">200</span><span class="token punctuation">,</span>    <span class="token property">"msg"</span><span class="token operator">:</span><span class="token string">"操作成功"</span><span class="token punctuation">}</span></code></pre><h3 id="5-33-修改友链"><a href="#5-33-修改友链" class="headerlink" title="5.33 修改友链"></a>5.33 修改友链</h3><h4 id="5-33-1-需求"><a href="#5-33-1-需求" class="headerlink" title="5.33.1 需求"></a>5.33.1 需求</h4><p>​需要提供修改友链的功能</p><h4 id="5-33-2-接口设计"><a href="#5-33-2-接口设计" class="headerlink" title="5.33.2 接口设计"></a>5.33.2 接口设计</h4><h5 id="5-33-2-1-根据id查询友联"><a href="#5-33-2-1-根据id查询友联" class="headerlink" title="5.33.2.1 根据id查询友联"></a>5.33.2.1 根据id查询友联</h5><table><thead><tr><th>请求方式</th><th>请求路径</th><th>是否需求token头</th></tr></thead><tbody><tr><td>Get</td><td>content/link/{id}</td><td>是</td></tr></tbody></table><p>Path格式请求参数：</p><p>id: 友链id</p><p>响应格式：</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>    <span class="token property">"code"</span><span class="token operator">:</span><span class="token number">200</span><span class="token punctuation">,</span>    <span class="token property">"data"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"address"</span><span class="token operator">:</span><span class="token string">"wewe"</span><span class="token punctuation">,</span>        <span class="token property">"description"</span><span class="token operator">:</span><span class="token string">"weqw"</span><span class="token punctuation">,</span>        <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"4"</span><span class="token punctuation">,</span>        <span class="token property">"logo"</span><span class="token operator">:</span><span class="token string">"weqe"</span><span class="token punctuation">,</span>        <span class="token property">"name"</span><span class="token operator">:</span><span class="token string">"sda"</span><span class="token punctuation">,</span>        <span class="token property">"status"</span><span class="token operator">:</span><span class="token string">"2"</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"msg"</span><span class="token operator">:</span><span class="token string">"操作成功"</span><span class="token punctuation">}</span></code></pre><h5 id="5-33-2-2-修改友链"><a href="#5-33-2-2-修改友链" class="headerlink" title="5.33.2.2 修改友链"></a>5.33.2.2 修改友链</h5><table><thead><tr><th>请求方式</th><th>请求路径</th><th>是否需求token头</th></tr></thead><tbody><tr><td>PUT</td><td>/content/link</td><td>是</td></tr></tbody></table><p>请求体：</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>    <span class="token property">"address"</span><span class="token operator">:</span><span class="token string">"https://www.qq.com"</span><span class="token punctuation">,</span>    <span class="token property">"description"</span><span class="token operator">:</span><span class="token string">"dada2"</span><span class="token punctuation">,</span>    <span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"2"</span><span class="token punctuation">,</span>    <span class="token property">"logo"</span><span class="token operator">:</span><span class="token string">"https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fn1.itc.cn%2Fimg8%2Fwb%2Frecom%2F2016%2F05%2F10%2F146286696706220328.PNG&amp;refer=http%3A%2F%2Fn1.itc.cn&amp;app=2002&amp;size=f9999,10000&amp;q=a80&amp;n=0&amp;g=0n&amp;fmt=jpeg?sec=1646205529&amp;t=f942665181eb9b0685db7a6f59d59975"</span><span class="token punctuation">,</span>    <span class="token property">"name"</span><span class="token operator">:</span><span class="token string">"sda"</span><span class="token punctuation">,</span>    <span class="token property">"status"</span><span class="token operator">:</span><span class="token string">"0"</span><span class="token punctuation">}</span></code></pre><p>响应格式：</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>    <span class="token property">"code"</span><span class="token operator">:</span><span class="token number">200</span><span class="token punctuation">,</span>    <span class="token property">"msg"</span><span class="token operator">:</span><span class="token string">"操作成功"</span><span class="token punctuation">}</span></code></pre><h3 id="5-34-删除友链"><a href="#5-34-删除友链" class="headerlink" title="5.34 删除友链"></a>5.34 删除友链</h3><h4 id="5-34-1-需求"><a href="#5-34-1-需求" class="headerlink" title="5.34.1 需求"></a>5.34.1 需求</h4><p>​删除某个友链（逻辑删除）</p><h4 id="5-34-2-接口设计"><a href="#5-34-2-接口设计" class="headerlink" title="5.34.2 接口设计"></a>5.34.2 接口设计</h4><table><thead><tr><th>请求方式</th><th>请求路径</th><th>是否需求token头</th></tr></thead><tbody><tr><td>DELETE</td><td>/content/link/{id}</td><td>是</td></tr></tbody></table><p>Path请求参数：</p><p>id：要删除的友链id</p><p>响应格式：</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>    <span class="token property">"code"</span><span class="token operator">:</span><span class="token number">200</span><span class="token punctuation">,</span>    <span class="token property">"msg"</span><span class="token operator">:</span><span class="token string">"操作成功"</span><span class="token punctuation">}</span></code></pre><p>n.net)](<a href="https://huaweicloud.csdn.net/63875245dacf622b8df8ab7b.html?spm=1001.2101.3001.6650.1&amp;utm_medium=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~activity-1-117690491-blog-102835832.235%5Ev38%5Epc_relevant_sort_base1&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~activity-1-117690491-blog-102835832.235%5Ev38%5Epc_relevant_sort_base1&amp;utm_relevant_index=2">https://huaweicloud.csdn.net/63875245dacf622b8df8ab7b.html?spm=1001.2101.3001.6650.1&amp;utm_medium=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~activity-1-117690491-blog-102835832.235^v38^pc_relevant_sort_base1&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~activity-1-117690491-blog-102835832.235^v38^pc_relevant_sort_base1&amp;utm_relevant_index=2</a>)</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 项目 </tag>
            
            <tag> 前后端分离 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>个人博客搭建教程</title>
      <link href="/KyrieCBlog/2023/09/24/personal_blog/"/>
      <url>/KyrieCBlog/2023/09/24/personal_blog/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="46db25fc4d29f3304af5587b859250d785213d6a32f1f4b2dfd03ed0e2aea5cc">55dc79e30b39ac1c5b611142958f086e6143191314713712ef21c9b47369ecfed1c6715201e6e53a53e0368d2f5fa47a1b136c3d246c19ce8a8f465d65b46343df63a3f219666f68ecc0719c09d67b0d4019be8f660bb17240548caf6cab95186fcc5e027e043b2290c87f2b5f4ff198db6aa63d24bda9dee9057cdf6b1cda99e78ff3f11d908b94dcf2efa575a30ffe0ed522a9d59defe0352cb3f1262d30cb1c91e187af7cba3da496e791af312e1b23fc04555b9b1605c66a70379bef3847dafe029046f9125b5c1ea89bb95db12492e9394d7d1c2aff262ab3bb991d6c3db289c8256ccf656e0d1d0b95e2e284f12ad792cb7b9926c1f520f549e62f5c7827e354f240ed681fe1789f1f26739c1940cd6548b541194c19ec042e8e57eafa75171bde84a342a1d48b3c427d18cb6376f7b0242672b42d629ef2e295ae68598552d78c50e24468693ee57a6678267aa4c4e03a3c1880ebbae9e5127eb073fe6381d52bb79a971c01976bc03d1aa31e480ed50c27a2ab59bf51a966589f3d3ab26590cf344644bcece84a6ee5da93b823dcae1631da8f5c0752cba9976792d001e144ce7e7333cd02e2eff507c664667882ed8808f4a26b63ebebb041effb8e961371915ca35eb0ac55ce1465982105aa9f8adfe22432aaee654955f57e48812a7d997c132bae0c81cfc89036f9d74b93042d9e97ce48de9e69245c09a0cd1597abc81d2c91df9288544864e314f99712f1c0b82fb7a8b1cc52197daeda488b6c19ca1be932225a909e2255d85f7b89fc49d99fbd5c5c8a6fbf21515fa24d69dfc89b1bc300624f9607f1e1dfcdb64ba109be98e151558c817e4c0f8f8de77a3919d31299a764128fbd3a3ba9a61a92ce19e68af922ca3a0dd99f4bc9cd55a210cf2cb76febbfd37397c7fae1915d06051e8d9e4107686d5c0bbba6d798de4457ca9b168c191dec0e5989d68bbaa8a96be91767bc48e22a0dc0c2bd784762422640212531b308d2e6f141d6fa955e39d8b5ab7c66bd8ab2b0e2866bb98447e522bb185ffdf4216f752dc737c50029254bae90b98f854ee966e63847e93c3ec1ba0d0ae8607eb68a7ee9fa4807b0a1e716839e71f8580f8edbddd2fa2578fee29b3d9b53a30805b6f23221a19661899168ebf4fc93c1333ca1971003ba63e887a7a165141586dff170cf440c603c121f3e3f8f0188d7b07dfa2800166dcbb76df27f3add3ed5f5d8b05a07b2ed4a39149787d4741de408def80c12b0500796e9a4598192a01f2c184619b8da06584f3b174f81c233627b72fab0d44bfb1a3d6c15c3060b9d777ad18e734e7024d41392ca642ab1adcb63319d11d5f6a892d76c5907c8b0b3d39166c1c122528404e24cf540461f61a37835f4ada62cc072020df68a4ba60c43da2a58e1a195669ee6eee40b49789caf735f1dba346e9f9d110122e721b60badf58950b42aca04db5828c915ba63ea342c6c6ccfa021522070c63bc07b434be1d60bce7aaee824bd45d5dfdfc47c4024fd5c03a47f4290729c69e0dde2d21796ce9cf71d984cd998f42e2d1f3630d1a588cce858b50f2c3e2b67fefd8b2ee3d32454c39952a4b327805f7f744edf06ab29f2df8fe462306caa7944af1aa4f331be818716d9be35c4b045813b2658cd7257d3d5562f03249e6b7f5c14ad26124503b0c6c4cbf79dc84667062820acd03909e8f529d5f0eaa4ba98704382a1db00d6f4b01a3dccd00e0f308a98091d3c282f94eabee0ff824abf02b6e3e5b0be9700006a77b9b1b265b41c577a87a56cf9ecdb5b718d25bf510e664437c4f5d32fd160ad7206728791ae7b5053c603b1c917bbc72f907442cee9c88366c542f0de8cbb0ee6383276ccfce2bf4796589997e1eab883e58412ec4b102f0a7feb389f77ff2b2272f94f0e97f9ff1bb78e6870ff469ef30dded1e832e7e3138a5ec4ad5c9f0058a43e00a1ffa2f3963b765300cd1156b9e63e2f8ef2c25b9bd9c02708a4d4bf87ff75c76020eb34ab7c2a301fae97688f050c6932d89b7ae55ee322e99cb3210b1b50608bad1363e671a817b862d810e744a2d221f46b44a93b3bc236641cfe1c18765d0d4147d577461de19c90d0fe2b01646eca0289d75714ed68f5c85ed0d1924f567a58552c7c5b872e40c8f23205bdb81e7576a6d6047e6ce50329b80cbbfcd13d1fcaa9beb7134e2972fcef9463e725890100365b2a9a8df1c6bc06cad7282d40fc04e2ffe6839bbc3031d55910632874d7d50032f17b547201bc58962c06248c96668c5741f9d32a957131b828907a7a0833790c82c0fb08d07df5dd1f07dc0d211798c0cf0e2cb3b054b607d3a672b7051c26c37f8759460d861749409f3957015426358191c35cc4a2611c52e53a7b843de54f613e6072d4d9f8bf190d54e2959dd13886e05681609127ceeb37b5d866065af1d5b5035daadd9d328b5e524f384a7504812ccc135fc671843392b591d94a91022b423b8f1e493a39ebcae1d3a8f066f4d1468e14186b524f8fb4887d11eee057cf7263cd33fa1166a812a651fd78bd96998981df71bd55a99d5260d08b6dd2f3f376faa2078b24ee16c1aaad199f37319fd2fef2f668c8b8d0d1ab92edb2ce29c037966d90330885a2d49b2c429428d053b22e65d1416aa5fcca705f26f3f9fa012b75cccd2d771ecdf56ad363c4807a5734fed48a0d4cbde5bad0599c6fc1633f4dd58c423f195595de71d682222d1361d56d24a9837e8f435d843c017978476c878c7437de7b4dc18318379f326c291ce3120d924461d5c93464a7cc27d4cc6499abea06642093d634268ed873212b424a02ae29e2138fcf7cfb1dbd79428cb35659805befd9ecfc75eae09c71f1ff4104e34c0a8969f13768facd66bb12979e2613aedd53831b952a0e1dcd840e94b234e43032f8d614d55b99fda8d57192a6504db2640a6a44688266671fae27c8c8f0a145ab04f20ab1f3330843394f741ac7747957f4269535143f6fcf93ef617236a5143f80b166a1bc64025d58869670a2fd3cd1c1b5e7adc627e25205213ff03c8b4d1af21ead1ee7b0cf39214d67f2cc4e70dd4d7857683e29b8075646016f800e02034b7d487fcdb2a09c7d8ef0ea27165caa94a55581420d1f6c5dee320b50baeda7a39a48348ef7bdf315e4588837e4cf240d77f1e51149eeceb90afdbe3d35b1aae79669102b473295fc324f6255e0e32f6ea72460f45770891384f376d432058d176d83a6fbf8ac225abca0b880555a6d1e84d0a06621ab9fd276ad9b60005331dfada236e3ed88fffb4cc06b453802898d048a19f61f8737e16e400c90d31c4eeac8e0bc99e20f830cbd2682cadc3e40b343ffa30affa804050bc371b39d3c3ea530435ad1468219fb5dc276f10efe16983c5262104d0ed2ea3bdb8335ab00b95c5471266f16482c7e45ed6ed11eba41a4197eecee0f9daf7e16c8dd41417f519e72028441bae85e2b6db5e9ca35728f7f29a0ebee7f19cae9720ff6f0f0f10b76819fcfd615f0cfb0b87191e018892cfcc267c0c4c33f56b79951accde756c64683509af751f74c81d39604dea24fa6db8b794a7284c5c0c55499afc941a10c0936d29315d9f365933811909d51690f499496a124e9781bdfa437849dc4f98cf042f93af34ebb461399d7859e193995c3846a07798864c351540f830b8b9b5916477466e331419cecdbab86467f4b51ec4fd522b565aff4139bf2ab3bca02804015a578af2d04e6c95c3284ac8d1585dd224fa86105fc9f1de7714c05ea85d6dc757a5472d04a349222be944981250c5be931b6f62bad788ad644c4309aa2744b4ed6b48baf6cfc950b9a4b7c75a0e157bcd4219ad220eb932bfe8c4fc0fdb8130cdbd9e603448633c7727c015d1d4cf91907c060f1df3c7c762389b3a0ff027a0301cb3061fbec18a02e6005d0c41e2ca7af2bc7b80eba9aa33fb573cd6d31837cb0842ab567a9b27d3685cae0512d629ff02a56e2f8635733104f2c46207f2ce54928b1049428d2b934ee74c8203a8c0644ad4b4286fe2304c435f512a60be12dfa1da0a6d7499500dfe2b00e2437d9990209e8602fee9c81802e6fb0bece460145e227f7c5af298e62636c4c62916316d1be18c507c683b230d500918c4da6f28df88d48e7dfe90f96a41b0c7f57e8b6d0f88326c77efa946abb10665a3053d504c257a45723e1b5a6208495c39e2ceb7a019dfa54a24b2cfab4dc69bfae38d6659e67bdc895752863ff8150e06554a6bc5dc23a8efec70f9011fa0606915c5dce5a6812edea6f23c21b826d5b102728e45062b26637bea8bd3daffb0fec4e31bd435383718616390fe65ba832ee8f2c7f2c23cd073c762c630fd615a3477dbc6f2378563c75567242285c4b86d472b5abfea399f5220c244e19eaa0c982e4bcbf28cd9c72a6c60dd39481fc2f7ca7e75a06ec45c45ff37bd1f2813ca5bf3c6a5bbd8c6c18012a1287b04bbd2db6ea9ff5a06f843563506f09064ca4eafd97c5d3c288df7de6ae1752ece4fa852895fcc7fed9d1b65f4a85291b53f30988990ddf3bc56d4f56cfe2d738d24e96e895afd6d7e950935ba34c01d64b05ce8ccfe1ea6e9622d75f222eaa8221e1b272a443efdd9655fd6262e0cdb2fd3abb5c7138fcea2883147a767e541787272cd2b9fa4d57bf88f44badce75916f45dcab06fffa74e4bb09da5ef94138aff9182ce2b4c7380e37f6a501e00c3172f01fea04ce451b1c33a610057f3042aec0e168ac06dc587cdddf34c3b617a90a43d57e7e730a95f42ac189c1dc262262d88a95c435b119a68acad03bbb3a5559f165e0142e6c4c696d1eb3f69c9ade9f29033a2372a466a552c4e87596edb8583f66994954f389c8e73a99823ef8fe0e87cf2e4e1c19458d91099b1081fb8d3ff3aa4f0a9cb647f0c748a831501982b25641ae1a3399107783f4a2a0c77972cf2db0b931e41d7e7bcebca69a41fc898c3900808a5a9c8f06176f6c7acbedfd56370fbeeb9fcd4cddf163aa5907eb356d85b8daafe42b5b86f7e55afbcb82084b8af8ce7d8ede4f0d4d6ab02fc1243abc3a55dbf94102f5a350438b741f</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">要查看需要先输入密码哦</span>      </label>    </div>  </div></div><script data-pjax src="/KyrieCBlog/lib/hbe.js"></script><link href="/KyrieCBlog/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> web前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>英语学习笔记</title>
      <link href="/KyrieCBlog/2023/09/22/englisth_study/"/>
      <url>/KyrieCBlog/2023/09/22/englisth_study/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="90bbf168779eaf5d7b6a0db96f78e45f379777ecfb5bd66cceb46301239ba3c8"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请输入该文章密码</span>      </label>    </div>  </div></div><script data-pjax src="/KyrieCBlog/lib/hbe.js"></script><link href="/KyrieCBlog/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习 </tag>
            
            <tag> 英语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一亿字真诚检讨</title>
      <link href="/KyrieCBlog/2023/09/22/%E4%B8%80%E4%BA%BF%E5%AD%97%E6%A3%80%E8%AE%A8%E4%B9%A6/"/>
      <url>/KyrieCBlog/2023/09/22/%E4%B8%80%E4%BA%BF%E5%AD%97%E6%A3%80%E8%AE%A8%E4%B9%A6/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="e04a9c8353bad381df8b4e299fbcb9004a845ac3ab19e0eef4dffa8b40477d61">6d8f94f8ed1a3c4f4fd85135ba6e13420f2f41b903c229f2b67ec1f23ab78efbb340046494743850c0bff181dab6497569edd29468e6f9cfe09b60d2b5084f81b754fb268bf8061c3afbeafbcf1808275ec9352738b183b55f274cd2528e1d4193bc215853c29023f0c281ad653367c64861e50869ddf5e843da446e580e0dc426e731a30bef6b3dab44f5c42cf3723c19305b343d3ae850b4a6173126928f9d4cc63e4f78e3447fd85940cca5b6396b386edb54be73e5d669148328b36a2e2d7849fc5c712c4025e95a585b02285d0daf7fe3a259d62da01c340f24fea34a2ddff29d8aa70ad526811b5464726cdfaf7d8af0a3f751b9513561110b49904f8fbc17c7aa75852a0e13429d20ecd774824eac3082903597e763ce9615cc0b04957119431e4dd2f95c9fee1a6aa7eefcab1de89c216005117be4b92321ebfe426cb505ce9a7fddaca7bff1a9debf7e73cc75da76f1293e9a06d91747bfd618861c0ae1c032cb9659cbdbf46eb6c6d05f67a181f5fbbcad97a4e11eddd0c1c42818c918156508fcca1a2e5fbcce738992c01738aa762075535007729e5b3367f86374551cf1d961954aac4584c0ae5251ac4105017bbcf63268f17dc9200b0b0542a70ef34a6b15690e0d1d4c076b46a13fb2918a56e3e6bc16ef5a27f38e157351f694ce5b830744c233ef6e474f02473922eb92f1b1e60b90f2232571dfa4e2f8c923cbcb63f676f84667c3dc43600118c3596c043f97bd455de22c359f9fecb0280b774092a71fcc4fd83444adb0c38e619f22c1c26455f990d420b2ef8a9398b3fb099ca0fce7dcd47f502507d9952bfbbb598dd755dea4e77c08c2d5ceac6365a0f45fcc5c39492db6dca0e62ebd1e9abac01491b703705c574bcc153b9b3d0d5ada329a8aff8fe037c8b5a1b8cbde0768be1856f385f8b3b9cc2e9c1cb1225fb3066c127a31a93c82389069ca250dec12f2f5f238c7df4dc2cd229ebee1ba0a7342ec4e605ded323a63f62a7b561ea1d5f8f7221cd8b785a1374fe10f87633a8adccf6598dc0aa18e73993d6b50739583be6b0021fe5d35d2f18f6ab53549a2c22a24b67656c82b11fdbfb7226b852439f244a3d922d79c7fbfb55c9f6895fc7070e80ad672461c0876b4bf8fb0905609ccf7149cedabf84a494620b07bd058bad690a2a4ec3bf28d824cdec827f11ff9aae2f6f8982c5bdc22809ee5acb36298f785507e5d6e6ad2a3b7ffed0b6cbc5041a8cc146771d36777c578e9deb5e1cd6da58449eec5406c4429be2f3dec6cceed2243d1b10b1724d2384af8cfa4d9669e9622aed8f977f274f1762f7c2fc219c6a1fc22874498ac8f6bc84aac8cebf4cb9aefedcaa04f40db787be6385c8b674b0031d290221ceb987dc8bfda24262bbc3fd416ee2ef1cb127d63eda30b92d9ab4a5f4867b6cb76d3ce40aced89c7dc96db0402b7e93822ade7bb3460838c8b9e253f5fc463805ca1d72a2401c808d525129e4c92fe7474cae5c72455aaaa1d91680362a7e6c6b9f5448c79f433a57f927e9f330a2659b22281290ce4e513de75f84924f202f7c191b3999b23c7ba0b14ae9b39aa0ad44d8d33cb58ee800c1fa931acc9b0e7d9a513a47af93fffa7231d02c36e9a19c9ce9a1338ff6a47446a7feac59d6a4f4bd2600887b03bcadcff8af7d40d758e56c20446b77d75a155bb53dea53ebe84c958611499a59e5504a65fba3510d98feeb2de561429d3da08cf946dce4fb0ffdfba9dfa82b1c711cfb8237eb6d0600930e93d29a249715c3543e2c5e9ce4d9d05c92aceb9b9e1da6bb6635ffecfa57998eededbe48e1f35a68cb26d348f855a5151089e16bcdd71fa2a0337e2cf7babcdb0e5050c0237264cb149ff1d7fd4d04d22de4e24d47cce0367741ce74459030cb10599c54e8c91d01f207b7c38228e127f287eae1a79eb581453b929503517fff52b1e067396876e98b002df197039ed59eded224785b9444042f9dad5bf9ee1c6f99e8fdeaf7dc468864824b48239c66edf0a8a26bea605988c4e33aa202ad6088136702b765768586cf1dca7e4fd42709fb779a6e4af57735c5589ac5e5519b3208401738f9dc361142cefbaa5d11f36d159dbe1642f57ee4918a59e2db8f2eab8ffc927544a5e84592b50a6aec26310738672f6d40b24b9f68aa874d5f6ca5b1387bf95b871db57f7e789f5faec6452cd826cb08672580386c9299e64a47bc0c519f3b0470b74f9be2fb543d6935f95a2642983643355226472edb7c470a2f14e9abb4360d822bcfb38a84df26cf8c4569fa5a9e223fd908d8e114f44cf19567658d496a65bd9517d752f97991964bc62b78ec64ad5654649485bf0d76632dc4854e06c3fd1fd6d64e7fa76305e307575c87c936ed914db84237f6da2ef04ae6a845a1229d0814fe15a1158a3e5513d82fdc57244c11c6c247a360cf79289bd7c41a186ae77faba77b26dbd5af32677e9bf2c48906fd900014cc4b9957cdc132f8369fd232c293f2902ac666c83aee4360babc5b7424860518c1bca53296902ce4fe17c6b9c8e3433623348ab3cb3c8fc5c843aa6e33a0d3ddf059a031ea4cd61d6a68873a98774d82d5a8eee334dd1e3e607a48e788426eeb8a3984f8e6868ae6a1a2541674ffff9930fb3368ca33ccde03d63f08c7a5ed1a29756cecd4ba0354a0c2966092f9fb96cc6c6d4122675ec037978e425b1dc0179e732a879baafe69f9c89f7e6dfd4297de81c5c34d3dbf5bfa6cc9cea8839c7fdd20a6e889591d6e0775879a50cbdc7313eebff2fb00d7eed9f23bab5d0a063543fcd35373812349c0b5c7da493a0f1631d25a90bbf8140478ad2c2f848ee613c09ac5ab05f71925d111212fe4cb9d394a2b316458f4c10c5072511c566ef22e62765d856cbd6c39a4008f9478895fcc8350da4355bccb0c571a1a1b5a522d1af3ccca433bce2bb7d0ec995a4462ec72fef42fdb88ed05703616f150fe0db1d7c43e20a47bfcf0c5b161de90a83895ea5f0617fde80bde902aea0c37c251ac20fa6f0b7375a04311029f69a64358d519b5480c33d330f9dfdd82e9f4251104639d7183926274c8864ee51bf2603cf478f3e7c6201b9fd41197392947c9bc820ee6e1a711a3e00d49ba6ee9b5934b39d5217ae8e3741a7813594b26d9e50ff3c205bed8d3ec04869a28fa2a870f04f7d818049607efbebba18c940e99e2d4dcfd84e1749ff134d166f0319d87f4dc2449e542e7f9ba34bdbe40545e0d90936cd1f72240ee77ef70bd243917406140a53deedf9c30b376b9c716de09610516992efa1a4fabe08da38f86941210a99b10d0cb7aac734c492c9743b288571725acccda1678aef9291c210add33e3078d890481229758da07e7bb070a445a4991d3f09f53867e390826509e5b94e0d24f3347d881810d0fdce3f8673cde35ae367a65cebb13b40cc25d2ab78aaa383637b170e60541eb3c8a7c06e93ce17372ce301bb289a8e4d3749ed9cf5e34492b6401fba9430dd47c3602a5fa8c5344567e570377da50b1a453e5e4a8f5d3b0979484061fd603f2a369c822a0980b2a79f44433f4ef117f53745f31e3790aba90ccdc02f24234d1b9615c0b4acd24127efa63e53eaec7b28448cb5a2ce548c310020ca3e1d6008cfcb74bf3c5a4280812772bbd96ce8f16d2d1bf5c6a762eb323dbe2fc154d193115d3c74c39950559c0368e42208b47239c006c2354c8ad5527ee1315b0d738fd43b3d4cfde9391c10ea3d7fcda21e41d34e087c397c1b3f743d2dbf27238e405e7c71da948e549a253e2f614796ab0b5f24714894594a4b9ef982d3384e6a49df9b82a43ada6947707c601b56a6fa07261b9d053504282af718cd6f99e621ab0d940d10fedaa8a836c4f8a8e31fecec2a5465b092af86763c61313443a9b3cc930aa9d2cb87bf0dd66e59a1bbe45a7e2b9711ab5a8cebd57bcefa2e642ff8923adcc4f1dff77c5618e02c5af946b3334feeaed7a5de54f41b98cc6b2f1cc8bbe7170ea814848d08b6726000377c8a47810fc8705fa90f317e385da9008b12c2e856781534c181b689556c8611111eacfd85728b06d454fe939d45e1a338222793d436a532e8ba4c93995c292eecce61db5e5bbfc48f6515fa35cce9847e44dcbc9833d545e56d873cf1df76ebffd4feabb0017f429e4f8a37582dea9c6f4bf8c9c8c5f0a3df92428725f1f7af1632f53d31a8b6016e5ca1c86984da81706972256a36140bbd68d53bd7a2d68791b253186bf9a875b6cc56c6b0f00e57df43d31164f532d50854ea37cb5087cc522d75210d7a6699c30e2ca2f6f82e147e85c99337e3c164e0cbee7013e27fada1a6608c6c8d8118ef78fbe09cd9f9e10a48f496ba6c2308b598363ee51e4d47d7d54d257372fac278b8d9171e4e3bc8ec25d7d51067c2b4284926c4633167ac530460ae5f3cd8bce58924a187ad7da2658269386c169815d44cb081448dba37259f79d313f511025eb1ad834b9d300fbffea2043888aed4d2f43abe02e0615e48d920fed5bbd56f3e445d2041c0f8a3a275dfda6f7a4347b8f935454a59f613f78dbee4f0829449d61cfbbb22022fe5cffb66f4f0ba3c03d3ce6bdd3d4ea109b67ebd55a22a23b15335b2f45e496227498fb24cc5af06277df582169e1a5bfe7e27da8b8795922e3d57d407224fde52c1b6f992fc840bf0d20519cffd4c840fa1f8d9c117315dd841e3187213c52b34fe51130a9cd435d98c404f4bc9379e8fb003974b7c992e66bde53cf8b21de7937ff32f8d3f9998682feab38ef20ee4355cb73d73fb8179d7343a38f0f803d9d42bee21d71fbd92b5e555c4f2b6bcfca97d55c7eb001cd746ab52c8b7848bd38d4447413a4ec0497df95303d001cacf9acab0adde5b27c0257747da3b671ae5749cc7176b7f20d93ddb1a79949ef4e9f6b530eb53aa4ab2a4c47dea4b11a02bef3649bc55bdbe1a6301373bca9a4bff066505550f864a134fa43a34ca8e83e4fffedaaa0effeafa08c438c3c0b10364de2578f41ee7539ae45413705a7572b211e566d5ab46ad899ada030100440535e43785ba553516ec8c6d72010eb9aca2b08fcba8c5197b781e47140436693679d6770f649ad8bd46a96699f0084683068c3b7ebf23c182d937c8b1280ac14835cb2c0ecfa639fbb7eadb4cc38ea52a91dbe792b2a7dbb12ec94fd98215ca02eee9703a025e6a831bdb64cc728da766d85d53cdd3b49b99a3f2cf1839a13cbf8b22d011f269eae2d19c7674ebbfa48dd599f3ba5026a814f3cd4f13095661a1a0c228ea213fbea512686deb694d98e297dda283cbe6d3d8823e5fbb392f20c48d1bafba2690ec313c0e55c335f97ddf9e491bc4b1c17b45eb5ad55166ce1fa4f1f6758e68e4d6c85017a388a60c02132888df6d721f01eb302ff0d21dd10d259527c01619386877d80d49c5125518844651061e2bdf6bc9993c4fc6e9d1c0a519a12541c6fcd15d02879fc02aa670cbdf5b6b6a0a963143ba102d8e47d4eac8d61e8414958739171a454fbafd5ca52cabb7114eed0c26965c7d643b1216f2b8757ea9fa765b4326323c18a55f9d20373e24f45856259b447f65af40cf136f6f702adce4eb84c72b4fad45f763d0c3405912cd575098ae74e398c4bf1ed5e8ad5f25b36a909844f37e07483bd07c937fc8324d5505141ff53aabfb80cca2839a9a50839b40778cc22e0d6ef7236ea066c8e3ba6b159d4a8d5a41eae8cdd42bdf33177c6acbdb2f523604560cf24999100a093ec8085dd3e7c72f8c06e44294c0ab2ba3e4406e0a52f922c4f46676154c766c8abd102d6e1d5ba5aff96b4df55d5a2c0d5dcc47d215b08a3757cc58b3407427191fc3dbb46f648793db40fd43ba4f066d3fd43503ef6ab3f6e3f011da002d173cb511b774954f1eebbffb7fa14fd66b4d903afd056ff572209a6318879c6314b312d583c36b137f0126159f57934adf84da85d16848745bd14f029da04a8a33b754b1e82274663ab2973b6732be1645b1b988cb2513cef7ec9d833c191ba08b3b9f145a073f31fae95b12e51e3e69c04c7d180ae955472413def8b17b7595ec91e84f04198e7040cb4ea9691ac1101af94dd71407804b667422aed4ff4db7e5bd87d96f794619a20c5982733dee68feccfb25f93b5d8dd331b7cee2424f72e5315c277dcb373b0af2eec414fa50ae5ec456b3d2fa327a68348e7911e3286690f2ce94b560c8ce3b3d98e398a1a8bc475cae755e303217553b8bc7ec8b97f567b595740d80361d785ea9c2952d25c2cdb002314d8c888dd1703654c464309be25d240eb49301111ecdef11f9baeebb0155b55575ba33eda2b9ee8c9a2ec4ab4e61a536e5bbdc0cc04e206e0e6c42edc59d27e9fbbf3068e05bb5e9692b55b4c913ed5e7187f140d18e64aaccd338911943c625da1316306afe91077433cba06eb63c41e78ccf2c13290785946b5c951d45f7c379cc235f383ad5a94dfd5b0a5852e5a6cc9ac7c06b0c702ea7bcd7467b7d7685af0cb8c07de03cf9774a630e6be492cbc38b5227827f6359deb27d42321808d53cd4099f197467e2ee6a96b8e47c90c8e0fde9c5d78c72b3a9fc1825ad7393b6baee982b9848cc0e78fd05cd3e757522a23454915ab6cdbc542ee520eae893447f63e079f321a3c2a8d83a88f67e4378962ed0dc77769f59b7b6fe751031c4a5828e235b70ae88e196cde9849bd2e709289e321b4d84a8bf02a685a4eb821e97244079d29031f7dced48b886a8cf3daac75d5a55f7881942da3a294531d9836d0aa500b212cd3d5232d56d28c8890a1dca57889b3b5b7561fb976dd88efc177ccc8c77eb39a6aa0cbe42ef278d4bd052bf37ff7ac43f561be678731a203b2ad01b7524e11bf26e43696387ea6949ecc0e21773273105ee936f4d1c220c904f380e621a78eb5893d64cc3980a696bc76e54660c77d59fa1d6ad448b046f2be0ceb1244db798a39ec527f79838a5d40d83d7920cde0679299d5d1eb2e3e4f33164c7da06c9c91e05580b4dfda0a6fc1397e416f3f4fd47cb01ec600029f7194e98ee234207b49710203c8ee841e8099a41efcd401fc9cd26b85ce0fc5157438ee6f00c72f2a22e6c9e675b3c0738de190054b2162d083528b73de95a249f13e93b85af2a510b3ea42d16c0e550c9164c1a8cd5b52ea6acf03771c7be1160160708ebb6cb1d0a078d4378badc5915fb0148b2bd0eb513952cf3d867f20e40aa08357f94d4df4e2eb4f2185fd31e7457cc8b35d86d6bf6a0178579500189a54a2283c3d184e95fbd98635868e2d94959ceb009d8bcc41a032fabec88d2e5de8dc45145e6f4b849eea303658ad9affa944f4469653204a6198d3ed511f7de8e6a31f06822f12ff3e7a34cc6d1246235ba02e0394b311fe4b8320acf7cb582d08fd0c7af5649c67936f8f27633cb12792e9c5fe172e7c4b7beae33a54d1cd2960c045797275307153c05b91d51f62e0a99ceadbb79eba1bc554aab5aaf4b83332d45a72210ce768069ea156380aff19d87315fd32eab3f6dcf969f576c993c5733e198a24ee9872ef6d01a136be001e848aaa2ae845603bd587bb83c64c1e0d4c07353620d4d84d42d03ba6cafe996ab18ad21c3a9348efea3517944438cccd49b791364097e03f7d9310db5c245d8dbfe9d7c998052407f8008d55743c47566c0c91d09714c7f1e33a213016196876c6d2294cd719535cea3347c7dcbc647351629cdb0b3bc99922c62033c8dcb6bff7f5baebb406ec46ce5d92ef8d3db19b65ce4d0f8c44de70379c9d4423dbdabd18bee508c0785ce82783a2f3edf2b03ad878cb48aae291703cb3101a5fb17811cf700c41d1fa5cea7b1589a58edc6845119bcb95fb778c1710088210412ee6245ca09fdacbed5b90530ae77c2663749772d537c17a4137ead646285d78555df655b3f8d3b5d476f4eca70ae93d0daccef8ab802fbf04b678194b581ba92abb1e2b9dd1cdf0c746ad91fb2e172bc95cbf4c9af98fb87d7c55107c3cc5baf88cee011f1ef96eba29fde66bdcdbf88bdbb8e1b425f13eee70eefd569b77c590b2dcb7ecca047d9aad226497a34d387688a3a135fe8077752e6d7f2889e679cca03fe9beb3ff6c0a74afd9ff087c499a7c88d6d29de02f2b4f9c48c76e483c466aeb7cfcf528ef9b397d02c5d58ef1fc2ade1f87cb5e851f809cc9bd067628de4f9e9f67cbb194a11bdcd8a2db93d77995b7cf7c81a902173faf1f6f86102cfe36bb2bb6a9ae28c1ae3176af495128756eb53ca6eb6b13d56cd97864c935841e3e68c816382791481d6766f11a99eb9c51363acdf0fd58179c39dd412e214c8b65625cdf3e39a1f1e77e56acff0de95442a4df9f8913c0e4bbe78e3ffcbb69616c10d4c9fa8f6e8b529ac1b3ea2bfa75d14781e1682fc60145796337574962f390f3cdcc5f8538216fbebad0680a1a9a22aa5816813eaf037c90efdecb72431863c1b61896ac77f2f55183f92be3c5bedb2d2911aaa5e6aa5c75588ac55f8ff1f62052db9ac9656795ce755d2c0bcf711a65646d113b7700583b743381fb4d72726793992b95f323ee06c53a519f3dd09af91c5317af43aaf03b4d505766f81db251e3f6c824fe41281f68128db9201c48a517bea8789181ef4d05a8618cadf5adf9599974a0dd82abba0ed6360c304cfaea6d2ef81613fdc5b5dff060e7e8bd05b1b712951c4eadd268208bae35650201bee6014ea40df5d23115581bfdaecd2cf596584307ed986bcdf569b95edb95a3cdd7beac3df9df055364572f0c34e90b7cc0971acc18a9e33ec3202be21bb298ea9c6861d05a00582d907904c56f7aef95581edf53ad021b2946f01c0ebfc4922d5dbdb654ff1cd19398cccb3fc6a1401d94706b1dd5176141acfcf2bc9a524bce1b2f30db241a7dbe3229d34a5181ab706919d8d44a7f10e899c752e7822baa380b716a4039ac2220063dba37f82438fe3e8dd855c61e11165a99d85d7de100ab30ec69f212f788ba5e475a2e3b2ecbae7024cd14cf245eddc703baabb543ee5c4a09b86819701d40a8d5e2daf013375211850fbd243250d965c0dfda19d8fc02f0334623cc168c8b9926db55b4b850fcddec183e61fa6533b698898dffe69f99d0490d67f8bfe4ea07ec20f54bcb1dc5f273a2dd7df9b7c9d0cd7530d6a1c1781214643f6a6341bf5bb94e89b6f520c7a905db533ff15d928a2126d8e357ec9d5e6aff6fae7a54158b04d01f1a9773381161046f448d190b1de7dac85f263e63f4f9c93c7dde61197cca8c336</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">只有最可爱的邹邹同学能够查看</span>      </label>    </div>  </div></div><script data-pjax src="/KyrieCBlog/lib/hbe.js"></script><link href="/KyrieCBlog/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 生命中的一束光 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 我错了 </tag>
            
            <tag> 我罪该万死 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>环境搭建</title>
      <link href="/KyrieCBlog/2023/09/21/environment_built/"/>
      <url>/KyrieCBlog/2023/09/21/environment_built/</url>
      
        <content type="html"><![CDATA[<h1 id="前后端及数据库环境重新搭建"><a href="#前后端及数据库环境重新搭建" class="headerlink" title="前后端及数据库环境重新搭建"></a>前后端及数据库环境重新搭建</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>由于之前不懂分类整理文件导致C盘爆满、文件杂乱、环境搭建的乱七八糟，学习的内容一知半解不够踏实，一直想好好整理一下电脑一拖再拖，专升本上岸新学期开学来到一个新环境，重新开始，脚踏实地沉下心来从头学习一下。</p><h2 id="前端环境搭建"><a href="#前端环境搭建" class="headerlink" title="前端环境搭建"></a>前端环境搭建</h2><h3 id="安装Node-js-nvm"><a href="#安装Node-js-nvm" class="headerlink" title="安装Node.js/nvm"></a>安装Node.js/nvm</h3><p>Node.js官网：<a href="https://nodejs.org/zh-cn">Node.js (nodejs.org)</a></p><p>个人建议安装nvm：参考博客：<a href="https://blog.csdn.net/dream2222222222/article/details/125290664">nvm的下载，安装与使用详解_nvm下载_程序猿的散文诗的博客-CSDN博客</a></p><h3 id="安装VScode-Hbuilder-WebStrom"><a href="#安装VScode-Hbuilder-WebStrom" class="headerlink" title="安装VScode/Hbuilder/WebStrom"></a>安装VScode/Hbuilder/WebStrom</h3><h2 id="Java后端环境搭建"><a href="#Java后端环境搭建" class="headerlink" title="Java后端环境搭建"></a>Java后端环境搭建</h2><h3 id="Jdk安装与配置"><a href="#Jdk安装与配置" class="headerlink" title="Jdk安装与配置"></a>Jdk安装与配置</h3><p>Jdk下载：<a href="https://how2j.cn/k/helloworld/helloworld-jdk/141.html">HelloWorld系列教材 （一）- 手把手教你做JDK环境变量配置 (how2j.cn)</a></p><p>Jdk配置环境变量：<a href="https://how2j.cn/k/helloworld/helloworld-jdk/141.html#step2058">HelloWorld系列教材 （一）- 手把手教你做JDK环境变量配置 (how2j.cn)</a></p><p>Idea安装：官网下载可试用30天，破解版本各显神通吧</p><p>Idea配置Maven：参考博客：<a href="https://blog.csdn.net/m0_48170265/article/details/129081544">详解Maven下载安装及IDEA配置Maven （2023最新）_maven 最新版本_三月枫火的博客-CSDN博客</a></p><p>（Idea工作空间更改、Maven配置镜像与更改依赖下载地址）</p><h2 id="Mysql数据库及工具"><a href="#Mysql数据库及工具" class="headerlink" title="Mysql数据库及工具"></a>Mysql数据库及工具</h2><h3 id="Mysql安装"><a href="#Mysql安装" class="headerlink" title="Mysql安装"></a>Mysql安装</h3><p>Mysql安装：参考博客：<a href="https://blog.csdn.net/fonrye/article/details/127279514">数据库-Sql–windows11安装MySQL5.7_mysql5.7.39win11安装_山旮旯的脆带鱼的博客-CSDN博客</a>（建议使用安装程序MySQL Installer，如安装错误可使用该安装向导进行卸载）</p><h4 id="Mysql安装问题-mysql5-6版本过低安装失败，mysql5-7安装时启动服务失败"><a href="#Mysql安装问题-mysql5-6版本过低安装失败，mysql5-7安装时启动服务失败" class="headerlink" title="Mysql安装问题:mysql5.6版本过低安装失败，mysql5.7安装时启动服务失败"></a>Mysql安装问题:mysql5.6版本过低安装失败，mysql5.7安装时启动服务失败</h4><h4 id="原因：电脑名带中文或特殊符号，电脑名🌈Smile无法识别🌈，再也不花里胡哨了"><a href="#原因：电脑名带中文或特殊符号，电脑名🌈Smile无法识别🌈，再也不花里胡哨了" class="headerlink" title="原因：电脑名带中文或特殊符号，电脑名🌈Smile无法识别🌈，再也不花里胡哨了"></a>原因：电脑名带中文或特殊符号，电脑名🌈Smile无法识别🌈，再也不花里胡哨了</h4><h3 id="数据库工具Sqlyog-navicat"><a href="#数据库工具Sqlyog-navicat" class="headerlink" title="数据库工具Sqlyog/navicat"></a>数据库工具Sqlyog/navicat</h3><p>Sqlyog安装：参考博客：<a href="https://blog.csdn.net/qq_33840251/article/details/90576337">SQLyog 64位破解版 v12.09_sqlyog - 64 bit trial_清欢ysy的博客-CSDN博客</a></p><p>下载地址：<a href="http://soft.xue51.com/sqlyog_2982.zip">http://soft.xue51.com/sqlyog_2982.zip</a></p><p>注册码：</p><p>名称：ddooo</p><p>证书密钥：8d8120df-a5c3-4989-8f47-5afc79c56e7c</p><h2 id="Git安装与使用"><a href="#Git安装与使用" class="headerlink" title="Git安装与使用"></a>Git安装与使用</h2><p>参考博客：<a href="https://blog.csdn.net/mukes/article/details/115693833">Git 详细安装教程（详解 Git 安装过程的每一个步骤）_git安装-CSDN博客</a>😊</p><p>基本使用推送方法：<a href="https://blog.csdn.net/qq_38215042/article/details/109406958">将本地项目上传至gitee的方法截图+详细步骤_上传gitee的用户名和密码是什么时候建的-CSDN博客</a></p><p><a href="https://blog.csdn.net/lareinax5/article/details/124271339?spm=1001.2101.3001.6661.1&amp;utm_medium=distribute.pc_relevant_t0.none-task-blog-2~default~BlogCommendFromBaidu~Rate-1-124271339-blog-122705321.235%5Ev38%5Epc_relevant_sort_base1&amp;depth_1-utm_source=distribute.pc_relevant_t0.none-task-blog-2~default~BlogCommendFromBaidu~Rate-1-124271339-blog-122705321.235%5Ev38%5Epc_relevant_sort_base1&amp;utm_relevant_index=1">Git命令提交代码步骤_git提交代码命令_lareinax5的博客-CSDN博客</a></p>]]></content>
      
      
      <categories>
          
          <category> 日常 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日常 </tag>
            
            <tag> 环境搭建 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
